{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/app-install-prompt/app-install-prompt.component.ts","./src/app/components/app-install-prompt/app-install-prompt.component.html","./src/app/components/data/data.component.ts","./src/app/components/data/data.component.html","./src/app/components/driver-route/driver-route.component.ts","./src/app/components/driver-route/driver-route.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/image-thumbnail/image-thumbnail.component.ts","./src/app/components/image-thumbnail/image-thumbnail.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/logo/logo.component.ts","./src/app/components/logo/logo.component.html","./src/app/components/logout/logout.component.ts","./src/app/components/logout/logout.component.html","./src/app/components/order-confirmation/order-confirmation.component.ts","./src/app/components/order-confirmation/order-confirmation.component.html","./src/app/components/order-details-dialog/order-details-dialog.component.ts","./src/app/components/order-details-dialog/order-details-dialog.component.html","./src/app/components/order-exists/order-exists.component.ts","./src/app/components/order-exists/order-exists.component.html","./src/app/components/order-form/order-form.component.ts","./src/app/components/order-form/order-form.component.html","./src/app/components/order-links/order-links.component.ts","./src/app/components/order-links/order-links.component.html","./src/app/components/orders/orders.component.ts","./src/app/components/orders/orders.component.html","./src/app/components/password-request/password-request.component.ts","./src/app/components/password-request/password-request.component.html","./src/app/components/password-reset/password-reset.component.ts","./src/app/components/password-reset/password-reset.component.html","./src/app/components/preorder-form/preorder-form.component.ts","./src/app/components/preorder-form/preorder-form.component.html","./src/app/components/preorder-links/preorder-links.component.ts","./src/app/components/preorder-links/preorder-links.component.html","./src/app/components/product-details-dialog/product-details-dialog.component.ts","./src/app/components/product-details-dialog/product-details-dialog.component.html","./src/app/components/products/products.component.ts","./src/app/components/products/products.component.html","./src/app/guards/auth.guard.ts","./src/app/interceptors/auth.interceptor.ts","./src/app/services/auth.service.ts","./src/app/services/driver-route.service.ts","./src/app/services/global-error-handler.service.ts","./src/app/services/order-form.service.ts","./src/app/services/order-links.service.ts","./src/app/services/order.services.ts","./src/app/services/preorder.service.ts","./src/app/services/products.service.ts","./src/app/services/pwa.service.ts","./src/app/services/snackbar.service.ts","./src/app/services/vendors.service.ts","./src/environments/environment.development.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DriverRouteComponent } from './components/driver-route/driver-route.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { OrderLinksComponent } from './components/order-links/order-links.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { LogoutComponent } from './components/logout/logout.component';\nimport { ProductsComponent } from './components/products/products.component';\nimport { OrderConfirmationComponent } from './components/order-confirmation/order-confirmation.component';\nimport { OrderExistsComponent } from './components/order-exists/order-exists.component';\nimport { OrderFormComponent } from './components/order-form/order-form.component';\nimport { DataComponent } from './components/data/data.component';\nimport { OrdersComponent } from './components/orders/orders.component';\nimport { VendorLinksComponent } from './components/preorder-links/preorder-links.component'; // Updated the import to match the renamed component\nimport { PreorderFormComponent } from './components/preorder-form/preorder-form.component'; // Import the new PreorderFormComponent\nimport { AuthGuard } from './guards/auth.guard';\nimport { PasswordRequestComponent } from './components/password-request/password-request.component';\nimport { PasswordResetComponent } from './components/password-reset/password-reset.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  { path: 'home', component: HomeComponent, title: 'Home', canActivate: [AuthGuard] },\n  { path: 'driver', component: DriverRouteComponent, title: 'Driver Route', canActivate: [AuthGuard] },\n  { path: 'order-links', component: OrderLinksComponent, title: 'Order Links' },\n  { path: 'login', component: LoginComponent, title: 'Login' },\n  { path: 'logout', component: LogoutComponent, title: 'Logout' },\n  { path: 'password-request', component: PasswordRequestComponent, title: 'Password Request' },\n  { path: 'password-reset/:token', component: PasswordResetComponent, title: 'Password Reset' },\n  { path: 'products', component: ProductsComponent, title: 'Products', canActivate: [AuthGuard] },\n  { path: 'customer/:id/order-confirmation', component: OrderConfirmationComponent, title: 'Order Confirmation' },\n  { path: 'customer/:id/order-exists', component: OrderExistsComponent, title: 'Order Exists' },\n  { path: 'customer/:id/order-form', component: OrderFormComponent, title: 'Order Form' },\n  { path: 'data', component: DataComponent, title: 'Data', canActivate: [AuthGuard] },\n  { path: 'orders', component: OrdersComponent, title: 'Orders', canActivate: [AuthGuard] },\n  { path: 'preorder-links', component: VendorLinksComponent, title: 'Vendor Links', canActivate: [AuthGuard] },\n  { path: 'preorder-form/:vendorId', component: PreorderFormComponent, title: 'Preorder Form', canActivate: [AuthGuard] }, // New route for PreorderFormComponent\n  { path: '**', redirectTo: 'login' }, // Wildcard route to handle unmatched paths, redirect to login\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { ChangeDetectionStrategy, Component, isDevMode } from '@angular/core';\nimport { Router, RouterOutlet } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  standalone: true,\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  imports: [CommonModule, MatToolbarModule, MatIconModule, RouterOutlet],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent {\n  isDevMode: boolean = isDevMode();\n  apiUrl = environment.apiUrl;\n  showWarning = false;\n  //isOrderForm: boolean = false;\n\n  constructor(private router: Router) {\n    // Check that UAT is not using the prod backend\n    if (this.isDevMode && this.apiUrl.includes('prod')) {\n      this.showWarning = true;\n      alert('WARNING: Angular is in Dev mode but connected to production !!!');\n    }\n  }\n\n  //ngOnInit(): void {\n  //  // Check if we are on the order form\n  //  this.router.events.subscribe((event) => {\n  //    if (event instanceof NavigationEnd) {\n  //      const currentRoute = event.urlAfterRedirects;\n  //      this.isOrderForm = currentRoute.includes('order-') && !currentRoute.includes('order-links');\n  //    }\n  //  });\n  //}\n}\n","<main>\n    <router-outlet></router-outlet>\n</main>\n\n<!-- Footer with Navigation and Social Icons-->\n<footer class=\"mat-drawer-container\">\n    <div class=\"container\">\n        <div class=\"text-align-center\">\n            © 2024 - Pacific Fresh Fish Company\n            <div *ngIf=\"isDevMode\" class=\"dev-mode\">UAT ENVIRONMENT</div>\n            <div *ngIf=\"isDevMode\" class=\"dev-mode\">{{apiUrl}}</div>\n        </div>\n    </div>\n</footer>\n","import { Platform } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PwaService } from 'src/app/services/pwa.service';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\n\n@Component({\n  standalone: true,\n  selector: 'app-install-prompt',\n  imports: [CommonModule],\n  templateUrl: './app-install-prompt.component.html',\n  styleUrls: ['./app-install-prompt.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppInstallPromptComponent implements OnInit, OnDestroy {\n  beforeInstallPromptHandler?: (event: BeforeInstallPromptEvent) => void;\n  deferredPrompt: BeforeInstallPromptEvent | null = null;\n  isPwa$: Observable<boolean>;\n  isIosButNotPwa: boolean;\n  isPwa: boolean;\n  plat: boolean;\n  userAgent = window.navigator.userAgent.toLowerCase();\n\n  constructor(private pwaService: PwaService, private snackbarService: SnackbarService, public platform: Platform) {\n    this.isPwa$ = this.pwaService.isPwa$;\n    this.isPwa = this.isRunningAsPWA();\n    this.isIosButNotPwa = this.isIOS() && !this.isRunningAsPWA();\n    this.plat = this.isIOS();\n  }\n\n  ngOnInit() {\n    console.log('ngOnInit');\n    this.beforeInstallPromptHandler = (event: BeforeInstallPromptEvent) => {\n      console.log('beforeinstallprompt');\n\n      // Prevent the mini-infobar from appearing\n      event.preventDefault();\n      this.deferredPrompt = event;\n      this.pwaService.updateValue(true);\n    };\n\n    window.addEventListener('beforeinstallprompt', this.beforeInstallPromptHandler as EventListener);\n  }\n\n  ngOnDestroy() {\n    window.removeEventListener('beforeinstallprompt', this.beforeInstallPromptHandler as EventListener);\n    this.pwaService.updateValue(false);\n  }\n\n  promptInstall() {\n    if (this.deferredPrompt) {\n      this.deferredPrompt.prompt(); // Show the install prompt\n      this.deferredPrompt.userChoice.then(() => {\n        this.deferredPrompt = null;\n        this.pwaService.updateValue(false);\n      });\n    }\n  }\n\n  showIosInstructions() {\n    this.snackbarService.showInfo(\"To install this web app on your device, tap the Menu button and then 'Add to Home Screen' button\", 20000);\n  }\n\n  private isIOS(): boolean {\n    const userAgent = window.navigator.userAgent.toLowerCase();\n    return /iphone|ipad|ipod|mac/.test(userAgent) || this.platform.IOS;\n  }\n\n  private isRunningAsPWA(): boolean {\n    const isStandalone = window.matchMedia('(display-mode: standalone)').matches;\n    const isIOSStandalone = (navigator as any).standalone === true;\n    const isFullscreen = window.innerHeight === screen.height;\n\n    return isStandalone || isIOSStandalone || isFullscreen;\n  }\n}\n\ninterface BeforeInstallPromptEvent extends Event {\n  readonly platforms: string[];\n  prompt(): Promise<void>;\n  userChoice: Promise<{ outcome: 'accepted' | 'dismissed'; platform: string }>;\n}\n","@if ( (isPwa$ | async) === true) {\n<div class=\"install-banner\">\n  <button mat-raised-button color=\"primary\" (click)=\"promptInstall()\">\n    Install as an Application\n  </button>\n</div>\n} @else if (isIosButNotPwa) {\n<div class=\"install-banner\">\n  <button mat-raised-button color=\"primary\" (click)=\"showIosInstructions()\">\n    Install as an Application\n  </button>\n</div>\n}","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { environment } from 'src/environments/environment'; // Import the environment configuration\n\n@Component({\n  selector: 'app-data',\n  templateUrl: './data.component.html',\n  styleUrls: ['./data.component.css'],\n})\nexport class DataComponent {\n  private apiUrl = environment.apiUrl;\n  uploadUrl: string = `${this.apiUrl}/database/csv/upload/profiles`;\n\n  constructor(private http: HttpClient, private snackBar: MatSnackBar) {}\n\n  downloadOrders() {\n    const url = `${this.apiUrl}/database/csv/download/orders`;\n\n    this.http.get(url, { responseType: 'blob' }).subscribe(\n      (response: Blob) => {\n        const blob = new Blob([response], { type: 'text/csv' });\n        const downloadURL = window.URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = downloadURL;\n        link.download = 'orders.csv';\n        link.click();\n        window.URL.revokeObjectURL(downloadURL);\n      },\n      (error) => {\n        console.error('Download failed:', error);\n        this.snackBar.open('Failed to download orders. Please try again later.', 'Close', { duration: 3000 });\n      },\n    );\n  }\n\n  onFileSelected(event: Event) {\n    const fileInput = event.target as HTMLInputElement;\n    if (fileInput.files && fileInput.files.length > 0) {\n      const file = fileInput.files[0];\n      this.uploadFile(file);\n    }\n  }\n\n  uploadFile(file: File) {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    this.snackBar.open('Processing your CSV file', '', { duration: 20000 });\n\n    this.http.post(this.uploadUrl, formData).subscribe({\n      next: () => {\n        this.snackBar.open('All Done', '', { duration: 3000 });\n      },\n    });\n  }\n}\n","<div class=\"data-container\">\n    <button class=\"action-button download-button\" (click)=\"downloadOrders()\">Download Orders</button>\n    <button class=\"action-button upload-button\" (click)=\"fileInput.click()\">Upload Profiles</button>\n    <input type=\"file\" #fileInput accept=\".csv\" style=\"display: none\" (change)=\"onFileSelected($event)\" />\n</div>\n\n<div class=\"upload-instructions\">\n    <p>CSV file required</p>\n    <p>File with these columns, in this order required:</p>\n    <ul>\n        <li>ProfileDID</li>\n        <li>SalesRepName</li>\n        <li>SalesRepCell</li>\n        <li>SalesRepEmail</li>\n        <li>ProfileID</li>\n        <li>CustomerID</li>\n        <li>CustomerName</li>\n        <li>CompItemID</li>\n        <li>ProfileDescription</li>\n        <li>ProfileInstruction</li>\n        <li>UnitTypePD</li>\n        <li>PackSizePD</li>\n        <li>SalesPrice</li>\n        <li>CustomerContactName</li>\n        <li>CustomerCell</li>\n        <li>CustomerEmail</li>\n        <li>Company</li>\n        <li>CompanyID</li>\n    </ul>\n</div>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, SecurityContext } from '@angular/core';\nimport { DriverRouteService } from '../../services/driver-route.service';\nimport { Observable } from 'rxjs';\nimport { DeliveryStop } from 'src/app/models/delivery-stop.model';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { map, tap } from 'rxjs/operators';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { HttpEventType } from '@angular/common/http';\nimport { ImageThumbnailComponent } from '../image-thumbnail/image-thumbnail.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router'; // Import RouterModule\n\ninterface Driver {\n  name: string;\n}\n\n@Component({\n  standalone: true,\n  selector: 'app-driver-route',\n  templateUrl: './driver-route.component.html',\n  styleUrls: ['./driver-route.component.css'],\n  imports: [CommonModule, MatTableModule, ImageThumbnailComponent, RouterModule], // Add RouterModule here\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DriverRouteComponent implements OnInit {\n  readonly maxFileSize = 4 * 1024 * 1024; // 4 MB\n\n  driverNames$!: Observable<Driver[]>;\n  deliveryRoute$: Observable<DeliveryStop[]> | undefined;\n  today: string;\n  selectedFile: File | null = null;\n\n  displayedColumns: string[] = ['deliveryAddress1', 'address', 'customerPhone', 'actualArrivalTime'];\n\n  constructor(\n    private driverRouteService: DriverRouteService,\n    private snackBarService: SnackbarService,\n    private sanitizer: DomSanitizer,\n    private cdr: ChangeDetectorRef,\n  ) {\n    this.today = this.formatDate(new Date());\n  }\n\n  ngOnInit(): void {\n    this.driverNames$ = this.driverRouteService.getDrivers().pipe(\n      tap((data) => {\n        if (data && data.length > 0) {\n          this.refreshDeliverRoute(data[0].name, this.today);\n        }\n      }),\n    );\n  }\n\n  formatDate(date: Date): string {\n    const month = ('0' + (date.getMonth() + 1)).slice(-2);\n    const day = ('0' + date.getDate()).slice(-2);\n    const year = date.getFullYear();\n    return `${month}/${day}/${year}`;\n  }\n\n  refreshDeliverRoute(driverName: string, deliveryDate: string): void {\n    const formattedDate = new Date(deliveryDate).toISOString().split('T')[0]; // Ensure date is formatted as YYYY-MM-DD\n    this.deliveryRoute$ = this.driverRouteService\n      .getDeliveryRoute(driverName, formattedDate)\n      .pipe(map((deliveryStops) => this.calculateTimeDifferences(deliveryStops)));\n  }\n\n  onFileSelected(deliveryRoute: DeliveryStop, event: Event) {\n    const input = event.target as HTMLInputElement;\n    if (input.files && input.files.length > 0) {\n      const file = input.files[0];\n      if (file && file.type.startsWith('image/')) {\n        if (file.size <= this.maxFileSize) {\n          this.selectedFile = file;\n          this.uploadFile(deliveryRoute, file);\n        } else {\n          this.snackBarService.showError('File size exceeds 4 MB.');\n        }\n      } else {\n        this.snackBarService.showError('Please select an image file');\n        this.selectedFile = null;\n      }\n    }\n  }\n\n  uploadFile(deliveryRoute: DeliveryStop, file: File) {\n    this.snackBarService.showSuccess('Your file is being uploaded');\n    this.driverRouteService.uploadPhoto(deliveryRoute.id, file).subscribe({\n      next: (event) => {\n        switch (event.type) {\n          case HttpEventType.Response: {\n            const updatedDeliveryStop = event.body as DeliveryStop;\n            Object.assign(deliveryRoute, updatedDeliveryStop);\n            this.snackBarService.closeSnackBar();\n            this.cdr.detectChanges();\n          }\n        }\n      },\n    });\n  }\n\n  getGoogleMapsUrl(address2: string, address3: string): SafeUrl {\n    const url = `https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(address2 + ' ' + address3)}`;\n\n    const sanitizedUrl = this.sanitizer.sanitize(SecurityContext.URL, url);\n    if (sanitizedUrl) {\n      return this.sanitizer.bypassSecurityTrustUrl(sanitizedUrl);\n    } else {\n      return '';\n    }\n  }\n\n  private calculateTimeDifferences(deliveryStops: DeliveryStop[]): DeliveryStop[] {\n    for (let i = deliveryStops.length - 1; i > 0; i--) {\n      const currentStop = deliveryStops[i];\n      const previousStop = deliveryStops[i - 1];\n\n      const currentTime = new Date(currentStop.plannedArrivalTime).getTime();\n      const previousTime = new Date(previousStop.plannedArrivalTime).getTime();\n\n      const timeDifferenceInMinutes = Math.round((currentTime - previousTime) / 60000);\n      currentStop.timeDifference = timeDifferenceInMinutes;\n    }\n\n    if (deliveryStops.length > 0) {\n      deliveryStops[0].timeDifference = undefined; // First row will have no time difference\n    }\n    return deliveryStops;\n  }\n}\n","<div class=\"container\">\n  <!-- Make the entire image-container clickable by wrapping in a link -->\n  <a [routerLink]=\"['/home']\" class=\"image-container\">\n    <img src=\"assets/logo.png\" alt=\"Company Logo\">\n  </a>\n\n  <h2 class=\"driver-routes-title\">Driver Routes</h2>\n\n  <div class=\"filters\">\n    <div class=\"driver-filter\">\n      <label for=\"driver-name\">Driver Name:</label>\n      <select id=\"driver-name\" #driverName (change)=\"refreshDeliverRoute(driverName.value, deliveryDate2.value)\">\n        <option *ngFor=\"let driverNames of (driverNames$ | async); let i = index\" [value]=\"driverNames.name\" [selected]=\"i === 0\">{{driverNames.name}}</option>\n      </select>\n    </div>\n\n    <div class=\"delivery-date-filter\">\n      <label for=\"delivery-date\">Delivery Date:</label>\n      <input type=\"text\" id=\"delivery-date\" #deliveryDate2 [value]=\"today\" readonly class=\"delivery-date-input\">\n    </div>\n  </div>\n\n  <table mat-table *ngIf=\"deliveryRoute$ | async as dataSource\" [dataSource]=\"dataSource\" class=\"mat-elevation-z8 driver-routes-grid\" matSort>\n    <!-- Customer Column -->\n    <ng-container matColumnDef=\"deliveryAddress1\">\n      <th mat-header-cell *matHeaderCellDef class=\"no-bottom-border\">Customer</th>\n      <td mat-cell *matCellDef=\"let element\" class=\"no-bottom-border\">\n        {{element.deliveryAddress1}}\n        <div *ngIf=\"element !== dataSource[dataSource.length - 1]\" class=\"arrow-container\">\n          <i class=\"fas fa-arrow-down\"></i>\n          <span class=\"time-difference-arrow\">+{{ dataSource[dataSource.indexOf(element) + 1].timeDifference + ' m' }}</span>\n        </div>\n      </td>\n    </ng-container>\n\n    <!-- Address Column (Concatenation of Delivery Address 2 and 3) -->\n    <ng-container matColumnDef=\"address\">\n      <th mat-header-cell *matHeaderCellDef>Address</th>\n      <td mat-cell *matCellDef=\"let element\" class=\"address-column\">\n        <a [href]=\"getGoogleMapsUrl(element.deliveryAddress2, element.deliveryAddress3)\" target=\"_blank\">\n          {{element.deliveryAddress2}} {{element.deliveryAddress3}}\n        </a>\n      </td>\n    </ng-container>\n\n    <!-- Customer Phone Column -->\n    <ng-container matColumnDef=\"customerPhone\">\n      <th mat-header-cell *matHeaderCellDef class=\"wrap\">Customer Phone</th>\n      <td mat-cell *matCellDef=\"let element\" class=\"customerPhone\"><a href=\"tel:+1{{element.customerPhone}} \"> {{element.customerPhone}}</a> </td>\n    </ng-container>\n\n    <!-- Actual Arrival Time Column -->\n    <ng-container matColumnDef=\"actualArrivalTime\">\n      <th mat-header-cell *matHeaderCellDef>Arrival</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <div *ngIf=\"!element.actualArrivalTime || !element.fileUrl; else alreadyArrivedBlock\" class=\"custom-file-input\">\n          <input type=\"file\" id=\"file\" #fileInput (change)=\"onFileSelected(element, $event)\" accept=\"image/*\" required hidden>\n          <button type=\"button\" class=\"button\" (click)=\"fileInput.click()\">Arrived</button>\n        </div>\n        <ng-template #alreadyArrivedBlock>\n          <div>\n            <app-image-thumbnail [imageUrl]=\"element.fileUrl\"\n              [title]=\"element.deliveryAddress2 + ' ' + element.deliveryAddress3 + ' (' + (element.actualArrivalTime | date: 'medium') + ')'\"></app-image-thumbnail>\n          </div>\n        </ng-template>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" [ngClass]=\"{'arrived-row': row.actualArrivalTime}\"></tr>\n  </table>\n</div>","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  standalone: true,\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n  imports: [CommonModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HomeComponent implements OnInit {\n  username!: string | null;\n\n  constructor(private router: Router, private authService: AuthService) {}\n\n  ngOnInit(): void {\n    this.username = this.authService.getFullname();\n  }\n\n  navigateTo(page: string): void {\n    this.router.navigate([`/${page}`]);\n  }\n\n  logout(): void {\n    this.authService.logout();\n  }\n}\n","<div class=\"page container\">\n  <div class=\"button-container\">\n    <button class=\"nav-button\" (click)=\"navigateTo('products')\">Products</button>\n    <button class=\"nav-button\" (click)=\"navigateTo('order-links')\">New Order</button>\n    <button class=\"nav-button\" (click)=\"navigateTo('orders')\">Existing Orders</button>\n    <button class=\"nav-button\" (click)=\"navigateTo('preorder-links')\">Preorders</button> <!-- New Button -->\n    <button class=\"nav-button\" (click)=\"navigateTo('driver')\">Routes</button>\n    <button class=\"nav-button logout-button\" (click)=\"logout()\">Logout</button>\n  </div>\n\n  <div class=\"button-container user-info\">\n    Welcome, {{ username }}!\n  </div>\n\n  <div class=\"image-grid\">\n    <img src=\"assets/goldenstateseafood.png\" alt=\"GS Image\" class=\"grid-image image1\">\n    <img src=\"assets/logo.png\" alt=\"Logo Image\" class=\"grid-image image2\">\n    <img src=\"assets/fogriver3.png\" alt=\"Fog River Image\" class=\"grid-image image3\">\n    <img src=\"assets/naturecure.png\" alt=\"Nature Cure Image\" class=\"grid-image image4\">\n  </div>\n</div>","import { ChangeDetectionStrategy, Component, Input, TemplateRef } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\n\n@Component({\n  standalone: true,\n  selector: 'app-image-thumbnail',\n  templateUrl: './image-thumbnail.component.html',\n  styleUrl: './image-thumbnail.component.css',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ImageThumbnailComponent {\n  @Input() imageUrl: string = '';\n  @Input() title: string | null = ' ';\n\n  modalRef!: BsModalRef;\n\n  constructor(private modalService: BsModalService) {}\n\n  openModal(template: string | TemplateRef<unknown>) {\n    this.modalRef = this.modalService.show(template, Object.assign({}, { class: 'modal-lg' }));\n  }\n}\n","<!-- eslint-disable @angular-eslint/template/click-events-have-key-events -->\n<!-- eslint-disable @angular-eslint/template/interactive-supports-focus -->\n<div (click)=\"openModal(imageModal)\">\n    <img [src]=\"imageUrl\" alt=\"Image Thumbnail\" title=\"Click to enlarge\" class=\"thumbnail\" (keyup)=\"modalRef.hide()\">\n</div>\n\n<ng-template #imageModal>\n    <div class=\" modal-header\">\n        <h4 class=\"modal-title\">{{title}}</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body text-center\">\n        <img [src]=\"imageUrl\" alt=\"Full Image\" class=\"full-image\" (click)=\"modalRef.hide()\" (keyup)=\"modalRef.hide()\">\n    </div>\n</ng-template>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\nimport { Router, RouterModule } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { catchError, throwError } from 'rxjs';\nimport { LoginResponse } from 'src/app/models/login-response.model ';\nimport { AppInstallPromptComponent } from '../app-install-prompt/app-install-prompt.component';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  standalone: true,\n  imports: [CommonModule, MatFormFieldModule, MatInputModule, MatButtonModule, ReactiveFormsModule, RouterModule, AppInstallPromptComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoginComponent {\n  loginForm: FormGroup;\n  loading = false;\n  errorMessage: string | null = null;\n\n  constructor(private router: Router, private cdr: ChangeDetectorRef, private formBuilder: FormBuilder, private authService: AuthService) {\n    this.loginForm = this.formBuilder.group({\n      username: ['', [Validators.required]],\n      password: ['', Validators.required],\n    });\n  }\n\n  onLogin() {\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    this.errorMessage = null;\n    const { username, password } = this.loginForm.value;\n\n    this.authService\n      .login(username, password)\n      .pipe(\n        catchError((loginError) => {\n          const errorCode = loginError.status;\n          let errorMessage = loginError.error?.message || 'Please check your username and password';\n          if (errorCode == 401) {\n            errorMessage = 'Please check your username and password';\n          }\n          this.loading = false;\n          this.errorMessage = `Login failed. ${errorMessage}.`;\n          this.cdr.markForCheck();\n\n          // Rethrow the error for the global error handler\n          return throwError(() => loginError);\n        }),\n      )\n      .subscribe({\n        next: (loginResponse: LoginResponse) => {\n          const fullname = `${loginResponse.firstName ?? ''} ${loginResponse.lastName ?? ''}`.trim();\n          this.authService.saveFullnameAndToken(fullname, loginResponse.token);\n          this.router.navigate(['/products']);\n        },\n      });\n  }\n}\n","<div class=\"container\">\n    <div class=\"login-container\">\n        <div class=\"logo-container\">\n            <img src=\"assets/logo.png\" alt=\"Company Logo\" class=\"logo\">\n        </div>\n\n        <h1>Login</h1>\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin()\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Username</mat-label>\n                <input matInput type=\"text\" formControlName=\"username\" placeholder=\"Enter your username\" autocomplete=\"username\">\n            </mat-form-field>\n\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Password</mat-label>\n                <input matInput type=\"password\" formControlName=\"password\" placeholder=\"Enter your password\" autocomplete=\"current-password\">\n            </mat-form-field>\n\n            <a [routerLink]=\"['/password-request']\">\n                Forgot password ?\n            </a>\n\n            <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"loading || loginForm.invalid\">\n                <span *ngIf=\"!loading\">Login</span>\n                <span *ngIf=\"loading\">Logging in...</span>\n            </button>\n        </form>\n\n        <div *ngIf=\"errorMessage\" class=\"error-message\">\n            {{ errorMessage }}\n        </div>\n    </div>\n</div>\n\n<app-install-prompt></app-install-prompt>","import { CommonModule } from '@angular/common';\nimport { Component, Input, OnChanges } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-logo',\n  standalone: true,\n  imports: [CommonModule, RouterModule],\n  templateUrl: './logo.component.html',\n  styleUrls: ['./logo.component.css'],\n})\nexport class LogoComponent implements OnChanges {\n  @Input() companyId!: number;\n\n  imageSrc = 'assets/fogriver.png';\n  imageBackgroundColor = '#000000';\n  isLoggedIn: boolean = false;\n\n  constructor(private authService: AuthService) {\n    this.isLoggedIn = authService.isLoggedIn();\n  }\n\n  ngOnChanges(): void {\n    if (this.companyId === 14) {\n      this.imageSrc = 'assets/fogriver.png';\n      this.imageBackgroundColor = '#000000'; // Black background\n    } else {\n      this.imageSrc = 'assets/logo.png';\n      this.imageBackgroundColor = 'rgba(0, 16, 46, 1)'; // Dark blue background\n    }\n  }\n}\n","@if(isLoggedIn)\n{\n<a [routerLink]=\"['/home']\">\n    <div *ngIf=\"companyId\" class=\"image-container\" [ngStyle]=\"{'background-color': imageBackgroundColor}\">\n        <img [src]=\"imageSrc\" alt=\"Company Logo\">\n    </div>\n</a>\n} @else {\n<div *ngIf=\"companyId\" class=\"image-container\" [ngStyle]=\"{'background-color': imageBackgroundColor}\">\n    <img [src]=\"imageSrc\" alt=\"Company Logo\">\n</div>\n}","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n})\nexport class LogoutComponent {\n  constructor(private authService: AuthService) {\n    this.authService.logout();\n  }\n}\n","<br /><br /><br />\n\n<h1 style=\"padding-left: 200px;\">You have been logged out.</h1>\n\n<br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Location, CommonModule } from '@angular/common';\nimport { LogoComponent } from '../logo/logo.component';\nimport { OrderConfirmation } from 'src/app/models/order-confirmation.model';\n\n@Component({\n  standalone: true,\n  selector: 'app-order-confirmation',\n  templateUrl: './order-confirmation.component.html',\n  styleUrls: ['./order-confirmation.component.css'],\n  imports: [CommonModule, LogoComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationComponent implements OnInit {\n  orderData!: OrderConfirmation;\n  companyId!: number;\n\n  constructor(private router: Router, private location: Location) {}\n\n  ngOnInit(): void {\n    this.orderData = history.state['order']; // Access the passed data here'\n    this.companyId = history.state['companyId'];\n  }\n\n  goBack(): void {\n    this.router.navigate([`/customer/${this.orderData.customerId}/order-form`]);\n  }\n}\n","<div class=\"container\">\n\n  <app-logo [companyId]=\"companyId\"></app-logo>\n\n  <h2>Hello {{ orderData.customerName }},</h2>\n  <p>Thank you for your order. Here are the details of your order:</p>\n  <br>\n  <table class=\"order-grid\" id=\"order-grid\">\n    <thead class=\"sticky\">\n      <tr>\n        <th>Description</th>\n        <th>Unit Type</th>\n        <th>Pack Size</th>\n        <th>Price</th>\n        <th>Qty</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let product of orderData.profiles\">\n        <td>{{ product.profileDescription }}</td>\n        <td>{{ product.unitType }}</td>\n        <td>{{ product.packSize }}</td>\n        <td class=\"price\">{{ product.salesPrice | number:'1.2-2' }}</td>\n        <td>{{ product.quantity }}</td>\n      </tr>\n    </tbody>\n  </table>\n\n  <div>\n    <div class=\"total\"><strong>Total: </strong>\n      <span id=\"total-amount\">{{ orderData.totalPrice| currency:'USD':true }}</span>\n    </div>\n  </div>\n\n  <div>\n    <p>Delivery date: {{orderData.deliveryDate | date: 'MM/dd/yyyy'}}</p>\n  </div>\n  <div *ngIf=\"orderData.shipToId\">\n    <p>Delivery location: {{orderData.shipToName}}</p>\n  </div>\n\n\n  <p>Thank you,<br>Your Sales Team</p>\n  <button class=\"button\" (click)=\"goBack()\">Back</button>\n</div>","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { CommonModule } from '@angular/common';\nimport { Order } from 'src/app/models/order.model';\n\n@Component({\n  standalone: true,\n  selector: 'app-order-details-dialog',\n  templateUrl: './order-details-dialog.component.html',\n  styleUrls: ['./order-details-dialog.component.css'],\n  imports: [CommonModule, MatDialogModule, MatButtonModule],\n})\nexport class OrderDetailsDialogComponent {\n  constructor(@Inject(MAT_DIALOG_DATA) public order: Order, private dialogRef: MatDialogRef<OrderDetailsDialogComponent>) {}\n\n  closeDialog(): void {\n    this.dialogRef.close();\n  }\n}\n","<h2 mat-dialog-title>Order Details</h2>\n<mat-dialog-content>\n  <p><strong>Customer Name:</strong> {{ order.customerName }}</p>\n  <p><strong>Order Date:</strong> {{ order.deliveryDate | date }}</p>\n  <p><strong>Customer PO:</strong> {{ order.customerPo }}</p>\n  <p><strong>Sales Rep:</strong> {{ order.salesRepName }}</p>\n  <p><strong>Ship To:</strong> {{ order.shipToName }}</p>\n  <p><strong>Total Price:</strong> {{ order.totalPrice | currency }}</p>\n\n  <!-- Profiles section -->\n  <h3>Profiles</h3>\n  <table class=\"profile-table\">\n    <thead>\n      <tr>\n        <th>ID</th>\n        <th class=\"description-column\">Description</th>\n        <th>Unit Type</th>\n        <th>Pack Size</th>\n        <th>Quantity</th>\n        <th>Sales Price</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let profile of order.profiles\">\n        <td>{{ profile.id }}</td>\n        <td class=\"description-column\">{{ profile.profileDescription }}</td>\n        <td>{{ profile.unitType }}</td>\n        <td>{{ profile.packSize }}</td>\n        <td>{{ profile.quantity }}</td>\n        <td>{{ profile.salesPrice | currency }}</td>\n      </tr>\n    </tbody>\n  </table>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-button mat-dialog-close>Close</button>\n</mat-dialog-actions>","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { LogoComponent } from '../logo/logo.component';\nimport { OrderConfirmation } from 'src/app/models/order-confirmation.model';\n\n@Component({\n  standalone: true,\n  selector: 'app-order-exists',\n  templateUrl: './order-exists.component.html',\n  styleUrls: ['./order-exists.component.css'],\n  imports: [CommonModule, LogoComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderExistsComponent implements OnInit {\n  orderData!: OrderConfirmation;\n  companyId!: number;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.orderData = history.state['order']; // Access the passed data here\n    this.companyId = history.state['companyId'];\n  }\n\n  goBack(): void {\n    window.history.back();\n  }\n}\n","<div class=\"container\">\n  <app-logo [companyId]=\"companyId\"></app-logo>\n\n  <h2>Existing Order</h2>\n  <div class=\"error-message\" style=\"color: red;\">\n    We already have an order for you placed on this delivery date. If you would like it changed please contact your sales rep.\n  </div>\n  <br>\n  <table class=\"order-grid\" id=\"order-grid\">\n    <thead class=\"\" sticky>\n      <tr>\n        <th>Product Description</th>\n        <th>Unit Type</th>\n        <th>Pack Size</th>\n        <th>Price</th>\n        <th>Qty</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let profile of orderData.profiles\">\n        <td>{{ profile.profileDescription }}</td>\n        <td>{{ profile.unitType }}</td>\n        <td>{{ profile.packSize }}</td>\n        <td class=\"price\">{{ profile.salesPrice| currency:'USD':true }}</td>\n        <td>{{ profile.quantity }}</td>\n      </tr>\n    </tbody>\n  </table>\n\n  <div>\n    <div class=\"total\"><strong>Total: </strong>\n      <span id=\"total-amount\">{{ orderData.totalPrice| currency:'USD':true }}</span>\n    </div>\n  </div>\n\n  <div>\n    <p>Sales rep: {{orderData.salesRepName}}</p>\n  </div>\n  <div>\n    <p>Delivery date: {{orderData.deliveryDate | date: 'MM/dd/yyyy'}}</p>\n  </div>\n  <div *ngIf=\"orderData.shipToId\">\n    <p>Delivery location: {{orderData.shipToName}}</p>\n  </div>\n\n\n\n  <button class=\"button\" (click)=\"goBack()\">Back</button>\n</div>","import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormGroup, ReactiveFormsModule, ValidationErrors, Validators } from '@angular/forms';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LogoComponent } from '../logo/logo.component';\nimport { Order } from 'src/app/models/order.model';\nimport { OrderRequest } from 'src/app/models/order-request.model';\nimport { ProfileRequest } from 'src/app/models/profile-request.model';\nimport { OrderFormService } from 'src/app/services/order-form.service';\nimport { Profile } from 'src/app/models/profile.model';\nimport { ParamMap } from '@angular/router';\n\n@Component({\n  standalone: true,\n  selector: 'app-order-form',\n  templateUrl: './order-form.component.html',\n  styleUrls: ['./order-form.component.css'],\n  imports: [CommonModule, ReactiveFormsModule, LogoComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderFormComponent implements OnInit {\n  order!: Order;\n  hasSpecials = false;\n  orderForm!: FormGroup;\n  submitted: boolean = false;\n  customerId!: number;\n\n  // New properties for modal functionality\n  showModal = false;\n  currentOrderItems: any[] = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private snackBarService: SnackbarService,\n    private orderService: OrderFormService,\n    private route: ActivatedRoute,\n    private cdr: ChangeDetectorRef,\n  ) {}\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params: ParamMap) => {\n      const id = params.get('id');\n      this.customerId = id ? +id : NaN;\n      this.loadOrderData(this.customerId);\n    });\n  }\n\n  loadOrderData(customerId: number): void {\n    this.orderService.getOrderData(customerId).subscribe({\n      next: (order: Order) => {\n        order.profiles.sort((a, b) => a.profileDescription.localeCompare(b.profileDescription));\n        this.order = order;\n        this.hasSpecials = this.order.profiles.some((profile) => profile.isSpecial);\n        const shipToValidators = order.shipTos?.length ? [Validators.required] : [];\n\n        this.orderForm = this.fb.group({\n          customerId: [order.customerId],\n          deliveryDate: ['', [Validators.required, this.dateAfterTomorrowValidator, this.dateWithinThreeMonthsValidator, this.dateNotOnSundayValidator]],\n          shipToId: ['', shipToValidators],\n          customerPo: [''],\n          totalPrice: [0],\n          profiles: this.fb.array(\n            this.order.profiles.map((profile) => this.createProfileGroup(profile)),\n            [this.atLeastOneQuantityValidator],\n          ),\n        });\n        this.cdr.markForCheck();\n      },\n    });\n  }\n\n  get formControls() {\n    return this.orderForm.controls;\n  }\n\n  get profileControls(): FormArray {\n    return this.orderForm.get('profiles') as FormArray;\n  }\n\n  get totalPrice(): number {\n    let totalPrice = 0;\n    for (let i = 0; i < this.order.profiles.length; i++) {\n      const quantity = this.profileControls.at(i).get('quantity')?.value || 0;\n      const packSize = this.order.profiles[i].packSize || 0;\n      const price = this.order.profiles[i].salesPrice || 0;\n      totalPrice += quantity * packSize * price;\n    }\n    return totalPrice;\n  }\n\n  getRowTotalPrice(index: number): number {\n    const quantity = this.profileControls.at(index).get('quantity')?.value || 0;\n    const packSize = this.order.profiles[index].packSize || 0;\n    const price = this.order.profiles[index].salesPrice || 0;\n    return quantity * packSize * price;\n  }\n\n  createProfileGroup(profile: Profile): FormGroup {\n    return this.fb.group({\n      profileDid: [profile.id],\n      quantity: ['', Validators.min(1)],\n    });\n  }\n\n  onSubmit() {\n    this.snackBarService.showInfo('Submitting Order...');\n\n    if (this.orderForm.valid) {\n      const order: OrderRequest = this.orderForm.value;\n\n      // Remove profiles with a quantity of 0 and set total price\n      order.profiles = order.profiles.filter((profile: ProfileRequest) => profile.quantity > 0);\n      order.totalPrice = this.totalPrice;\n\n      // Set shipToId to an empty string if it's not set\n      if (!order.shipToId) {\n        order.shipToId = ''; // Ensures \"\" is submitted instead of 0 or null\n      }\n\n      this.orderService.placeOrder(this.customerId, order).subscribe({\n        next: (orderConfirmation) => {\n          this.router.navigate(['/customer', this.customerId, 'order-confirmation'], {\n            state: { order: orderConfirmation, companyId: this.order.companyId },\n          });\n          this.snackBarService.showSuccess('Order submitted successfully');\n        },\n        error: (error) => {\n          const errorCode = error.status;\n          const errorMessage = errorCode == 409 ? 'An order already exists for that day' : 'Error submitting order';\n          if (errorCode == 409) {\n            this.router.navigate(['/customer', this.customerId, 'order-exists'], {\n              state: { order: error.error, companyId: this.order.companyId },\n            });\n          }\n          this.snackBarService.showError(errorMessage);\n\n          console.error('Error submitting order', error);\n        },\n      });\n\n      this.submitted = true;\n    } else {\n      this.orderForm.markAllAsTouched();\n    }\n  }\n\n  isQuantityEntered(index: number): boolean {\n    const quantity = this.profileControls.at(index).get('quantity')?.value;\n    return typeof quantity === 'number' && quantity > 0;\n  }\n\n  showCurrentOrder() {\n    this.currentOrderItems = this.order.profiles\n      .map((profile, index) => ({\n        ...profile,\n        quantity: this.profileControls.at(index).get('quantity')?.value,\n        totalPrice: (this.profileControls.at(index).get('quantity')?.value || 0) * (profile.packSize || 0) * (profile.salesPrice || 0),\n      }))\n      .filter((item) => item.quantity > 0);\n    this.showModal = true;\n    this.cdr.markForCheck();\n    console.error(this.currentOrderItems);\n  }\n\n  // New method to close the modal\n  closeModal() {\n    this.showModal = false;\n  }\n\n  dateAfterTomorrowValidator(control: AbstractControl): ValidationErrors | null {\n    const dateValue = new Date(control.value);\n    const now = new Date();\n    const twoAmToday = new Date(now.getFullYear(), now.getMonth(), now.getDate(), 2, 0, 0);\n\n    // Check if the date is valid and after 2 AM of today\n    if (!isNaN(dateValue.getTime()) && dateValue < twoAmToday) {\n      return { dateAfterTomorrow: true }; // Return error key if date is invalid\n    }\n    return null; // Return null if date is valid\n  }\n\n  atLeastOneQuantityValidator(control: AbstractControl): ValidationErrors | null {\n    const formArray = control as FormArray;\n    const hasAtLeastOneQuantity = formArray.controls.some((group) => group.get('quantity')?.value > 0);\n    return hasAtLeastOneQuantity ? null : { atLeastOneQuantity: true };\n  }\n\n  dateWithinThreeMonthsValidator(control: AbstractControl): ValidationErrors | null {\n    const dateValue = new Date(control.value);\n    const now = new Date();\n    const threeMonthsFromNow = new Date(now.getFullYear(), now.getMonth() + 3, now.getDate());\n\n    // Check if the date is within three months\n    if (!isNaN(dateValue.getTime()) && dateValue > threeMonthsFromNow) {\n      return { dateWithinThreeMonths: true }; // Return error key if date is out of range\n    }\n    return null; // Return null if date is valid\n  }\n\n  dateNotOnSundayValidator(control: AbstractControl): ValidationErrors | null {\n    if (!control.value) {\n      return null; // If there's no date, validation passes\n    }\n\n    const dateValue = new Date(control.value);\n\n    // Check if the parsed date is valid and if it's a Sunday\n    if (!isNaN(dateValue.getTime()) && dateValue.getUTCDay() === 0) {\n      return { dateNotOnSunday: true }; // Trigger error if Sunday\n    }\n\n    return null; // Otherwise, validation passes\n  }\n}\n","<form *ngIf=\"order\" [formGroup]=\"orderForm\" (ngSubmit)=\"onSubmit()\" class=\"order-form\">\n  <div class=\"container\">\n    <app-logo [companyId]=\"order.companyId\"></app-logo>\n    <h2 class=\"page-title\">Order Form</h2>\n\n    <div *ngIf=\"order.customerName && order.salesRepName\" class=\"customer-sales-info\">\n      <p><strong>Customer:</strong> <br>{{ order.customerName }}</p>\n      <div class=\"sales-rep-info\">\n        <strong>Sales Rep:</strong> <br>{{ order.salesRepName }}\n        <br><a [href]=\"'tel:' + order.salesRepPhone\">{{ order.salesRepPhone }}</a>\n      </div>\n    </div>\n\n    <div *ngIf=\"order.shipTos\" class=\"shipto-dropdown\">\n      <label for=\"ship-to\"><strong>Ship to:</strong></label>\n      <select id=\"ship-to\" formControlName=\"shipToId\" class=\"input-select\">\n        <option *ngFor=\"let shipTo of order.shipTos\" [value]=\"shipTo.id\">{{ shipTo.shipToName }}</option>\n      </select>\n      <div *ngIf=\"orderForm.get('shipToId')?.touched && orderForm.get('shipToId')?.errors?.['required']\" class=\"error\">\n        Ship to is required.\n      </div>\n    </div>\n\n    <div *ngIf=\"hasSpecials\">\n      <h3 class=\"section-title\">Specials</h3>\n      <div formArrayName=\"profiles\" class=\"profiles\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th>Description</th>\n              <th>Qty</th>\n              <th>Unit Type</th>\n              <th>Pack Size</th>\n              <th>Price</th>\n              <th>Total</th>\n            </tr>\n          </thead>\n          <tbody>\n            <ng-container *ngFor=\"let profile of profileControls.controls; let i = index\">\n              <tr *ngIf=\"order.profiles[i].isSpecial\" [formGroupName]=\"i\" [ngStyle]=\"{'background-color': isQuantityEntered(i) ? 'whitesmoke': 'white'}\">\n                <input type=\"hidden\" formControlName=\"profileDid\" class=\"input-text hidden-column\">\n                <td>{{ order.profiles[i].profileDescription }}</td>\n                <td>\n                  <input type=\"number\" formControlName=\"quantity\" class=\"input-number\">\n                  <div *ngIf=\"profile.get('quantity')?.errors?.['min']\" class=\"error\">The number must be greater than zero.</div>\n                </td>\n                <td>{{ order.profiles[i].unitType }}</td>\n                <td>{{ order.profiles[i].packSize }}</td>\n                <td>{{ order.profiles[i].salesPrice | currency:'USD':'symbol':'1.2-2'}}</td>\n                <td>{{ getRowTotalPrice(i) | currency:'USD':'symbol':'1.2-2' }}</td>\n              </tr>\n            </ng-container>\n          </tbody>\n        </table>\n      </div>\n    </div>\n\n    <h3 class=\"section-title\">Products</h3>\n    <div formArrayName=\"profiles\" class=\"profiles\">\n      <table class=\"table\">\n        <thead class=\"sticky\">\n          <tr>\n            <th>Description</th>\n            <th>Qty</th>\n            <th>Unit Type</th>\n            <th>Pack Size</th>\n            <th>Price</th>\n            <th>Total</th>\n          </tr>\n        </thead>\n        <tbody>\n          <ng-container *ngFor=\"let profile of profileControls.controls; let i = index\">\n            <tr *ngIf=\"!order.profiles[i].isSpecial\" [formGroupName]=\"i\" [ngStyle]=\"{'background-color': isQuantityEntered(i) ? 'whitesmoke': 'white'}\">\n              <td>\n                <input type=\"text\" type=\"hidden\" formControlName=\"profileDid\">\n                {{ order.profiles[i].profileDescription }}\n              </td>\n              <td>\n                <input type=\"number\" formControlName=\"quantity\" class=\"input-number\">\n                <div *ngIf=\"profile.get('quantity')?.errors?.['min']\" class=\"error\">The number must be greater than zero.</div>\n              </td>\n              <td>{{ order.profiles[i].unitType }}</td>\n              <td>{{ order.profiles[i].packSize }}</td>\n              <td>{{ order.profiles[i].salesPrice | currency:'USD':'symbol':'1.2-2'}}</td>\n              <td>{{ getRowTotalPrice(i) | currency:'USD':'symbol':'1.2-2' }}</td>\n            </tr>\n          </ng-container>\n        </tbody>\n      </table>\n      <div *ngIf=\"submitted && orderForm.get('profiles')?.hasError('atLeastOneQuantity')\" class=\"error\">\n        At least one quantity is required.\n      </div>\n    </div>\n\n    <div *ngIf=\"profileControls.touched && profileControls.errors?.['atLeastOneQuantity']\" class=\"error\">\n      Enter at least one quantity.\n    </div>\n\n    <div class=\"total-price\">\n      <br>Total price: {{totalPrice | currency:'USD':'symbol':'1.2-2'}}\n      <div *ngIf=\"totalPrice > 10000\" class=\"error\">The total has to be less than $10,000.</div>\n    </div>\n\n    <!-- Current Order Button -->\n    <button type=\"button\" (click)=\"showCurrentOrder()\" class=\"current-order-btn\">Current Order</button>\n\n    <div>\n      <label for=\"customer-po\"><strong>Customer PO: </strong></label>\n      <input id=\"customer-po\" formControlName=\"customerPo\" type=\"text\" class=\"customer-po\">\n    </div>\n\n    <div class=\"delivery-date\">\n      <label for=\"delivery-date\"><strong>Delivery Date:</strong></label>\n      <input id=\"delivery-date\" formControlName=\"deliveryDate\" type=\"date\" class=\"input-date\">\n      <div *ngIf=\"formControls['deliveryDate'].touched && formControls['deliveryDate'].errors?.['required']\" class=\"error\">\n        Delivery date is required.\n      </div>\n      <div *ngIf=\"formControls['deliveryDate'].dirty && formControls['deliveryDate'].errors?.['dateAfterTomorrow']\" class=\"error\">\n        Delivery date cannot be in the past or after 2am of today's date.\n      </div>\n      <div *ngIf=\"formControls['deliveryDate'].dirty && formControls['deliveryDate'].errors?.['dateWithinThreeMonths']\" class=\"error\">\n        Delivery date must be within 3 months.\n      </div>\n      <div *ngIf=\"formControls['deliveryDate'].dirty && formControls['deliveryDate'].errors?.['dateNotOnSunday']\" class=\"error\">\n        Delivery date cannot be on Sunday.\n      </div>\n    </div>\n\n    <!-- Pop-up Modal for Current Order -->\n    <div *ngIf=\"showModal\" class=\"modal\">\n      <div class=\"modal-content\">\n        <span class=\"close\" (click)=\"closeModal()\">&times;</span>\n        <h3>Current Order</h3>\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th>Description</th>\n              <th>Qty</th>\n              <th>Unit Type</th>\n              <th>Pack Size</th>\n              <th>Price</th>\n              <th>Total</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let item of currentOrderItems\">\n              <td>{{ item.profileDescription }}</td>\n              <td>{{ item.quantity }}</td>\n              <td>{{ item.unitType }}</td>\n              <td>{{ item.packSize }}</td>\n              <td>{{ item.salesPrice | currency:'USD':'symbol':'1.2-2' }}</td>\n              <td>{{ item.totalPrice | currency:'USD':'symbol':'1.2-2' }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n\n    <br><button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"!orderForm.valid\" class=\"submit-btn\">Submit</button>\n  </div>\n</form>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { Observable, switchMap, tap } from 'rxjs';\nimport { FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { Company } from 'src/app/models/company.model';\nimport { Customer } from 'src/app/models/customer.model';\nimport { SalesRep } from 'src/app/models/sales-rep.model';\nimport { OrderLinksService } from 'src/app/services/order-links.service';\nimport { CommonModule } from '@angular/common';\nimport { LogoComponent } from '../logo/logo.component';\n\n@Component({\n  standalone: true,\n  selector: 'app-order-links',\n  templateUrl: './order-links.component.html',\n  styleUrls: ['./order-links.component.css'],\n  imports: [CommonModule, ReactiveFormsModule, RouterModule, LogoComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderLinksComponent implements OnInit {\n  form!: FormGroup;\n  companies$!: Observable<Company[]>;\n  salesPersons$!: Observable<SalesRep[]>;\n  customers: Customer[] = [];\n  filteredCustomers: Customer[] = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private cdr: ChangeDetectorRef,\n    private snackbarService: SnackbarService,\n    private orderLinksService: OrderLinksService,\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      company: [],\n      salesPerson: [],\n      searchText: '',\n    });\n\n    // Load companies and set default to 'PFF'\n    this.companies$ = this.orderLinksService.getCompanies().pipe(\n      tap((companies) => {\n        const defaultCompany = companies.find((company) => company.name === 'PFF');\n        if (defaultCompany) {\n          this.form.get('company')!.setValue(defaultCompany);\n        }\n      }),\n    );\n\n    // Load salespersons based on selected company\n    this.form\n      .get('company')!\n      .valueChanges.pipe(\n        switchMap((company) =>\n          this.orderLinksService.getSalesPersons(company.id).pipe(\n            tap((salesreps) => {\n              salesreps.sort((a, b) => a.name.localeCompare(b.name));\n              this.salesPersons$ = new Observable<SalesRep[]>((observer) => {\n                observer.next(salesreps);\n                observer.complete();\n              });\n              if (salesreps.length > 0) {\n                this.form.get('salesPerson')!.setValue(salesreps[0]);\n              }\n            }),\n          ),\n        ),\n      )\n      .subscribe();\n\n    // Load customers based on selected salesperson\n    this.form\n      .get('salesPerson')!\n      .valueChanges.pipe(\n        switchMap((salesrep) => {\n          const company = this.form.get('company')!.value;\n          return this.orderLinksService.getCustomers(company.id, salesrep.name);\n        }),\n      )\n      .subscribe({\n        next: (customers) => {\n          this.customers = [...customers];\n          this.customers.sort((a, b) => a.name.localeCompare(b.name));\n          this.filteredCustomers = [...this.customers];\n          this.cdr.markForCheck();\n        },\n      });\n\n    // Apply search filter on customer names\n    this.form.get('searchText')!.valueChanges.subscribe((searchText: string) => {\n      this.filteredCustomers = this.customers.filter((customer) => customer.name.toLowerCase().includes(searchText.toLowerCase()));\n    });\n  }\n\n  // Generate Order Link\n  generateLink(customerId: number): string {\n    const baseUrl = window.location.href.replace('/order-links', '');\n    return `${baseUrl}/customer/${customerId}/order-form`;\n  }\n\n  // Copy Order Link to Clipboard\n  copyLink(customerId: number): void {\n    const link = this.generateLink(customerId);\n    navigator.clipboard\n      .writeText(link)\n      .then(() => {\n        this.snackbarService.showSuccess('Link copied to clipboard!');\n      })\n      .catch((err) => {\n        console.error('Failed to copy link: ', err);\n      });\n  }\n}\n","<form [formGroup]=\"form\">\n  <div class=\"container\">\n    <!-- Logo Component with Navigation -->\n    <a [routerLink]=\"['/home']\">\n      <app-logo [companyId]=\"form.get('company')?.value?.id\"></app-logo>\n    </a>\n\n    <h2 class=\"underlined\">Customers</h2>\n\n    <!-- Filters Section -->\n    <div class=\"filters\">\n      <!-- Company Filter -->\n      <div class=\"filter-group\">\n        <label for=\"company-filter\" class=\"filter-label\">Company:</label>\n        <select id=\"company-filter\" formControlName=\"company\">\n          <option *ngFor=\"let company of companies$ | async\" [ngValue]=\"company\">{{ company.name }}</option>\n        </select>\n      </div>\n\n      <!-- Sales Rep Filter -->\n      <div class=\"filter-group\">\n        <label for=\"salesname-filter\" class=\"filter-label\">Sales Rep:</label>\n        <select id=\"salesname-filter\" formControlName=\"salesPerson\">\n          <option *ngFor=\"let salesperson of salesPersons$ | async\" [ngValue]=\"salesperson\">{{ salesperson.name }}</option>\n        </select>\n      </div>\n\n      <!-- Customer Search Filter -->\n      <div class=\"filter-group\">\n        <label for=\"customer-search\" class=\"filter-label\">Customer:</label>\n        <input type=\"text\" id=\"customer-search\" placeholder=\"Search Customers\" formControlName=\"searchText\" />\n      </div>\n    </div>\n\n    <!-- Order Grid Table -->\n    <table class=\"order-grid\">\n      <thead>\n        <tr>\n          <th>Customer Name</th>\n          <th>Order Form</th>\n          <th>Copy Link</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let customer of filteredCustomers;\">\n          <td>{{ customer.name }}</td>\n          <td>\n            <a [routerLink]=\"['/customer', customer.id, 'order-form']\">Order Form</a>\n          </td>\n          <td>\n            <a href=\"javascript:void(0)\" (click)=\"copyLink(customer.id)\" (keyup)=\"copyLink(customer.id)\">Copy Link</a>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</form>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { Observable, switchMap, tap } from 'rxjs';\nimport { FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { Company } from 'src/app/models/company.model';\nimport { SalesRep } from 'src/app/models/sales-rep.model';\nimport { CommonModule } from '@angular/common';\nimport { LogoComponent } from '../logo/logo.component';\nimport { OrderDetailsDialogComponent } from 'src/app/components/order-details-dialog/order-details-dialog.component';\nimport { OrderService } from 'src/app/services/order.services';\nimport { Order } from 'src/app/models/order.model';\n\n@Component({\n  standalone: true,\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css'],\n  imports: [CommonModule, ReactiveFormsModule, RouterModule, LogoComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrdersComponent implements OnInit {\n  form!: FormGroup;\n  companies$!: Observable<Company[]>;\n  salesPersons$!: Observable<SalesRep[]>;\n  orders: Order[] = [];\n  filteredOrders: Order[] = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private cdr: ChangeDetectorRef,\n    private snackbarService: SnackbarService,\n    private orderService: OrderService,\n    private dialog: MatDialog,\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      company: [],\n      salesPerson: [],\n      customerName: [''],\n    });\n\n    this.loadCompanies();\n    this.setupSalesPersonListener();\n    this.setupOrdersListener();\n    this.setupCustomerNameFilterListener();\n  }\n\n  private loadCompanies(): void {\n    this.companies$ = this.orderService.loadCompanies().pipe(\n      tap((companies) => {\n        if (companies && companies.length > 0) {\n          this.form.get('company')!.setValue(companies[0]);\n        }\n      }),\n    );\n  }\n\n  private setupSalesPersonListener(): void {\n    this.form\n      .get('company')!\n      .valueChanges.pipe(\n        switchMap((company: Company) => {\n          return this.orderService.loadSalesRep(company.id);\n        }),\n        tap((salesreps) => {\n          this.salesPersons$ = new Observable<SalesRep[]>((observer) => {\n            observer.next(salesreps);\n            observer.complete();\n          });\n\n          if (salesreps && salesreps.length > 0) {\n            this.form.get('salesPerson')!.setValue(salesreps[0]);\n          }\n\n          this.loadOrders();\n        }),\n      )\n      .subscribe({\n        error: (error) => {\n          console.error('Failed to load sales reps:', error);\n          this.snackbarService.showError('Failed to load sales reps.');\n        },\n      });\n  }\n\n  private setupOrdersListener(): void {\n    this.form.get('salesPerson')!.valueChanges.subscribe(() => {\n      this.loadOrders();\n    });\n  }\n\n  private loadOrders(): void {\n    const company = this.form.get('company')!.value;\n    const salesrep = this.form.get('salesPerson')!.value;\n\n    if (!company || !salesrep) {\n      return;\n    }\n    this.orderService.loadOrders(company.id, salesrep.name, 72).subscribe({\n      next: (orders) => {\n        this.orders = orders;\n        this.applyFilters();\n      },\n      error: (error) => {\n        console.error('Failed to load orders:', error);\n        this.snackbarService.showError('Failed to load orders.');\n      },\n    });\n  }\n\n  private setupCustomerNameFilterListener(): void {\n    this.form.get('customerName')!.valueChanges.subscribe(() => this.applyFilters());\n  }\n\n  private applyFilters(): void {\n    const customerName = this.form.get('customerName')!.value?.toLowerCase() || '';\n    this.filteredOrders = this.orders.filter((order) => order.customerName.toLowerCase().includes(customerName));\n    this.cdr.markForCheck();\n  }\n\n  onRowClick(order: Order): void {\n    this.dialog.open(OrderDetailsDialogComponent, {\n      data: order,\n      width: '800px',\n    });\n  }\n}\n","<form [formGroup]=\"form\">\n  <div class=\"container\">\n    <!-- Logo Component with Navigation -->\n    <a [routerLink]=\"['/home']\">\n      <app-logo [companyId]=\"form.get('company')?.value?.id\"></app-logo>\n    </a>\n\n    <h2 class=\"page-title\">Existing Orders</h2>\n\n    <!-- Filters Section -->\n    <div class=\"filters\">\n      <!-- Company Filter -->\n      <div class=\"filter-group\">\n        <label for=\"company-filter\" class=\"filter-label\">Company:</label>\n        <select id=\"company-filter\" formControlName=\"company\">\n          <option *ngFor=\"let company of companies$ | async\" [ngValue]=\"company\">{{ company.name }}</option>\n        </select>\n      </div>\n\n      <!-- Sales Rep Filter -->\n      <div class=\"filter-group\">\n        <label for=\"salesname-filter\" class=\"filter-label\">Sales Rep:</label>\n        <select id=\"salesname-filter\" formControlName=\"salesPerson\">\n          <option *ngFor=\"let salesperson of salesPersons$ | async\" [ngValue]=\"salesperson\">{{ salesperson.name }}</option>\n        </select>\n      </div>\n\n      <!-- Customer Name Filter -->\n      <div class=\"filter-group\">\n        <label for=\"customer-filter\" class=\"filter-label\">Customer Name:</label>\n        <input\n          id=\"customer-filter\"\n          type=\"text\"\n          formControlName=\"customerName\"\n          placeholder=\"Search Customer Name\"\n        />\n      </div>\n    </div>\n\n    <!-- Orders Table -->\n    <table class=\"order-grid\">\n      <thead>\n        <tr>\n          <th>Order ID</th>\n          <th>Delivery Date</th>\n          <th>Customer Name</th>\n          <th>Ship To</th>\n          <th>Total Price</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let item of filteredOrders\" (click)=\"onRowClick(item)\" class=\"clickable-row\">\n          <td>{{ item.id }}</td>\n          <td>{{ item.deliveryDate | date }}</td>\n          <td>{{ item.customerName }}</td>\n          <td>{{ item.shipToName }}</td>\n          <td>{{ item.totalPrice | currency }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</form>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\nimport { Router, RouterModule } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\n\n@Component({\n  selector: 'app-password-request',\n  templateUrl: './password-request.component.html',\n  styleUrls: ['./password-request.component.css'],\n  standalone: true,\n  imports: [CommonModule, MatFormFieldModule, MatInputModule, MatButtonModule, ReactiveFormsModule, RouterModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PasswordRequestComponent {\n  passwordRequestForm: FormGroup;\n\n  constructor(\n    private router: Router,\n    private cdr: ChangeDetectorRef,\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private snackbarService: SnackbarService,\n  ) {\n    this.passwordRequestForm = this.formBuilder.group({\n      username: ['', [Validators.required, Validators.email]],\n    });\n  }\n\n  onSubmit() {\n    const { username } = this.passwordRequestForm.value;\n\n    this.authService.passwordRequest(username).subscribe({\n      next: () => {\n        this.snackbarService.showInfo(`An email has been sent to ${username} to reset your password`);\n        this.router.navigate(['/login']);\n      },\n    });\n  }\n}\n","<div class=\"container\">\n    <div class=\"login-container\">\n\n        <div class=\"logo-container\">\n            <a [routerLink]=\"['/home']\">\n                <img src=\"assets/logo.png\" alt=\"Company Logo\" class=\"logo\">\n            </a>\n        </div>\n\n        <h1>New password request</h1>\n        <form [formGroup]=\"passwordRequestForm\" (ngSubmit)=\"onSubmit()\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Username</mat-label>\n                <input matInput type=\"text\" formControlName=\"username\" placeholder=\"Enter your username\" autocomplete=\"username\">\n            </mat-form-field>\n\n            <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"passwordRequestForm.invalid\">\n                <span>Submit password request</span>\n            </button>\n        </form>\n    </div>\n</div>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, RouterModule, ParamMap } from '@angular/router';\nimport { AbstractControl, FormBuilder, FormGroup, ValidationErrors, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\n\n@Component({\n  selector: 'app-password-reset',\n  templateUrl: './password-reset.component.html',\n  styleUrls: ['./password-reset.component.css'],\n  standalone: true,\n  imports: [CommonModule, MatFormFieldModule, MatInputModule, MatButtonModule, ReactiveFormsModule, RouterModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PasswordResetComponent implements OnInit {\n  passwordResetForm: FormGroup;\n  token: string = '';\n  mismatchedPassword: boolean = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private cdr: ChangeDetectorRef,\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private snackbarService: SnackbarService,\n  ) {\n    this.passwordResetForm = this.formBuilder.group({\n      password: ['', [Validators.required, Validators.minLength(5), this.specialCharacterValidator]],\n      confirmPassword: ['', [Validators.required, Validators.minLength(5), this.specialCharacterValidator]],\n    });\n  }\n\n  ngOnInit(): void {\n    this.passwordResetForm.get('confirmPassword')?.valueChanges.subscribe(() => {\n      this.mismatchedPassword = false;\n    });\n\n    this.route.paramMap.subscribe((params: ParamMap) => {\n      this.token = params.get('token') || '';\n      if (!this.token) {\n        // no JWT found\n        this.router.navigate(['/login']);\n      }\n    });\n  }\n\n  onSubmit() {\n    const { password, confirmPassword } = this.passwordResetForm.value;\n\n    if (password !== confirmPassword) {\n      this.mismatchedPassword = true;\n      return;\n    }\n\n    this.authService.passwordReset(password, this.token).subscribe({\n      next: () => {\n        this.snackbarService.showSuccess('Your password has been reset');\n        this.router.navigate(['/login']); // Navigate to /products on success\n      },\n    });\n  }\n\n  specialCharacterValidator(control: AbstractControl): ValidationErrors | null {\n    const value = control.value;\n    // Regular expression for special characters\n    const hasSpecialCharacter = /[!@#$%^&*(),.?\":{}|<>]/.test(value);\n    return hasSpecialCharacter ? null : { noSpecialCharacter: true };\n  }\n}\n","<div class=\"container\">\n    <div class=\"login-container\">\n\n        <div class=\"logo-container\">\n            <a [routerLink]=\"['/home']\">\n                <img src=\"assets/logo.png\" alt=\"Company Logo\" class=\"logo\">\n            </a>\n        </div>\n\n        <h1>New password</h1>\n        <form [formGroup]=\"passwordResetForm\" (ngSubmit)=\"onSubmit()\">\n\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Password</mat-label>\n                <input matInput type=\"password\" formControlName=\"password\" placeholder=\"Enter your password\" autocomplete=\"current-password\">\n            </mat-form-field>\n\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Re-enter your password</mat-label>\n                <input matInput type=\"password\" formControlName=\"confirmPassword\" placeholder=\"Enter your password\" autocomplete=\"current-password\">\n            </mat-form-field>\n\n            <div *ngIf=\"passwordResetForm.get('password')?.touched && passwordResetForm.get('password')?.errors?.['minlength']\" class=\"error\">\n                Your password needs to have at least 5 characters.\n            </div>\n\n            <div *ngIf=\"passwordResetForm.get('password')?.touched && passwordResetForm.get('password')?.errors?.['noSpecialCharacter']\" class=\"error\">\n                Your password needs to contain at least one special character: {{ '[!@#$%^&*(),.?\":{}|<>]' }}\n            </div>\n\n            <div *ngIf=\"mismatchedPassword\" class=\"error\">\n                The 2 entries do not match.\n            </div>\n\n            <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"passwordResetForm.invalid\">\n                <span>Submit new password</span>\n            </button>\n        </form>\n    </div>\n</div>","import { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { ActivatedRoute, RouterModule } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { FormArray, FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms'; // Import FormsModule\nimport { PreOrder } from 'src/app/models/preorder.model';\nimport { PreorderService } from 'src/app/services/preorder.service';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\n\n@Component({\n  standalone: true,\n  imports: [CommonModule, RouterModule, FormsModule, ReactiveFormsModule],\n  selector: 'app-preorder-form',\n  templateUrl: './preorder-form.component.html',\n  styleUrls: ['./preorder-form.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PreorderFormComponent implements OnInit {\n  preOrderForm!: FormGroup;\n  vendorId!: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private http: HttpClient,\n    private preorderService: PreorderService,\n    private cdr: ChangeDetectorRef,\n    private fb: FormBuilder,\n    private snackBarService: SnackbarService,\n  ) {}\n\n  ngOnInit(): void {\n    this.preOrderForm = this.fb.group({\n      preOrders: this.fb.array([]),\n    });\n\n    this.route.params.subscribe((params) => {\n      this.vendorId = params['vendorId'];\n      this.preorderService.getPreOrders(this.vendorId).subscribe((preOrders) => {\n        this.setPreOrders(preOrders);\n        this.cdr.markForCheck();\n      });\n    });\n  }\n\n  // Populate the form with the products\n  setPreOrders(preOrders: PreOrder[]): void {\n    const preOrderFormGroups = preOrders.map((preOrder) => this.createPreOrderForm(preOrder));\n    const preOrderFormArray = this.fb.array(preOrderFormGroups);\n    this.preOrderForm.setControl('preOrders', preOrderFormArray);\n  }\n\n  // Create a FormGroup for each product\n  createPreOrderForm(preOrder: PreOrder): FormGroup {\n    return this.fb.group({\n      id: [preOrder.id],\n      sodId: [preOrder.sodId],\n      dispatchDate: [preOrder.dispatchDate],\n      customerName: [preOrder.customerName],\n      descriptionMemo: [preOrder.descriptionMemo],\n      unitSize: [preOrder.unitSize],\n      unitType: [preOrder.unitType],\n      weight: [preOrder.weight, [Validators.required, Validators.min(0)]],\n      price: [preOrder.price, [Validators.required, Validators.min(0)]],\n    });\n  }\n\n  // Getter for the FormArray\n  get preOrdersArray(): FormArray {\n    return this.preOrderForm.get('preOrders') as FormArray;\n  }\n\n  getModifiedPreOrders(): PreOrder[] {\n    // Filter out preOrders where any of the controls are dirty\n    return this.preOrderForm.value.preOrders.filter((preOrder: PreOrder, index: number) => {\n      const preOrderGroup = this.preOrdersArray.at(index);\n      return preOrderGroup.dirty;\n    });\n  }\n\n  submitAll(): void {\n    const modifiedPreOrders = this.getModifiedPreOrders();\n    modifiedPreOrders.forEach((preOrder) => {\n      this.preorderService.updatePreOrderWeightAndPrice(this.vendorId, preOrder).subscribe(() => {\n        this.snackBarService.showSuccess('The data has been updated.');\n      });\n    });\n  }\n\n  trackByOrderId(index: number, order: PreOrder): number {\n    return order.id;\n  }\n\n  // TODO: shoudl not be hard-coded here\n  getUnitType(unitType: number): string {\n    const unitTypeMap: { [key: number]: string } = {\n      '1': 'Case',\n      '2': 'Piece',\n      '3': 'Pack',\n      '4': 'Pound',\n      '5': 'Side',\n    };\n    return unitTypeMap[unitType] || 'Unknown';\n  }\n}\n","<div class=\"container\">\n  <!-- Header Section -->\n  <div class=\"header-section\">\n    <a [routerLink]=\"['/home']\">\n      <img src=\"assets/logo.png\" alt=\"Company Logo\" />\n    </a>\n  </div>\n\n  <!-- Page Title -->\n  <h2 class=\"page-title\">PreOrders</h2>\n\n  <!-- PreOrders Table -->\n  <form [formGroup]=\"preOrderForm\" (ngSubmit)=\"submitAll()\">\n    <table class=\"table\">\n      <thead class=\"sticky\">\n        <tr>\n          <th>ID</th>\n          <th>Dispatch Date</th>\n          <th>Customer Name</th>\n          <th>Description</th>\n          <th>Unit Size</th>\n          <th>Unit Type</th>\n          <th>Weight (Lbs)</th>\n          <th>Price</th>\n        </tr>\n      </thead>\n      <tbody formArrayName=\"preOrders\">\n        <tr *ngFor=\"let preOrder of preOrdersArray.controls; let i = index\" [formGroupName]=\"i\" [ngStyle]=\"{'background-color': preOrder.dirty ? 'whitesmoke' : 'white'}\">\n\n          <td>{{ preOrder.get('id')?.value }}</td>\n          <td class=\"nowrap\">{{ preOrder.get('dispatchDate')?.value | date: 'mediumDate' }}</td>\n          <td>{{ preOrder.get('customerName')?.value }}</td>\n          <td>{{ preOrder.get('descriptionMemo')?.value }}</td>\n          <td>{{ preOrder.get('unitSize')?.value }}</td>\n          <td>{{ getUnitType(preOrder.get('unitType')?.value) }}</td>\n          <td>\n            <input type=\"number\" formControlName=\"price\" min=\"0\" />\n            <div *ngIf=\"preOrder.get('price')?.touched && preOrder.get('price')?.hasError('min')\" class=\"error\">\n              Weight must be greater than 0</div>\n          </td>\n          <td>\n            <div class=\"currency-input\">\n              <span class=\"currency-symbol\">$</span>\n              <input type=\"number\" formControlName=\"weight\" step=\"0.01\" min=\"0\" />\n              <div *ngIf=\"preOrder.get('weight')?.touched && preOrder.get('weight')?.hasError('min')\" class=\"error\">\n                Price must be greater than 0</div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <!-- Submit Button -->\n    <div class=\"text-center\">\n      <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!preOrderForm.dirty || !preOrderForm.valid\">\n        Submit\n      </button>\n    </div>\n  </form>\n\n</div>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Router, RouterModule } from '@angular/router';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { VendorsService, Vendor } from 'src/app/services/vendors.service'; // Import Vendor type\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  standalone: true,\n  selector: 'app-vendor-links',\n  templateUrl: './preorder-links.component.html',\n  styleUrls: ['./preorder-links.component.css'],\n  imports: [CommonModule, RouterModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VendorLinksComponent implements OnInit {\n  vendors$!: Observable<Vendor[]>;\n\n  constructor(private cdr: ChangeDetectorRef, private snackbarService: SnackbarService, private vendorsService: VendorsService, private router: Router) {}\n  ngOnInit(): void {\n    this.vendors$ = this.vendorsService.getVendors();\n  }\n\n  // Navigate to Preorder Form for the selected vendor\n  navigateToPreorderForm(vendorId: number): void {\n    this.router.navigate(['/preorder-form', vendorId]); // Navigate with vendorId as route parameter\n  }\n\n  // Copy Vendor Link to Clipboard\n  copyLink(vendorId: number): void {\n    const link = `${window.location.origin}/preorder-form/${vendorId}`;\n    navigator.clipboard\n      .writeText(link)\n      .then(() => {\n        this.snackbarService.showSuccess('Link copied to clipboard!');\n      })\n      .catch((err) => {\n        this.snackbarService.showError('Failed to copy link: ', err);\n        console.error('Failed to copy link: ', err);\n      });\n  }\n}\n","<div class=\"container\">\n  <a [routerLink]=\"['/home']\">\n    <div class=\"image-container\">\n      <img src=\"assets/logo.png\" alt=\"Company Logo\">\n    </div>\n  </a>\n\n  <h2 class=\"underlined\">Vendors</h2>\n\n  <table class=\"order-grid\">\n    <thead>\n      <tr>\n        <th>Vendor Name</th>\n        <th>Preorder Form</th>\n        <th>Copy Link</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let vendor of vendors$ | async\">\n        <td>{{ vendor.name }}</td>\n        <td>\n          <a [routerLink]=\"['/preorder-form', vendor.id]\">Preorder Form</a>\n        </td>\n        <td>\n          <a href=\"javascript:void(0)\" (click)=\"copyLink(vendor.id)\" (keyup)=\"copyLink(vendor.id)\">Copy Link</a>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialogModule } from '@angular/material/dialog';\nimport { CommonModule } from '@angular/common';\nimport { HttpEventType } from '@angular/common/http';\nimport { ProductService } from '../../services/products.service'; // Ensure the correct path\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { InventoryItem } from 'src/app/models/product.model';\nimport { DOC_ORIENTATION, NgxImageCompressService } from 'ngx-image-compress';\n\n@Component({\n  standalone: true,\n  selector: 'app-product-details-dialog',\n  templateUrl: './product-details-dialog.component.html',\n  styleUrls: ['./product-details-dialog.component.css'],\n  imports: [CommonModule, MatDialogModule],\n})\nexport class ProductDetailsDialogComponent {\n  showInfo = false; // Controls visibility of the info section\n\n  constructor(\n    private snackBarService: SnackbarService,\n    public dialogRef: MatDialogRef<ProductDetailsDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: InventoryItem,\n    private productService: ProductService,\n    private imageCompress: NgxImageCompressService,\n  ) {}\n\n  toggleInfoVisibility(): void {\n    this.showInfo = !this.showInfo;\n  }\n\n  close(): void {\n    this.dialogRef.close();\n  }\n\n  getUnitType(unitType?: number): string {\n    switch (unitType) {\n      case 1:\n        return 'Cs';\n      case 2:\n        return 'Pcs';\n      case 3:\n        return 'Pck';\n      case 4:\n        return 'lbs';\n      case 5:\n        return 'side';\n      default:\n        return 'Unknown';\n    }\n  }\n\n  triggerFileInput(fileInput: HTMLInputElement): void {\n    fileInput.click();\n  }\n\n  onFileSelected(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    if (input.files && input.files.length > 0) {\n      this.snackBarService.showInfo('Uploading file...');\n      const file = input.files[0];\n\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        const imageBase64 = reader.result as string;\n\n        this.imageCompress.compressFile(imageBase64, DOC_ORIENTATION.Default, 50, 50, 960, 540).then((compressedImage) => {\n          // Convert base64 back to Blob\n          const blob = this.dataURItoBlob(compressedImage);\n\n          const compressedFile = new File([blob], file.name.replace(/\\..+$/, '.jpeg'), {\n            type: 'image/jpeg',\n          });\n\n          this.productService.uploadProductImage(this.data.compItemId, compressedFile).subscribe({\n            next: (event) => {\n              if (event.type === HttpEventType.Response) {\n                const updatedItem = event.body as InventoryItem;\n                this.data.photoUrl = updatedItem.photoUrl;\n                this.snackBarService.showSuccess('File uploaded successfully');\n              }\n            },\n          });\n        });\n      };\n    }\n  }\n\n  deletePhoto(): void {\n    if (confirm('Are you sure you want to delete this photo?')) {\n      this.productService.deleteProductPhoto(this.data.compItemId).subscribe({\n        next: () => {\n          this.data.photoUrl = undefined;\n          this.snackBarService.showSuccess('Photo deleted successfully.');\n        },\n      });\n    }\n  }\n\n  // Utility to convert base64 to Blob\n  private dataURItoBlob(dataURI: string): Blob {\n    // Split the URI into data and mime type\n    const byteString = atob(dataURI.split(',')[1]);\n    const mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n\n    // Convert the byte string into an array of bytes (Uint8Array)\n    const arrayBuffer = new ArrayBuffer(byteString.length);\n    const intArray = new Uint8Array(arrayBuffer);\n    for (let i = 0; i < byteString.length; i++) {\n      intArray[i] = byteString.charCodeAt(i);\n    }\n\n    // Return a Blob with the appropriate MIME type\n    return new Blob([intArray], { type: mimeString });\n  }\n}\n","<h2>{{ data.compItemId }} - {{ data.compDescription }}</h2>\n<div class=\"special-instructions\">{{ data.compInstructions || 'N/A' }}</div>\n\n<mat-dialog-content>\n  <!-- Display Image if Available -->\n  <div class=\"image-container\">\n    <ng-container *ngIf=\"data.photoUrl; else uploadButton\">\n      <div class=\"image-wrapper\">\n        <img [src]=\"data.photoUrl\" alt=\"Product Image\" class=\"product-image\" />\n        <div class=\"delete-icon\" (click)=\"deletePhoto()\">&#x2715;</div>\n      </div>\n    </ng-container>\n    <ng-template #uploadButton>\n      <input type=\"file\" #fileInput (change)=\"onFileSelected($event)\" accept=\"image/*\" hidden />\n      <button type=\"button\" class=\"button\" (click)=\"triggerFileInput(fileInput)\">Upload Image</button>\n    </ng-template>\n  </div>\n\n  <!-- Toggleable Information -->\n  <button class=\"toggle-button\" (click)=\"toggleInfoVisibility()\">\n    {{ showInfo ? 'Hide Info' : 'Show Info' }}\n  </button>\n\n  <div class=\"info-section\" *ngIf=\"showInfo\">\n    <div class=\"margins\">\n      <div class=\"margin-values\">\n        <div class=\"margin-group\">\n          <div class=\"field\">\n            <span class=\"field-label\">16%</span>\n            <span>{{ ((data.compCost ?? 0) * (data.yield ?? 0) + (data.laborPackCost ?? 0)) / 0.84 | number:'1.2-2' }}</span>\n          </div>\n          <div class=\"field\">\n            <span class=\"field-label\">18%</span>\n            <span>{{ ((data.compCost ?? 0) * (data.yield ?? 0) + (data.laborPackCost ?? 0)) / 0.82 | number:'1.2-2' }}</span>\n          </div>\n          <div class=\"field\">\n            <span class=\"field-label\">20%</span>\n            <span>{{ ((data.compCost ?? 0) * (data.yield ?? 0) + (data.laborPackCost ?? 0)) / 0.80 | number:'1.2-2' }}</span>\n          </div>\n          <div class=\"field\">\n            <span class=\"field-label\">22%</span>\n            <span>{{ ((data.compCost ?? 0) * (data.yield ?? 0) + (data.laborPackCost ?? 0)) / 0.78 | number:'1.2-2' }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"field-group\">\n      <div class=\"field\">\n        <span class=\"field-label\">Cost</span>\n        <span>{{ (data.compCost ?? 0) * (data.yield ?? 0) | number:'1.2-2' }}</span>\n      </div>\n      <div class=\"field\">\n        <span class=\"field-label\">Yield</span>\n        <span>{{ (data.yield ?? 0) * 100 | number:'1.0-0' }}%</span>\n      </div>\n      <div class=\"field\">\n        <span class=\"field-label\">Labor Pack</span>\n        <span>{{ data.laborPackCost | number:'1.2-2' }}</span>\n      </div>\n      <div class=\"field\">\n        <span class=\"field-label\">Finish</span>\n        <span>{{ ((data.compCost ?? 0) * (data.yield ?? 0) + (data.laborPackCost ?? 0)) | number:'1.2-2' }}</span>\n      </div>\n    </div>\n  </div>\n\n\n  <div class=\"field-group\">\n    <div class=\"field\">\n      <span class=\"field-label\">Origin</span>\n      <span>{{ data.origin }}</span>\n    </div>\n    <div class=\"field\">\n      <span class=\"field-label\">Notes</span>\n      <span>{{ data.notes || 'N/A' }}</span>\n    </div>\n    <div class=\"field\">\n      <span class=\"field-label\">WOH</span>\n      <span>{{ data.woh }}</span>\n    </div>\n    <div class=\"field\">\n      <span class=\"field-label\">Unit Type</span>\n      <span>{{ getUnitType(data.unitType ?? 0) }}</span>\n    </div>\n  </div>\n\n  <div class=\"field-group\">\n    <div class=\"field\">\n      <span class=\"field-label\">Pack Size</span>\n      <span>{{ data.packSize }}</span>\n    </div>\n    <div class=\"field\">\n      <span class=\"field-label\">Buyer</span>\n      <span>{{ data.buyer }}</span>\n    </div>\n    <div class=\"field\">\n      <span class=\"field-label\">Sixty Sales</span>\n      <span>{{ data.sixtySales }}</span>\n    </div>\n  </div>\n\n  <div class=\"field-group\">\n    <div class=\"field\">\n      <span class=\"field-label\">Ten Sales</span>\n      <span>{{ data.tenSales }}</span>\n    </div>\n    <div class=\"field\">\n      <span class=\"field-label\">Pre-Order Hours</span>\n      <span>{{ data.preOrderHours }}</span>\n    </div>\n  </div>\n</mat-dialog-content>","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ProductService } from '../../services/products.service';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { InventoryItem } from 'src/app/models/product.model';\nimport { BehaviorSubject, Subject, Subscription } from 'rxjs';\nimport { InfiniteScrollDirective } from 'ngx-infinite-scroll';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, FormControl } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { ProductDetailsDialogComponent } from '../product-details-dialog/product-details-dialog.component';\n\n@Component({\n  standalone: true,\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css'],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, RouterModule, InfiniteScrollDirective],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductsComponent implements OnInit, OnDestroy {\n  page = 0;\n  size = 50;\n  searchTerm = '';\n  showRelevantItems = false;\n  showSixtySales = false;\n  showWoh = false;\n  showYield = false;\n  showWithImages = false; // New filter for rows with images\n\n  // Filter dropdowns\n  originFilter: string = '';\n  packSizeFilter: string | number = '';\n  buyerFilter: string | number = '';\n\n  // Min CompCost property\n  minCompCost: number = 0;\n\n  // Form control\n  minCompCostControl = new FormControl('');\n\n  // Unique dropdown options\n  uniqueOrigins: string[] = [];\n  uniquePackSizes: (string | number)[] = [];\n  uniqueBuyers: (string | number)[] = [];\n\n  private searchSubject = new Subject<string>();\n  private searchSubscription!: Subscription;\n\n  private inventoryItemsSubject = new BehaviorSubject<InventoryItem[]>([]);\n  inventoryItems$ = this.inventoryItemsSubject.asObservable();\n\n  constructor(private productService: ProductService, private dialog: MatDialog) {}\n\n  ngOnInit(): void {\n    this.loadData();\n\n    this.searchSubscription = this.searchSubject.pipe(distinctUntilChanged(this.trimComparator), debounceTime(200)).subscribe((searchTerm) => {\n      this.searchTerm = searchTerm;\n      this.page = 0;\n      this.inventoryItemsSubject.next([]);\n      this.loadData();\n    });\n\n    this.minCompCostControl.valueChanges.subscribe((value) => {\n      this.minCompCost = value ? parseFloat(value) : 0;\n      this.onCompCostChange();\n    });\n  }\n\n  loadData(): void {\n    this.productService.getProducts(this.page, this.size, this.searchTerm).subscribe({\n      next: (response: InventoryItem[]) => {\n        const currentData = this.inventoryItemsSubject.value;\n        const newData = response.filter((item) => !currentData.some((currentItem) => currentItem.compItemId === item.compItemId));\n\n        let filteredData = this.showRelevantItems ? newData.filter((item) => item.tenSales && item.tenSales > 0) : newData;\n\n        if (this.showSixtySales) {\n          filteredData = filteredData.filter((item) => item.sixtySales !== null && item.sixtySales !== undefined && item.sixtySales > 0);\n        }\n\n        if (this.showWoh) {\n          filteredData = filteredData.filter((item) => item.woh !== null && item.woh !== undefined && item.woh > 0);\n        }\n\n        if (this.showYield) {\n          filteredData = filteredData.filter((item) => item.yield && item.yield < 1);\n        }\n\n        if (this.showWithImages) {\n          filteredData = filteredData.filter((item) => item.photoUrl);\n        }\n\n        const fullyFilteredData = filteredData.filter((item) => {\n          const compCost = item.compCost ?? 0;\n          return (\n            (this.originFilter ? item.origin === this.originFilter : true) &&\n            (this.packSizeFilter ? item.packSize === this.packSizeFilter : true) &&\n            (this.buyerFilter ? item.buyer === this.buyerFilter : true) &&\n            compCost >= this.minCompCost\n          );\n        });\n\n        this.populateUniqueDropdowns(response);\n        this.inventoryItemsSubject.next([...currentData, ...fullyFilteredData]);\n      },\n    });\n  }\n\n  onRowClick(item: InventoryItem, event: Event): void {\n    const target = event.target as HTMLElement;\n    const tagName = target.tagName;\n\n    // Prevent pop-up for button or input clicks\n    if (tagName !== 'BUTTON' && tagName !== 'INPUT') {\n      this.dialog.open(ProductDetailsDialogComponent, {\n        data: {\n          ...item,\n        },\n        width: '550px',\n      });\n    }\n  }\n\n  toggleRelevantItemsFilter(): void {\n    this.showRelevantItems = !this.showRelevantItems;\n    this.page = 0;\n    this.inventoryItemsSubject.next([]);\n    this.loadData();\n  }\n\n  toggleSixtySalesFilter(): void {\n    this.showSixtySales = !this.showSixtySales;\n    this.page = 0;\n    this.inventoryItemsSubject.next([]);\n    this.loadData();\n  }\n\n  toggleWohFilter(): void {\n    this.showWoh = !this.showWoh;\n    this.page = 0;\n    this.inventoryItemsSubject.next([]);\n    this.loadData();\n  }\n\n  toggleYieldFilter(): void {\n    this.showYield = !this.showYield;\n    this.page = 0;\n    this.inventoryItemsSubject.next([]);\n    this.loadData();\n  }\n\n  toggleWithImagesFilter(): void {\n    this.showWithImages = !this.showWithImages;\n    this.page = 0;\n    this.inventoryItemsSubject.next([]);\n    this.loadData();\n  }\n\n  onFilterChange(): void {\n    this.page = 0;\n    this.inventoryItemsSubject.next([]);\n    this.loadData();\n  }\n\n  onCompCostChange(): void {\n    this.page = 0;\n    this.inventoryItemsSubject.next([]);\n    this.loadData();\n  }\n\n  onScroll(): void {\n    this.page++;\n    this.loadData();\n  }\n\n  onSearchChange(event: Event): void {\n    const searchTerm = (event.target as HTMLInputElement).value;\n    this.page = 0;\n    this.searchSubject.next(searchTerm);\n  }\n\n  private trimComparator(prev: string, curr: string): boolean {\n    return prev.trim() === curr.trim();\n  }\n\n  ngOnDestroy(): void {\n    if (this.searchSubscription) {\n      this.searchSubscription.unsubscribe();\n    }\n  }\n\n  private populateUniqueDropdowns(products: InventoryItem[]): void {\n    this.uniqueOrigins = [...new Set(products.map((item) => item.origin))].filter(Boolean).sort() as string[];\n    this.uniquePackSizes = [...new Set(products.map((item) => item.packSize))].filter(Boolean).sort((a, b) => Number(a) - Number(b)) as (string | number)[];\n    this.uniqueBuyers = [...new Set(products.map((item) => item.buyer))].filter(Boolean).sort() as string[];\n  }\n}\n","<div class=\"content\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"50\" (scrolled)=\"onScroll()\">\n  <div class=\"container\">\n    <!-- Make the entire image-container clickable by wrapping in a link -->\n    <a [routerLink]=\"['/home']\" class=\"image-container\">\n      <img src=\"assets/logo.png\" alt=\"Company Logo\">\n    </a>\n\n    <h2 class=\"inventory-title\">Products</h2>\n\n    <!-- Search Bar Section -->\n    <div class=\"search-bar\">\n      <input type=\"text\" placeholder=\"Search Products\" (input)=\"onSearchChange($event)\">\n    </div>\n\n    <!-- Button Row for Relevant Items and Additional Filters -->\n    <div class=\"button-row\">\n      <button (click)=\"toggleRelevantItemsFilter()\" class=\"relevant-items-btn\">\n        {{ showRelevantItems ? 'Show All Items' : 'Relevant Items' }}\n      </button>\n      <button (click)=\"toggleSixtySalesFilter()\" class=\"filter-btn\">\n        {{ showSixtySales ? 'Show All Sixty Sales' : 'Sixty Sales > 0' }}\n      </button>\n      <button (click)=\"toggleWohFilter()\" class=\"filter-btn\">\n        {{ showWoh ? 'Show All WOH' : 'WOH > 0' }}\n      </button>\n      <button (click)=\"toggleYieldFilter()\" class=\"filter-btn\">\n        {{ showYield ? 'Show All Yield' : 'Yield < 100%' }} </button>\n      <button (click)=\"toggleWithImagesFilter()\" class=\"filter-btn\">\n        {{ showWithImages ? 'Show All Items' : 'With Images' }}\n      </button>\n    </div>\n\n    <!-- Centered Filters Section -->\n    <div class=\"filters\">\n      <div class=\"filter-group\">\n        <label for=\"originFilter\">Origin</label>\n        <select id=\"originFilter\" (change)=\"onFilterChange()\" [(ngModel)]=\"originFilter\">\n          <option value=\"\">All Origins</option>\n          <option *ngFor=\"let origin of uniqueOrigins\" [value]=\"origin\">{{ origin }}</option>\n        </select>\n      </div>\n      <div class=\"filter-group minfilter\">\n        <label for=\"comp-cost-min\">Min CompCost</label>\n        <input type=\"number\" id=\"comp-cost-min\" [(ngModel)]=\"minCompCost\" (input)=\"onCompCostChange()\" placeholder=\"Min\" />\n      </div>\n      <div class=\"filter-group\">\n        <label for=\"buyerFilter\">Buyer</label>\n        <select id=\"buyerFilter\" (change)=\"onFilterChange()\" [(ngModel)]=\"buyerFilter\">\n          <option value=\"\">All Buyers</option>\n          <option *ngFor=\"let buyer of uniqueBuyers\" [value]=\"buyer\">{{ buyer }}</option>\n        </select>\n      </div>\n    </div>\n\n    <!-- Inventory Grid Table -->\n    <table class=\"inventory-grid\" *ngIf=\"inventoryItems$ | async as products; else noData\">\n      <thead class=\"sticky\">\n        <tr>\n          <th>ID</th>\n          <th>Description</th>\n          <th>WOH</th>\n          <th>Sixty Sales</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr\n          *ngFor=\"let item of products\"\n          (click)=\"onRowClick(item, $event)\"\n          [class.has-image]=\"item.photoUrl\"\n        >\n          <td>{{ item.compItemId }}</td>\n          <td>\n            <div class=\"description-cell\">\n              {{ item.compDescription }}\n            </div>\n          </td>\n          <td>{{ item.woh }}</td>\n          <td>{{ item.sixtySales }}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <!-- Message for No Data -->\n    <ng-template #noData>\n      <p>No products available.</p>\n    </ng-template>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(): boolean {\n    if (this.authService.isLoggedIn()) {\n      return true;\n    } else {\n      // Redirect to login if not authenticated\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n\n  intercept<T>(req: HttpRequest<T>, next: HttpHandler): Observable<HttpEvent<T>> {\n    // Get the token from the AuthService (or other storage like localStorage)\n    const token = this.authService.getToken(); // Make sure to implement getToken() method\n\n    if (token) {\n      // Clone the request and add the authorization header\n      const clonedRequest = req.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      return next.handle(clonedRequest);\n    }\n\n    // If there's no token, continue with the original request\n    return next.handle(req);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../models/user.model ';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private tokenKey = 'authToken';\n  private fullnameKey = 'fullname';\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  login(username: string, password: string): Observable<User> {\n    return this.http.post<User>(`${environment.apiUrl}/public/auth/login`, { username, password });\n  }\n\n  passwordRequest(username: string): Observable<unknown> {\n    return this.http.post<unknown>(`${environment.apiUrl}/public/auth/password-request`, { username });\n  }\n\n  passwordReset(password: string, token: string): Observable<unknown> {\n    return this.http.post<unknown>(`${environment.apiUrl}/public/auth/password-reset`, { password, token });\n  }\n\n  saveFullnameAndToken(fullname: string, token: string): void {\n    localStorage.setItem(this.tokenKey, token);\n    localStorage.setItem(this.fullnameKey, fullname);\n  }\n\n  // Retrieve the token (from sessionStorage first, then fallback to localStorage)\n  getToken(): string | null {\n    const token = localStorage.getItem(this.tokenKey);\n    return token;\n  }\n\n  getFullname(): string | null {\n    const token = localStorage.getItem(this.fullnameKey);\n    return token;\n  }\n\n  // Check if the user is logged in by verifying if a token exists\n  isLoggedIn(): boolean {\n    const token = localStorage.getItem(this.tokenKey);\n    return !!token;\n  }\n\n  // Optional: method to log out\n  logout(): void {\n    localStorage.removeItem(this.tokenKey);\n    this.router.navigate(['/login']);\n  }\n\n  // Check if token exists and is not expired\n  /*\n  isTokenValid(url?: string): boolean {\n    // Skip token validation if the URL matches an excluded path\n    if (url && this.isExcludedPath(url)) {\n      console.log('URL is excluded from authentication, skipping token validation:', url);\n      return true;\n    }\n\n    const token = this.getToken();\n    if (!token) {\n      console.warn('No token found');\n      return false;\n    }\n\n    const payload = this.decodeToken(token);\n    if (!payload || !payload.exp) {\n      console.warn('Invalid token payload');\n      return false;\n    }\n\n    const expiryTime = payload.exp * 1000; // Convert to milliseconds\n    const currentTime = Date.now();\n    const isValid = currentTime < expiryTime;\n    console.log('Token validity:', isValid); // Debug: Log token validity\n    return isValid;\n  }\n\n  // Decode the token to get its payload\n  private decodeToken(token: string): any | null {\n    try {\n      const payloadPart = token.split('.')[1];\n      const decodedPayload = atob(payloadPart);\n      const parsedPayload = JSON.parse(decodedPayload);\n      console.log('Decoded token payload:', parsedPayload); // Debug: Log decoded payload\n      return parsedPayload;\n    } catch (error) {\n      console.error('Failed to decode token:', error);\n      return null;\n    }\n  }\n*/\n}\n","import { HttpClient, HttpEvent, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { DeliveryStop } from '../models/delivery-stop.model';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from './auth.service';\n\ninterface Driver {\n  name: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DriverRouteService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient, private authService: AuthService) {}\n\n  getDrivers(): Observable<Driver[]> {\n    return this.http.get<Driver[]>(`${this.apiUrl}/drivers`);\n  }\n\n  getDeliveryRoute(driverName: string, deliveryDate: string): Observable<DeliveryStop[]> {\n    const params = new HttpParams().set('driverName', driverName).set('deliveryDate', deliveryDate);\n\n    return this.http.get<DeliveryStop[]>(`${this.apiUrl}/delivery-stops`, { params });\n  }\n\n  hasArrived(id: string): Observable<DeliveryStop> {\n    return this.http.patch<DeliveryStop>(`${this.apiUrl}/delivery-stops/${id}`, {});\n  }\n\n  uploadPhoto(deliveryStopId: number, file: File): Observable<HttpEvent<DeliveryStop>> {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    return this.http.post<DeliveryStop>(`${this.apiUrl}/delivery-stops/${deliveryStopId}/photos`, formData, {\n      reportProgress: true,\n      observe: 'events',\n    });\n  }\n}\n","import { ErrorHandler, Injectable } from '@angular/core';\nimport { SnackbarService } from './snackbar.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GlobalErrorHandlerService implements ErrorHandler {\n  constructor(private snackBarService: SnackbarService, private router: Router, private authService: AuthService) {}\n\n  handleError(error: unknown) {\n    if (error instanceof HttpErrorResponse) {\n      // Check network connectivity\n      if (!navigator.onLine) {\n        this.snackBarService.showError('No internet connection');\n        return;\n      }\n\n      // Handle client-side errors\n      if (error.error instanceof ErrorEvent) {\n        this.snackBarService.showError(error.error.message);\n        return;\n      }\n\n      // Handle specific HTTP status codes\n      switch (error.status) {\n        case 401:\n          this.authService.logout();\n          this.snackBarService.showError('Unauthorized. Please enter your credentials.');\n          this.router.navigate(['/login']);\n          break;\n\n        case 403: {\n          this.authService.logout();\n          const errorMessage = error.error?.message || 'Try again.';\n          this.snackBarService.showError(`Access denied. ${errorMessage}.`);\n          break;\n        }\n        case 423: {\n          this.authService.logout();\n          const errorMessage = error.error?.message || 'Try again.';\n          this.snackBarService.showError(`Access denied. ${errorMessage}.`);\n          break;\n        }\n        case 404:\n          this.snackBarService.showError('Resource not found.');\n          break;\n\n        case 413:\n          this.snackBarService.showError('File too large.');\n          break;\n        case 500: {\n          const errorMessage = error.error?.message || 'Please try again later.';\n          this.snackBarService.showError(`Error: ${errorMessage}`);\n          break;\n        }\n        default: {\n          console.error('An error occurred:', error);\n          const errorMessage = error.error?.message || 'An unexpected error occurred.';\n          this.snackBarService.showError(`Error: ${errorMessage}`);\n        }\n      }\n\n      // Log the full error for debugging\n      console.error('Full error details:', {\n        status: error.status,\n        statusText: error.statusText,\n        url: error.url,\n        error: error.error,\n      });\n    } else {\n      // Handle client-side/non-HTTP errors\n      console.error('Client-side error:', error);\n      this.snackBarService.showError('An unexpected error occurred');\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { OrderRequest } from '../models/order-request.model';\nimport { OrderConfirmation } from '../models/order-confirmation.model';\nimport { environment } from 'src/environments/environment';\nimport { Order } from '../models/order.model';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderFormService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient, private authService: AuthService) {}\n\n  getOrderData(customerId: number): Observable<Order> {\n    return this.http.get<Order>(`${this.apiUrl}/public/customers/${customerId}/profiles`);\n  }\n\n  placeOrder(customerId: number, order: OrderRequest): Observable<OrderConfirmation> {\n    const url = `${this.apiUrl}/public/customers/${customerId}/orders`;\n    return this.http.post<OrderConfirmation>(url, order);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Company } from '../models/company.model';\nimport { Customer } from '../models/customer.model';\nimport { SalesRep } from '../models/sales-rep.model';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderLinksService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient, private authService: AuthService) {}\n\n  getCompanies(): Observable<Company[]> {\n    return this.http.get<Company[]>(`${this.apiUrl}/companies`);\n  }\n\n  getSalesPersons(companyId: number): Observable<SalesRep[]> {\n    return this.http.get<SalesRep[]>(`${this.apiUrl}/companies/${companyId}/sales-reps`);\n  }\n\n  getCustomers(companyId: number, salesRepName: string): Observable<Customer[]> {\n    return this.http.get<Customer[]>(`${this.apiUrl}/companies/${companyId}/sales-reps/${salesRepName}/customers`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Company } from '../models/company.model';\nimport { SalesRep } from '../models/sales-rep.model';\nimport { Order } from '../models/order.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderService {\n  constructor(private http: HttpClient) {}\n\n  public loadCompanies(): Observable<Company[]> {\n    return this.http.get<Company[]>(`${environment.apiUrl}/companies`);\n  }\n\n  public loadOrders(company_id: number, salesrep_name: string, past_hours: number): Observable<Order[]> {\n    const apiUrl = `${environment.apiUrl}/companies/${company_id}/sales-reps/${salesrep_name}/orders?pastHours=${past_hours}`;\n    return this.http.get<Order[]>(apiUrl);\n  }\n\n  public loadSalesRep(company_id: number): Observable<SalesRep[]> {\n    return this.http.get<SalesRep[]>(`${environment.apiUrl}/companies/${company_id}/sales-reps`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { PreOrder } from '../models/preorder.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PreorderService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  getPreOrders(vendorId: string): Observable<PreOrder[]> {\n    return this.http.get<PreOrder[]>(`${this.apiUrl}/public/vendors/${vendorId}/pre-orders`);\n  }\n\n  updatePreOrderWeightAndPrice(vendorId: string, preOrder: PreOrder): Observable<unknown> {\n    const patchUrl = `${this.apiUrl}/vendors/${vendorId}/pre-orders/${preOrder.sodId}`;\n    const body = {\n      weight: preOrder.weight,\n      price: preOrder.price,\n    };\n    return this.http.patch(patchUrl, body);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpEvent } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { InventoryItem } from '../models/product.model';\nimport { AuthService } from './auth.service';\nimport { PaginatedResponse } from '../models/paginate-response.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient, private authService: AuthService) {}\n\n  /**\n   * Fetch products with pagination and search term\n   */\n  getProducts(page: number, size: number, searchTerm: string): Observable<InventoryItem[]> {\n    const params = new HttpParams().set('page', page.toString()).set('size', size.toString()).set('search', searchTerm);\n\n    return this.http.get<PaginatedResponse<InventoryItem>>(`${this.apiUrl}/products`, { params }).pipe(map((response) => response.content));\n  }\n\n  /**\n   * Upload a photo for a specific product\n   */\n  uploadProductImage(productId: number, file: File): Observable<HttpEvent<InventoryItem>> {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    return this.http.post<InventoryItem>(`${this.apiUrl}/products/${productId}/photos`, formData, {\n      reportProgress: true,\n      observe: 'events',\n    });\n  }\n\n  /**\n   * Delete a photo for a specific product\n   */\n  deleteProductPhoto(productId: number): Observable<void> {\n    const url = `${this.apiUrl}/products/${productId}/photos`; // Full API endpoint\n    return this.http.delete<void>(url); // Use DELETE HTTP method\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PwaService {\n  private isPwa = new BehaviorSubject<boolean>(false);\n  isPwa$ = this.isPwa.asObservable();\n\n  updateValue(isPwa: boolean): void {\n    this.isPwa.next(isPwa);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarRef, MatSnackBarVerticalPosition, TextOnlySnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SnackbarService {\n  private snackBarRef!: MatSnackBarRef<TextOnlySnackBar>;\n  private duration = 10000;\n  private verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n  private horizontalPos: MatSnackBarHorizontalPosition = 'center';\n  private action = 'Hide';\n\n  // Define standard styles\n  private styles = {\n    error: 'error-snackbar',\n    success: 'success-snackbar',\n    warning: 'warning-snackbar',\n    info: 'info-snackbar',\n  };\n\n  constructor(private matSnackBar: MatSnackBar) {}\n\n  private showSnackBar(message: string, style?: 'error' | 'success' | 'warning' | 'info', duration: number = this.duration) {\n    // Close any existing snackbar\n    this.closeSnackBar();\n\n    // Get the appropriate style class\n    const panelClass = style ? this.styles[style] : undefined;\n\n    this.snackBarRef = this.matSnackBar.open(message, this.action, {\n      duration: duration,\n      verticalPosition: this.verticalPosition,\n      horizontalPosition: this.horizontalPos,\n      panelClass: panelClass,\n    });\n\n    this.snackBarRef.onAction().subscribe(() => {\n      this.closeSnackBar();\n    });\n\n    return this.snackBarRef;\n  }\n\n  // Convenience methods for different types of messages\n  showError(message: string, duration?: number) {\n    return this.showSnackBar(message, 'error', duration);\n  }\n\n  showSuccess(message: string, duration?: number) {\n    return this.showSnackBar(message, 'success', duration);\n  }\n\n  showWarning(message: string, duration?: number) {\n    return this.showSnackBar(message, 'warning', duration);\n  }\n\n  showInfo(message: string, duration?: number) {\n    return this.showSnackBar(message, 'info', duration);\n  }\n\n  closeSnackBar() {\n    if (this.snackBarRef) {\n      this.snackBarRef.dismiss();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n// Define the type for the vendor data\nexport interface Vendor {\n  id: number;\n  name: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class VendorsService {\n  private apiUrl = `${environment.apiUrl}/vendors`; // Base API endpoint for vendors\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Fetch the list of vendors from the API\n   * @returns Observable of vendor data\n   */\n  getVendors(): Observable<Vendor[]> {\n    return this.http.get<Vendor[]>(this.apiUrl);\n  }\n}\n","export const environment = {\n  production: false,\n  apiUrl: 'https://uat-pffc.onrender.com/api',\n};\n","import { AppComponent } from './app/app.component';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { CommonModule } from '@angular/common'; \nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { provideAnimations } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app/app-routing.module';\nimport { BrowserModule, bootstrapApplication } from '@angular/platform-browser';\nimport { GlobalErrorHandlerService } from './app/services/global-error-handler.service';\nimport { ErrorHandler, importProvidersFrom, isDevMode } from '@angular/core';\nimport { HTTP_INTERCEPTORS, provideHttpClient, withInterceptorsFromDi } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { AuthInterceptor } from './app/interceptors/auth.interceptor';\nimport { provideServiceWorker } from '@angular/service-worker';\n\nbootstrapApplication(AppComponent, {\n  providers: [\n    importProvidersFrom(\n      BrowserModule,\n      AppRoutingModule,\n      RouterModule,\n      CommonModule, \n      FormsModule,\n      ReactiveFormsModule,\n      MatSlideToggleModule,\n      MatTableModule,\n      MatSidenavModule,\n      MatToolbarModule,\n      MatIconModule,\n      MatListModule,\n      MatMenuModule,\n      MatSnackBarModule,\n      ModalModule.forRoot(),\n    ),\n    { provide: ErrorHandler, useClass: GlobalErrorHandlerService },\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    provideHttpClient(withInterceptorsFromDi()),\n    provideAnimations(), provideServiceWorker('ngsw-worker.js', {\n            enabled: !isDevMode(),\n            registrationStrategy: 'registerWhenStable:30000'\n          }),\n  ],\n}).catch((err) => console.error(err));\n"],"names":["RouterModule","DriverRouteComponent","HomeComponent","OrderLinksComponent","LoginComponent","LogoutComponent","ProductsComponent","OrderConfirmationComponent","OrderExistsComponent","OrderFormComponent","DataComponent","OrdersComponent","VendorLinksComponent","PreorderFormComponent","AuthGuard","PasswordRequestComponent","PasswordResetComponent","routes","path","redirectTo","pathMatch","component","title","canActivate","AppRoutingModule","forRoot","imports","i1","exports","isDevMode","RouterOutlet","CommonModule","MatToolbarModule","MatIconModule","environment","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","apiUrl","AppComponent","constructor","router","showWarning","includes","alert","ɵɵdirectiveInject","Router","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","AppComponent_div_6_Template","AppComponent_div_7_Template","ɵɵproperty","i2","NgIf","styles","changeDetection","ɵɵlistener","AppInstallPromptComponent_Conditional_0_Template_button_click_1_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","promptInstall","AppInstallPromptComponent_Conditional_2_Template_button_click_1_listener","_r3","showIosInstructions","AppInstallPromptComponent","pwaService","snackbarService","platform","deferredPrompt","userAgent","window","navigator","toLowerCase","isPwa$","isPwa","isRunningAsPWA","isIosButNotPwa","isIOS","plat","ngOnInit","console","log","beforeInstallPromptHandler","event","preventDefault","updateValue","addEventListener","ngOnDestroy","removeEventListener","prompt","userChoice","then","showInfo","test","IOS","isStandalone","matchMedia","matches","isIOSStandalone","isFullscreen","innerHeight","screen","height","PwaService","SnackbarService","i3","Platform","AppInstallPromptComponent_Template","AppInstallPromptComponent_Conditional_0_Template","AppInstallPromptComponent_Conditional_2_Template","ɵɵconditional","ɵɵpipeBind1","i4","AsyncPipe","http","snackBar","uploadUrl","downloadOrders","url","get","responseType","subscribe","response","blob","Blob","type","downloadURL","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL","error","open","duration","onFileSelected","fileInput","target","files","length","file","uploadFile","formData","FormData","append","post","next","HttpClient","MatSnackBar","DataComponent_Template","DataComponent_Template_button_click_1_listener","DataComponent_Template_button_click_3_listener","fileInput_r2","ɵɵreference","DataComponent_Template_input_change_5_listener","$event","SecurityContext","map","tap","HttpEventType","ImageThumbnailComponent","MatTableModule","driverNames_r4","name","i_r5","ɵɵtextInterpolate1","dataSource_r7","indexOf","element_r6","timeDifference","DriverRouteComponent_table_18_td_3_div_2_Template","deliveryAddress1","ctx_r8","getGoogleMapsUrl","element_r8","deliveryAddress2","deliveryAddress3","ɵɵsanitizeUrl","ɵɵtextInterpolate2","ɵɵpropertyInterpolate1","element_r10","customerPhone","DriverRouteComponent_table_18_td_12_div_1_Template_input_change_1_listener","_r11","element_r12","$implicit","DriverRouteComponent_table_18_td_12_div_1_Template_button_click_3_listener","fileInput_r13","fileUrl","ɵɵpipeBind2","actualArrivalTime","DriverRouteComponent_table_18_td_12_div_1_Template","DriverRouteComponent_table_18_td_12_ng_template_2_Template","ɵɵtemplateRefExtractor","alreadyArrivedBlock_r14","ɵɵpureFunction1","_c1","row_r15","ɵɵelementContainerStart","DriverRouteComponent_table_18_th_2_Template","DriverRouteComponent_table_18_td_3_Template","DriverRouteComponent_table_18_th_5_Template","DriverRouteComponent_table_18_td_6_Template","DriverRouteComponent_table_18_th_8_Template","DriverRouteComponent_table_18_td_9_Template","DriverRouteComponent_table_18_th_11_Template","DriverRouteComponent_table_18_td_12_Template","DriverRouteComponent_table_18_tr_13_Template","DriverRouteComponent_table_18_tr_14_Template","displayedColumns","driverRouteService","snackBarService","sanitizer","cdr","maxFileSize","selectedFile","today","formatDate","Date","driverNames$","getDrivers","pipe","data","refreshDeliverRoute","date","month","getMonth","slice","day","getDate","year","getFullYear","driverName","deliveryDate","formattedDate","toISOString","split","deliveryRoute$","getDeliveryRoute","deliveryStops","calculateTimeDifferences","deliveryRoute","input","startsWith","size","showError","showSuccess","uploadPhoto","id","Response","updatedDeliveryStop","body","Object","assign","closeSnackBar","detectChanges","address2","address3","encodeURIComponent","sanitizedUrl","sanitize","bypassSecurityTrustUrl","i","currentStop","previousStop","currentTime","plannedArrivalTime","getTime","previousTime","timeDifferenceInMinutes","Math","round","undefined","DriverRouteService","DomSanitizer","ChangeDetectorRef","DriverRouteComponent_Template","DriverRouteComponent_Template_select_change_9_listener","driverName_r2","deliveryDate2_r3","value","DriverRouteComponent_option_11_Template","DriverRouteComponent_table_18_Template","ɵɵpureFunction0","_c0","NgClass","NgForOf","DatePipe","i5","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","i6","RouterLink","authService","username","getFullname","navigateTo","page","navigate","logout","AuthService","HomeComponent_Template","HomeComponent_Template_button_click_2_listener","HomeComponent_Template_button_click_4_listener","HomeComponent_Template_button_click_6_listener","HomeComponent_Template_button_click_8_listener","HomeComponent_Template_button_click_10_listener","HomeComponent_Template_button_click_12_listener","ImageThumbnailComponent_ng_template_2_Template_button_click_3_listener","ctx_r3","modalRef","hide","ImageThumbnailComponent_ng_template_2_Template_img_click_7_listener","ImageThumbnailComponent_ng_template_2_Template_img_keyup_7_listener","imageUrl","modalService","openModal","show","class","BsModalService","inputs","ImageThumbnailComponent_Template","ImageThumbnailComponent_Template_div_click_0_listener","imageModal_r2","ImageThumbnailComponent_Template_img_keyup_1_listener","ImageThumbnailComponent_ng_template_2_Template","Validators","MatFormFieldModule","MatInputModule","MatButtonModule","ReactiveFormsModule","catchError","throwError","errorMessage","formBuilder","loading","loginForm","group","required","password","onLogin","invalid","login","loginError","errorCode","status","message","markForCheck","loginResponse","fullname","firstName","lastName","trim","saveFullnameAndToken","token","FormBuilder","LoginComponent_Template","LoginComponent_Template_form_ngSubmit_6_listener","LoginComponent_span_18_Template","LoginComponent_span_19_Template","LoginComponent_div_20_Template","MatFormField","MatLabel","MatInput","i7","MatButton","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","imageBackgroundColor","imageSrc","LogoComponent_Conditional_0_div_1_Template","companyId","LogoComponent_Conditional_1_div_0_Template","LogoComponent","isLoggedIn","ngOnChanges","ɵɵNgOnChangesFeature","LogoComponent_Template","LogoComponent_Conditional_0_Template","LogoComponent_Conditional_1_Template","NgStyle","LogoutComponent_Template","product_r1","profileDescription","unitType","packSize","salesPrice","quantity","orderData","shipToName","location","history","state","goBack","customerId","Location","OrderConfirmationComponent_Template","OrderConfirmationComponent_tr_21_Template","OrderConfirmationComponent_div_33_Template","OrderConfirmationComponent_Template_button_click_38_listener","customerName","profiles","ɵɵpipeBind3","totalPrice","shipToId","DecimalPipe","CurrencyPipe","MAT_DIALOG_DATA","MatDialogModule","profile_r1","OrderDetailsDialogComponent","order","dialogRef","closeDialog","close","MatDialogRef","OrderDetailsDialogComponent_Template","OrderDetailsDialogComponent_tr_47_Template","customerPo","salesRepName","MatDialogClose","MatDialogTitle","MatDialogActions","MatDialogContent","route","back","ActivatedRoute","OrderExistsComponent_Template","OrderExistsComponent_tr_21_Template","OrderExistsComponent_div_36_Template","OrderExistsComponent_Template_button_click_37_listener","salesRepPhone","shipTo_r3","OrderFormComponent_form_0_div_6_option_5_Template","OrderFormComponent_form_0_div_6_div_6_Template","shipTos","tmp_3_0","orderForm","touched","errors","OrderFormComponent_form_0_div_7_ng_container_20_tr_1_div_6_Template","i_r6","isQuantityEntered","tmp_9_0","profile_r5","ɵɵpipeBind4","getRowTotalPrice","OrderFormComponent_form_0_div_7_ng_container_20_tr_1_Template","isSpecial","OrderFormComponent_form_0_div_7_ng_container_20_Template","profileControls","controls","OrderFormComponent_form_0_ng_container_27_tr_1_div_6_Template","i_r9","tmp_8_0","profile_r8","OrderFormComponent_form_0_ng_container_27_tr_1_Template","item_r11","OrderFormComponent_form_0_div_51_Template_span_click_2_listener","_r10","closeModal","OrderFormComponent_form_0_div_51_tr_22_Template","currentOrderItems","OrderFormComponent_form_0_Template_form_ngSubmit_0_listener","onSubmit","OrderFormComponent_form_0_div_5_Template","OrderFormComponent_form_0_div_6_Template","OrderFormComponent_form_0_div_7_Template","OrderFormComponent_form_0_ng_container_27_Template","OrderFormComponent_form_0_div_28_Template","OrderFormComponent_form_0_div_29_Template","OrderFormComponent_form_0_div_34_Template","OrderFormComponent_form_0_Template_button_click_35_listener","showCurrentOrder","OrderFormComponent_form_0_div_47_Template","OrderFormComponent_form_0_div_48_Template","OrderFormComponent_form_0_div_49_Template","OrderFormComponent_form_0_div_50_Template","OrderFormComponent_form_0_div_51_Template","hasSpecials","submitted","tmp_7_0","hasError","formControls","dirty","showModal","valid","fb","orderService","paramMap","params","NaN","loadOrderData","getOrderData","sort","a","b","localeCompare","some","profile","shipToValidators","dateAfterTomorrowValidator","dateWithinThreeMonthsValidator","dateNotOnSundayValidator","array","createProfileGroup","atLeastOneQuantityValidator","at","price","index","profileDid","min","filter","placeOrder","orderConfirmation","markAllAsTouched","item","control","dateValue","now","twoAmToday","isNaN","dateAfterTomorrow","formArray","hasAtLeastOneQuantity","atLeastOneQuantity","threeMonthsFromNow","dateWithinThreeMonths","getUTCDay","dateNotOnSunday","OrderFormService","OrderFormComponent_Template","OrderFormComponent_form_0_Template","NgSelectOption","ɵNgSelectMultipleOption","NumberValueAccessor","SelectControlValueAccessor","FormGroupName","FormArrayName","Observable","switchMap","company_r1","salesperson_r2","OrderLinksComponent_tr_33_Template_a_click_7_listener","customer_r4","ctx_r4","copyLink","OrderLinksComponent_tr_33_Template_a_keyup_7_listener","orderLinksService","customers","filteredCustomers","form","company","salesPerson","searchText","companies$","getCompanies","companies","defaultCompany","find","setValue","valueChanges","getSalesPersons","salesreps","salesPersons$","observer","complete","salesrep","getCustomers","customer","generateLink","baseUrl","replace","clipboard","writeText","catch","err","OrderLinksService","OrderLinksComponent_Template","OrderLinksComponent_option_11_Template","OrderLinksComponent_option_17_Template","OrderLinksComponent_tr_33_Template","tmp_2_0","OrdersComponent_tr_37_Template_tr_click_0_listener","item_r4","onRowClick","dialog","orders","filteredOrders","loadCompanies","setupSalesPersonListener","setupOrdersListener","setupCustomerNameFilterListener","loadSalesRep","loadOrders","applyFilters","width","OrderService","MatDialog","OrdersComponent_Template","OrdersComponent_option_11_Template","OrdersComponent_option_17_Template","OrdersComponent_tr_37_Template","passwordRequestForm","email","passwordRequest","PasswordRequestComponent_Template","PasswordRequestComponent_Template_form_ngSubmit_7_listener","mismatchedPassword","passwordResetForm","minLength","specialCharacterValidator","confirmPassword","passwordReset","hasSpecialCharacter","noSpecialCharacter","PasswordResetComponent_Template","PasswordResetComponent_Template_form_ngSubmit_7_listener","PasswordResetComponent_div_16_Template","PasswordResetComponent_div_17_Template","PasswordResetComponent_div_18_Template","i8","FormsModule","PreorderFormComponent_tr_27_div_16_Template","PreorderFormComponent_tr_27_div_22_Template","i_r2","preOrder_r1","tmp_5_0","tmp_6_0","ctx_r2","getUnitType","tmp_10_0","tmp_11_0","tmp_12_0","preorderService","preOrderForm","preOrders","vendorId","getPreOrders","setPreOrders","preOrderFormGroups","preOrder","createPreOrderForm","preOrderFormArray","setControl","sodId","dispatchDate","descriptionMemo","unitSize","weight","preOrdersArray","getModifiedPreOrders","preOrderGroup","submitAll","modifiedPreOrders","forEach","updatePreOrderWeightAndPrice","trackByOrderId","unitTypeMap","PreorderService","PreorderFormComponent_Template","PreorderFormComponent_Template_form_ngSubmit_6_listener","PreorderFormComponent_tr_27_Template","MinValidator","VendorLinksComponent_tr_16_Template_a_click_7_listener","vendor_r2","VendorLinksComponent_tr_16_Template_a_keyup_7_listener","vendorsService","vendors$","getVendors","navigateToPreorderForm","origin","VendorsService","VendorLinksComponent_Template","VendorLinksComponent_tr_16_Template","DOC_ORIENTATION","ProductDetailsDialogComponent_ng_container_6_Template_div_click_3_listener","_r2","deletePhoto","photoUrl","ProductDetailsDialogComponent_ng_template_7_Template_input_change_0_listener","_r4","ProductDetailsDialogComponent_ng_template_7_Template_button_click_2_listener","fileInput_r5","triggerFileInput","compCost","yield","laborPackCost","tmp_4_0","ProductDetailsDialogComponent","productService","imageCompress","toggleInfoVisibility","reader","FileReader","readAsDataURL","onload","imageBase64","result","compressFile","Default","compressedImage","dataURItoBlob","compressedFile","File","uploadProductImage","compItemId","updatedItem","confirm","deleteProductPhoto","dataURI","byteString","atob","mimeString","arrayBuffer","ArrayBuffer","intArray","Uint8Array","charCodeAt","ProductService","NgxImageCompressService","ProductDetailsDialogComponent_Template","ProductDetailsDialogComponent_ng_container_6_Template","ProductDetailsDialogComponent_ng_template_7_Template","ProductDetailsDialogComponent_Template_button_click_9_listener","ProductDetailsDialogComponent_div_11_Template","compDescription","compInstructions","uploadButton_r6","notes","woh","buyer","sixtySales","tenSales","preOrderHours","debounceTime","distinctUntilChanged","BehaviorSubject","Subject","InfiniteScrollDirective","FormControl","origin_r2","buyer_r3","ProductsComponent_table_38_tr_12_Template_tr_click_0_listener","item_r5","ctx_r5","ɵɵclassProp","ProductsComponent_table_38_tr_12_Template","products_r7","searchTerm","showRelevantItems","showSixtySales","showWoh","showYield","showWithImages","originFilter","packSizeFilter","buyerFilter","minCompCost","minCompCostControl","uniqueOrigins","uniquePackSizes","uniqueBuyers","searchSubject","inventoryItemsSubject","inventoryItems$","asObservable","loadData","searchSubscription","trimComparator","parseFloat","onCompCostChange","getProducts","currentData","newData","currentItem","filteredData","fullyFilteredData","populateUniqueDropdowns","tagName","toggleRelevantItemsFilter","toggleSixtySalesFilter","toggleWohFilter","toggleYieldFilter","toggleWithImagesFilter","onFilterChange","onScroll","onSearchChange","prev","curr","unsubscribe","products","Set","Boolean","Number","ProductsComponent_Template","ProductsComponent_Template_div_scrolled_0_listener","ProductsComponent_Template_input_input_7_listener","ProductsComponent_Template_button_click_9_listener","ProductsComponent_Template_button_click_11_listener","ProductsComponent_Template_button_click_13_listener","ProductsComponent_Template_button_click_15_listener","ProductsComponent_Template_button_click_17_listener","ProductsComponent_Template_select_change_23_listener","ɵɵtwoWayListener","ProductsComponent_Template_select_ngModelChange_23_listener","ɵɵtwoWayBindingSet","ProductsComponent_option_26_Template","ProductsComponent_Template_input_ngModelChange_30_listener","ProductsComponent_Template_input_input_30_listener","ProductsComponent_Template_select_change_34_listener","ProductsComponent_Template_select_ngModelChange_34_listener","ProductsComponent_option_37_Template","ProductsComponent_table_38_Template","ProductsComponent_ng_template_40_Template","ɵɵtwoWayProperty","noData_r8","NgModel","ɵɵinject","factory","ɵfac","providedIn","AuthInterceptor","intercept","req","getToken","clonedRequest","clone","setHeaders","Authorization","handle","tokenKey","fullnameKey","localStorage","setItem","getItem","removeItem","HttpParams","set","hasArrived","patch","deliveryStopId","reportProgress","observe","HttpErrorResponse","GlobalErrorHandlerService","handleError","onLine","ErrorEvent","statusText","company_id","salesrep_name","past_hours","patchUrl","toString","content","productId","delete","matSnackBar","verticalPosition","horizontalPos","action","success","warning","info","showSnackBar","style","panelClass","snackBarRef","horizontalPosition","onAction","dismiss","production","ModalModule","MatSnackBarModule","MatMenuModule","MatListModule","MatSidenavModule","MatSlideToggleModule","provideAnimations","BrowserModule","bootstrapApplication","ErrorHandler","importProvidersFrom","HTTP_INTERCEPTORS","provideHttpClient","withInterceptorsFromDi","provideServiceWorker","providers","provide","useClass","multi","enabled","registrationStrategy"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}