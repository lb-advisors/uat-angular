{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/app-install-prompt/app-install-prompt.component.ts","./src/app/components/app-install-prompt/app-install-prompt.component.html","./src/app/components/data/data.component.ts","./src/app/components/data/data.component.html","./src/app/components/driver-route/driver-route.component.ts","./src/app/components/driver-route/driver-route.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/image-thumbnail/image-thumbnail.component.ts","./src/app/components/image-thumbnail/image-thumbnail.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/logo/logo.component.ts","./src/app/components/logo/logo.component.html","./src/app/components/logout/logout.component.ts","./src/app/components/logout/logout.component.html","./src/app/components/order-confirmation/order-confirmation.component.ts","./src/app/components/order-confirmation/order-confirmation.component.html","./src/app/components/order-details-dialog/order-details-dialog.component.ts","./src/app/components/order-details-dialog/order-details-dialog.component.html","./src/app/components/order-exists/order-exists.component.ts","./src/app/components/order-exists/order-exists.component.html","./src/app/components/order-form/order-form.component.ts","./src/app/components/order-form/order-form.component.html","./src/app/components/order-links/order-links.component.ts","./src/app/components/order-links/order-links.component.html","./src/app/components/orders/orders.component.ts","./src/app/components/orders/orders.component.html","./src/app/components/password-request/password-request.component.ts","./src/app/components/password-request/password-request.component.html","./src/app/components/password-reset/password-reset.component.ts","./src/app/components/password-reset/password-reset.component.html","./src/app/components/preorder-form/preorder-form.component.ts","./src/app/components/preorder-form/preorder-form.component.html","./src/app/components/preorder-links/preorder-links.component.ts","./src/app/components/preorder-links/preorder-links.component.html","./src/app/components/product-details-dialog/product-details-dialog.component.ts","./src/app/components/product-details-dialog/product-details-dialog.component.html","./src/app/components/products/products.component.ts","./src/app/components/products/products.component.html","./src/app/guards/auth.guard.ts","./src/app/interceptors/auth.interceptor.ts","./src/app/services/auth.service.ts","./src/app/services/driver-route.service.ts","./src/app/services/global-error-handler.service.ts","./src/app/services/order-form.service.ts","./src/app/services/order-links.service.ts","./src/app/services/order.services.ts","./src/app/services/preorder.service.ts","./src/app/services/products.service.ts","./src/app/services/pwa.service.ts","./src/app/services/snackbar.service.ts","./src/app/services/vendors.service.ts","./src/environments/environment.development.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DriverRouteComponent } from './components/driver-route/driver-route.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { OrderLinksComponent } from './components/order-links/order-links.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { LogoutComponent } from './components/logout/logout.component';\nimport { ProductsComponent } from './components/products/products.component';\nimport { OrderConfirmationComponent } from './components/order-confirmation/order-confirmation.component';\nimport { OrderExistsComponent } from './components/order-exists/order-exists.component';\nimport { OrderFormComponent } from './components/order-form/order-form.component';\nimport { DataComponent } from './components/data/data.component';\nimport { OrdersComponent } from './components/orders/orders.component';\nimport { VendorLinksComponent } from './components/preorder-links/preorder-links.component'; // Updated the import to match the renamed component\nimport { PreorderFormComponent } from './components/preorder-form/preorder-form.component'; // Import the new PreorderFormComponent\nimport { AuthGuard } from './guards/auth.guard';\nimport { PasswordRequestComponent } from './components/password-request/password-request.component';\nimport { PasswordResetComponent } from './components/password-reset/password-reset.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  { path: 'home', component: HomeComponent, title: 'Home', canActivate: [AuthGuard] },\n  { path: 'driver', component: DriverRouteComponent, title: 'Driver Route', canActivate: [AuthGuard] },\n  { path: 'order-links', component: OrderLinksComponent, title: 'Order Links' },\n  { path: 'login', component: LoginComponent, title: 'Login' },\n  { path: 'logout', component: LogoutComponent, title: 'Logout' },\n  { path: 'password-request', component: PasswordRequestComponent, title: 'Password Request' },\n  { path: 'password-reset/:token', component: PasswordResetComponent, title: 'Password Reset' },\n  { path: 'products', component: ProductsComponent, title: 'Products', canActivate: [AuthGuard] },\n  { path: 'customer/:id/order-confirmation', component: OrderConfirmationComponent, title: 'Order Confirmation' },\n  { path: 'customer/:id/order-exists', component: OrderExistsComponent, title: 'Order Exists' },\n  { path: 'customer/:id/order-form', component: OrderFormComponent, title: 'Order Form' },\n  { path: 'data', component: DataComponent, title: 'Data', canActivate: [AuthGuard] },\n  { path: 'orders', component: OrdersComponent, title: 'Orders', canActivate: [AuthGuard] },\n  { path: 'preorder-links', component: VendorLinksComponent, title: 'Vendor Links', canActivate: [AuthGuard] },\n  { path: 'preorder-form/:vendorId', component: PreorderFormComponent, title: 'Preorder Form', canActivate: [AuthGuard] }, // New route for PreorderFormComponent\n  { path: '**', redirectTo: 'login' }, // Wildcard route to handle unmatched paths, redirect to login\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { ChangeDetectionStrategy, Component, isDevMode } from '@angular/core';\nimport { Router, RouterOutlet } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  standalone: true,\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  imports: [CommonModule, MatToolbarModule, MatIconModule, RouterOutlet],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent {\n  isDevMode: boolean = isDevMode();\n  apiUrl = environment.apiUrl;\n  showWarning = false;\n  //isOrderForm: boolean = false;\n\n  constructor(private router: Router) {\n    // Check that UAT is not using the prod backend\n    if (this.isDevMode && this.apiUrl.includes('prod')) {\n      this.showWarning = true;\n      alert('WARNING: Angular is in Dev mode but connected to production !!!');\n    }\n  }\n\n  //ngOnInit(): void {\n  //  // Check if we are on the order form\n  //  this.router.events.subscribe((event) => {\n  //    if (event instanceof NavigationEnd) {\n  //      const currentRoute = event.urlAfterRedirects;\n  //      this.isOrderForm = currentRoute.includes('order-') && !currentRoute.includes('order-links');\n  //    }\n  //  });\n  //}\n}\n","<main>\n    <router-outlet></router-outlet>\n</main>\n\n<!-- Footer with Navigation and Social Icons-->\n<footer class=\"mat-drawer-container\">\n    <div class=\"container\">\n        <div class=\"text-align-center\">\n            © 2024 - Pacific Fresh Fish Company\n            <div *ngIf=\"isDevMode\" class=\"dev-mode\">UAT ENVIRONMENT</div>\n            <div *ngIf=\"isDevMode\" class=\"dev-mode\">{{apiUrl}}</div>\n        </div>\n    </div>\n</footer>\n","import { Platform } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PwaService } from 'src/app/services/pwa.service';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\n\n@Component({\n  standalone: true,\n  selector: 'app-install-prompt',\n  imports: [CommonModule],\n  templateUrl: './app-install-prompt.component.html',\n  styleUrls: ['./app-install-prompt.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppInstallPromptComponent implements OnInit, OnDestroy {\n  beforeInstallPromptHandler?: (event: BeforeInstallPromptEvent) => void;\n  deferredPrompt: BeforeInstallPromptEvent | null = null;\n  isPwa$: Observable<boolean>;\n  isIosButNotStandalone: boolean; // iOs\n\n  constructor(private pwaService: PwaService, private platform: Platform, private snackbarService: SnackbarService) {\n    this.isPwa$ = this.pwaService.isPwa$;\n    const isStandalone = 'standalone' in window.navigator && window.navigator['standalone'];\n    this.isIosButNotStandalone = !isStandalone && platform.IOS;\n  }\n\n  ngOnInit() {\n    console.log('ngOnInit');\n    this.beforeInstallPromptHandler = (event: BeforeInstallPromptEvent) => {\n      console.log('beforeinstallprompt');\n\n      // Prevent the mini-infobar from appearing\n      event.preventDefault();\n      this.deferredPrompt = event;\n      this.pwaService.updateValue(true);\n    };\n\n    window.addEventListener('beforeinstallprompt', this.beforeInstallPromptHandler as EventListener);\n  }\n\n  ngOnDestroy() {\n    window.removeEventListener('beforeinstallprompt', this.beforeInstallPromptHandler as EventListener);\n    this.pwaService.updateValue(false);\n  }\n\n  promptInstall() {\n    if (this.deferredPrompt) {\n      this.deferredPrompt.prompt(); // Show the install prompt\n      this.deferredPrompt.userChoice.then(() => {\n        this.deferredPrompt = null;\n        this.pwaService.updateValue(false);\n      });\n    }\n  }\n\n  showIosInstructions() {\n    this.snackbarService.showInfo(\"To install this web app on your device, tap the Menu button and then 'Add to Home Screen' button\", 20000);\n  }\n}\n\ninterface BeforeInstallPromptEvent extends Event {\n  readonly platforms: string[];\n  prompt(): Promise<void>;\n  userChoice: Promise<{ outcome: 'accepted' | 'dismissed'; platform: string }>;\n}\n","@if ( (isPwa$ | async) === true) {\n<div class=\"install-banner\">\n  <button mat-raised-button color=\"primary\" (click)=\"promptInstall()\">\n    Install as an Application\n  </button>\n</div>\n} @else if (!isIosButNotStandalone) {\n<div class=\"install-banner\">\n  <button mat-raised-button color=\"primary\" (click)=\"showIosInstructions()\">\n    Install as an Application\n  </button>\n</div>}","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { environment } from 'src/environments/environment'; // Import the environment configuration\n\n@Component({\n  selector: 'app-data',\n  templateUrl: './data.component.html',\n  styleUrls: ['./data.component.css'],\n})\nexport class DataComponent {\n  private apiUrl = environment.apiUrl;\n  uploadUrl: string = `${this.apiUrl}/database/csv/upload/profiles`;\n\n  constructor(private http: HttpClient, private snackBar: MatSnackBar) {}\n\n  downloadOrders() {\n    const url = `${this.apiUrl}/database/csv/download/orders`;\n\n    this.http.get(url, { responseType: 'blob' }).subscribe(\n      (response: Blob) => {\n        const blob = new Blob([response], { type: 'text/csv' });\n        const downloadURL = window.URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = downloadURL;\n        link.download = 'orders.csv';\n        link.click();\n        window.URL.revokeObjectURL(downloadURL);\n      },\n      (error) => {\n        console.error('Download failed:', error);\n        this.snackBar.open('Failed to download orders. Please try again later.', 'Close', { duration: 3000 });\n      },\n    );\n  }\n\n  onFileSelected(event: Event) {\n    const fileInput = event.target as HTMLInputElement;\n    if (fileInput.files && fileInput.files.length > 0) {\n      const file = fileInput.files[0];\n      this.uploadFile(file);\n    }\n  }\n\n  uploadFile(file: File) {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    this.snackBar.open('Processing your CSV file', '', { duration: 20000 });\n\n    this.http.post(this.uploadUrl, formData).subscribe({\n      next: () => {\n        this.snackBar.open('All Done', '', { duration: 3000 });\n      },\n    });\n  }\n}\n","<div class=\"data-container\">\n    <button class=\"action-button download-button\" (click)=\"downloadOrders()\">Download Orders</button>\n    <button class=\"action-button upload-button\" (click)=\"fileInput.click()\">Upload Profiles</button>\n    <input type=\"file\" #fileInput accept=\".csv\" style=\"display: none\" (change)=\"onFileSelected($event)\" />\n</div>\n\n<div class=\"upload-instructions\">\n    <p>CSV file required</p>\n    <p>File with these columns, in this order required:</p>\n    <ul>\n        <li>ProfileDID</li>\n        <li>SalesRepName</li>\n        <li>SalesRepCell</li>\n        <li>SalesRepEmail</li>\n        <li>ProfileID</li>\n        <li>CustomerID</li>\n        <li>CustomerName</li>\n        <li>CompItemID</li>\n        <li>ProfileDescription</li>\n        <li>ProfileInstruction</li>\n        <li>UnitTypePD</li>\n        <li>PackSizePD</li>\n        <li>SalesPrice</li>\n        <li>CustomerContactName</li>\n        <li>CustomerCell</li>\n        <li>CustomerEmail</li>\n        <li>Company</li>\n        <li>CompanyID</li>\n    </ul>\n</div>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, SecurityContext } from '@angular/core';\nimport { DriverRouteService } from '../../services/driver-route.service';\nimport { Observable } from 'rxjs';\nimport { DeliveryStop } from 'src/app/models/delivery-stop.model';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { map, tap } from 'rxjs/operators';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { HttpEventType } from '@angular/common/http';\nimport { ImageThumbnailComponent } from '../image-thumbnail/image-thumbnail.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router'; // Import RouterModule\n\ninterface Driver {\n  name: string;\n}\n\n@Component({\n  standalone: true,\n  selector: 'app-driver-route',\n  templateUrl: './driver-route.component.html',\n  styleUrls: ['./driver-route.component.css'],\n  imports: [CommonModule, MatTableModule, ImageThumbnailComponent, RouterModule], // Add RouterModule here\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DriverRouteComponent implements OnInit {\n  readonly maxFileSize = 4 * 1024 * 1024; // 4 MB\n\n  driverNames$!: Observable<Driver[]>;\n  deliveryRoute$: Observable<DeliveryStop[]> | undefined;\n  today: string;\n  selectedFile: File | null = null;\n\n  displayedColumns: string[] = ['deliveryAddress1', 'address', 'customerPhone', 'actualArrivalTime'];\n\n  constructor(\n    private driverRouteService: DriverRouteService,\n    private snackBarService: SnackbarService,\n    private sanitizer: DomSanitizer,\n    private cdr: ChangeDetectorRef,\n  ) {\n    this.today = this.formatDate(new Date());\n  }\n\n  ngOnInit(): void {\n    this.driverNames$ = this.driverRouteService.getDrivers().pipe(\n      tap((data) => {\n        if (data && data.length > 0) {\n          this.refreshDeliverRoute(data[0].name, this.today);\n        }\n      }),\n    );\n  }\n\n  formatDate(date: Date): string {\n    const month = ('0' + (date.getMonth() + 1)).slice(-2);\n    const day = ('0' + date.getDate()).slice(-2);\n    const year = date.getFullYear();\n    return `${month}/${day}/${year}`;\n  }\n\n  refreshDeliverRoute(driverName: string, deliveryDate: string): void {\n    const formattedDate = new Date(deliveryDate).toISOString().split('T')[0]; // Ensure date is formatted as YYYY-MM-DD\n    this.deliveryRoute$ = this.driverRouteService\n      .getDeliveryRoute(driverName, formattedDate)\n      .pipe(map((deliveryStops) => this.calculateTimeDifferences(deliveryStops)));\n  }\n\n  onFileSelected(deliveryRoute: DeliveryStop, event: Event) {\n    const input = event.target as HTMLInputElement;\n    if (input.files && input.files.length > 0) {\n      const file = input.files[0];\n      if (file && file.type.startsWith('image/')) {\n        if (file.size <= this.maxFileSize) {\n          this.selectedFile = file;\n          this.uploadFile(deliveryRoute, file);\n        } else {\n          this.snackBarService.showError('File size exceeds 4 MB.');\n        }\n      } else {\n        this.snackBarService.showError('Please select an image file');\n        this.selectedFile = null;\n      }\n    }\n  }\n\n  uploadFile(deliveryRoute: DeliveryStop, file: File) {\n    this.snackBarService.showSuccess('Your file is being uploaded');\n    this.driverRouteService.uploadPhoto(deliveryRoute.id, file).subscribe({\n      next: (event) => {\n        switch (event.type) {\n          case HttpEventType.Response: {\n            const updatedDeliveryStop = event.body as DeliveryStop;\n            Object.assign(deliveryRoute, updatedDeliveryStop);\n            this.snackBarService.closeSnackBar();\n            this.cdr.detectChanges();\n          }\n        }\n      },\n    });\n  }\n\n  getGoogleMapsUrl(address2: string, address3: string): SafeUrl {\n    const url = `https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(address2 + ' ' + address3)}`;\n\n    const sanitizedUrl = this.sanitizer.sanitize(SecurityContext.URL, url);\n    if (sanitizedUrl) {\n      return this.sanitizer.bypassSecurityTrustUrl(sanitizedUrl);\n    } else {\n      return '';\n    }\n  }\n\n  private calculateTimeDifferences(deliveryStops: DeliveryStop[]): DeliveryStop[] {\n    for (let i = deliveryStops.length - 1; i > 0; i--) {\n      const currentStop = deliveryStops[i];\n      const previousStop = deliveryStops[i - 1];\n\n      const currentTime = new Date(currentStop.plannedArrivalTime).getTime();\n      const previousTime = new Date(previousStop.plannedArrivalTime).getTime();\n\n      const timeDifferenceInMinutes = Math.round((currentTime - previousTime) / 60000);\n      currentStop.timeDifference = timeDifferenceInMinutes;\n    }\n\n    if (deliveryStops.length > 0) {\n      deliveryStops[0].timeDifference = undefined; // First row will have no time difference\n    }\n    return deliveryStops;\n  }\n}\n","<div class=\"container\">\n  <!-- Make the entire image-container clickable by wrapping in a link -->\n  <a [routerLink]=\"['/home']\" class=\"image-container\">\n    <img src=\"assets/logo.png\" alt=\"Company Logo\">\n  </a>\n\n  <h2 class=\"driver-routes-title\">Driver Routes</h2>\n\n  <div class=\"filters\">\n    <div class=\"driver-filter\">\n      <label for=\"driver-name\">Driver Name:</label>\n      <select id=\"driver-name\" #driverName (change)=\"refreshDeliverRoute(driverName.value, deliveryDate2.value)\">\n        <option *ngFor=\"let driverNames of (driverNames$ | async); let i = index\" [value]=\"driverNames.name\" [selected]=\"i === 0\">{{driverNames.name}}</option>\n      </select>\n    </div>\n\n    <div class=\"delivery-date-filter\">\n      <label for=\"delivery-date\">Delivery Date:</label>\n      <input type=\"text\" id=\"delivery-date\" #deliveryDate2 [value]=\"today\" readonly class=\"delivery-date-input\">\n    </div>\n  </div>\n\n  <table mat-table *ngIf=\"deliveryRoute$ | async as dataSource\" [dataSource]=\"dataSource\" class=\"mat-elevation-z8 driver-routes-grid\" matSort>\n    <!-- Customer Column -->\n    <ng-container matColumnDef=\"deliveryAddress1\">\n      <th mat-header-cell *matHeaderCellDef class=\"no-bottom-border\">Customer</th>\n      <td mat-cell *matCellDef=\"let element\" class=\"no-bottom-border\">\n        {{element.deliveryAddress1}}\n        <div *ngIf=\"element !== dataSource[dataSource.length - 1]\" class=\"arrow-container\">\n          <i class=\"fas fa-arrow-down\"></i>\n          <span class=\"time-difference-arrow\">+{{ dataSource[dataSource.indexOf(element) + 1].timeDifference + ' m' }}</span>\n        </div>\n      </td>\n    </ng-container>\n\n    <!-- Address Column (Concatenation of Delivery Address 2 and 3) -->\n    <ng-container matColumnDef=\"address\">\n      <th mat-header-cell *matHeaderCellDef>Address</th>\n      <td mat-cell *matCellDef=\"let element\" class=\"address-column\">\n        <a [href]=\"getGoogleMapsUrl(element.deliveryAddress2, element.deliveryAddress3)\" target=\"_blank\">\n          {{element.deliveryAddress2}} {{element.deliveryAddress3}}\n        </a>\n      </td>\n    </ng-container>\n\n    <!-- Customer Phone Column -->\n    <ng-container matColumnDef=\"customerPhone\">\n      <th mat-header-cell *matHeaderCellDef class=\"wrap\">Customer Phone</th>\n      <td mat-cell *matCellDef=\"let element\" class=\"customerPhone\"><a href=\"tel:+1{{element.customerPhone}} \"> {{element.customerPhone}}</a> </td>\n    </ng-container>\n\n    <!-- Actual Arrival Time Column -->\n    <ng-container matColumnDef=\"actualArrivalTime\">\n      <th mat-header-cell *matHeaderCellDef>Arrival</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <div *ngIf=\"!element.actualArrivalTime || !element.fileUrl; else alreadyArrivedBlock\" class=\"custom-file-input\">\n          <input type=\"file\" id=\"file\" #fileInput (change)=\"onFileSelected(element, $event)\" accept=\"image/*\" required hidden>\n          <button type=\"button\" class=\"button\" (click)=\"fileInput.click()\">Arrived</button>\n        </div>\n        <ng-template #alreadyArrivedBlock>\n          <div>\n            <app-image-thumbnail [imageUrl]=\"element.fileUrl\"\n              [title]=\"element.deliveryAddress2 + ' ' + element.deliveryAddress3 + ' (' + (element.actualArrivalTime | date: 'medium') + ')'\"></app-image-thumbnail>\n          </div>\n        </ng-template>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" [ngClass]=\"{'arrived-row': row.actualArrivalTime}\"></tr>\n  </table>\n</div>","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  standalone: true,\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n  imports: [CommonModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HomeComponent implements OnInit {\n  username!: string | null;\n\n  constructor(private router: Router, private authService: AuthService) {}\n\n  ngOnInit(): void {\n    this.username = this.authService.getFullname();\n  }\n\n  navigateTo(page: string): void {\n    this.router.navigate([`/${page}`]);\n  }\n\n  logout(): void {\n    this.authService.logout();\n  }\n}\n","<div class=\"page container\">\n  <div class=\"button-container\">\n    <button class=\"nav-button\" (click)=\"navigateTo('products')\">Products</button>\n    <button class=\"nav-button\" (click)=\"navigateTo('order-links')\">New Order</button>\n    <button class=\"nav-button\" (click)=\"navigateTo('orders')\">Existing Orders</button>\n    <button class=\"nav-button\" (click)=\"navigateTo('preorder-links')\">Preorders</button> <!-- New Button -->\n    <button class=\"nav-button\" (click)=\"navigateTo('driver')\">Routes</button>\n    <button class=\"nav-button logout-button\" (click)=\"logout()\">Logout</button>\n  </div>\n\n  <div class=\"button-container user-info\">\n    Welcome, {{ username }}!\n  </div>\n\n  <div class=\"image-grid\">\n    <img src=\"assets/goldenstateseafood.png\" alt=\"GS Image\" class=\"grid-image image1\">\n    <img src=\"assets/logo.png\" alt=\"Logo Image\" class=\"grid-image image2\">\n    <img src=\"assets/fogriver3.png\" alt=\"Fog River Image\" class=\"grid-image image3\">\n    <img src=\"assets/naturecure.png\" alt=\"Nature Cure Image\" class=\"grid-image image4\">\n  </div>\n</div>","import { ChangeDetectionStrategy, Component, Input, TemplateRef } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\n\n@Component({\n  standalone: true,\n  selector: 'app-image-thumbnail',\n  templateUrl: './image-thumbnail.component.html',\n  styleUrl: './image-thumbnail.component.css',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ImageThumbnailComponent {\n  @Input() imageUrl: string = '';\n  @Input() title: string | null = ' ';\n\n  modalRef!: BsModalRef;\n\n  constructor(private modalService: BsModalService) {}\n\n  openModal(template: string | TemplateRef<unknown>) {\n    this.modalRef = this.modalService.show(template, Object.assign({}, { class: 'modal-lg' }));\n  }\n}\n","<!-- eslint-disable @angular-eslint/template/click-events-have-key-events -->\n<!-- eslint-disable @angular-eslint/template/interactive-supports-focus -->\n<div (click)=\"openModal(imageModal)\">\n    <img [src]=\"imageUrl\" alt=\"Image Thumbnail\" title=\"Click to enlarge\" class=\"thumbnail\" (keyup)=\"modalRef.hide()\">\n</div>\n\n<ng-template #imageModal>\n    <div class=\" modal-header\">\n        <h4 class=\"modal-title\">{{title}}</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body text-center\">\n        <img [src]=\"imageUrl\" alt=\"Full Image\" class=\"full-image\" (click)=\"modalRef.hide()\" (keyup)=\"modalRef.hide()\">\n    </div>\n</ng-template>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\nimport { Router, RouterModule } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { catchError, throwError } from 'rxjs';\nimport { LoginResponse } from 'src/app/models/login-response.model ';\nimport { AppInstallPromptComponent } from '../app-install-prompt/app-install-prompt.component';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  standalone: true,\n  imports: [CommonModule, MatFormFieldModule, MatInputModule, MatButtonModule, ReactiveFormsModule, RouterModule, AppInstallPromptComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoginComponent {\n  loginForm: FormGroup;\n  loading = false;\n  errorMessage: string | null = null;\n\n  constructor(private router: Router, private cdr: ChangeDetectorRef, private formBuilder: FormBuilder, private authService: AuthService) {\n    this.loginForm = this.formBuilder.group({\n      username: ['', [Validators.required]],\n      password: ['', Validators.required],\n    });\n  }\n\n  onLogin() {\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    this.errorMessage = null;\n    const { username, password } = this.loginForm.value;\n\n    this.authService\n      .login(username, password)\n      .pipe(\n        catchError((loginError) => {\n          const errorCode = loginError.status;\n          let errorMessage = loginError.error?.message || 'Please check your username and password';\n          if (errorCode == 401) {\n            errorMessage = 'Please check your username and password';\n          }\n          this.loading = false;\n          this.errorMessage = `Login failed. ${errorMessage}.`;\n          this.cdr.markForCheck();\n\n          // Rethrow the error for the global error handler\n          return throwError(() => loginError);\n        }),\n      )\n      .subscribe({\n        next: (loginResponse: LoginResponse) => {\n          const fullname = `${loginResponse.firstName ?? ''} ${loginResponse.lastName ?? ''}`.trim();\n          this.authService.saveFullnameAndToken(fullname, loginResponse.token);\n          this.router.navigate(['/products']);\n        },\n      });\n  }\n}\n","<div class=\"container\">\n    <div class=\"login-container\">\n        <div class=\"logo-container\">\n            <img src=\"assets/logo.png\" alt=\"Company Logo\" class=\"logo\">\n        </div>\n\n        <h1>Login</h1>\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin()\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Username</mat-label>\n                <input matInput type=\"text\" formControlName=\"username\" placeholder=\"Enter your username\" autocomplete=\"username\">\n            </mat-form-field>\n\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Password</mat-label>\n                <input matInput type=\"password\" formControlName=\"password\" placeholder=\"Enter your password\" autocomplete=\"current-password\">\n            </mat-form-field>\n\n            <a [routerLink]=\"['/password-request']\">\n                Forgot password?\n            </a>\n\n            <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"loading || loginForm.invalid\">\n                <span *ngIf=\"!loading\">Login</span>\n                <span *ngIf=\"loading\">Logging in...</span>\n            </button>\n        </form>\n\n        <div *ngIf=\"errorMessage\" class=\"error-message\">\n            {{ errorMessage }}\n        </div>\n    </div>\n</div>\n\n<app-install-prompt></app-install-prompt>","import { CommonModule } from '@angular/common';\nimport { Component, Input, OnChanges } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-logo',\n  standalone: true,\n  imports: [CommonModule, RouterModule],\n  templateUrl: './logo.component.html',\n  styleUrls: ['./logo.component.css'],\n})\nexport class LogoComponent implements OnChanges {\n  @Input() companyId!: number;\n\n  imageSrc = 'assets/fogriver.png';\n  imageBackgroundColor = '#000000';\n  isLoggedIn: boolean = false;\n\n  constructor(private authService: AuthService) {\n    this.isLoggedIn = authService.isLoggedIn();\n  }\n\n  ngOnChanges(): void {\n    if (this.companyId === 14) {\n      this.imageSrc = 'assets/fogriver.png';\n      this.imageBackgroundColor = '#000000'; // Black background\n    } else {\n      this.imageSrc = 'assets/logo.png';\n      this.imageBackgroundColor = 'rgba(0, 16, 46, 1)'; // Dark blue background\n    }\n  }\n}\n","@if(isLoggedIn)\n{\n<a [routerLink]=\"['/home']\">\n    <div *ngIf=\"companyId\" class=\"image-container\" [ngStyle]=\"{'background-color': imageBackgroundColor}\">\n        <img [src]=\"imageSrc\" alt=\"Company Logo\">\n    </div>\n</a>\n} @else {\n<div *ngIf=\"companyId\" class=\"image-container\" [ngStyle]=\"{'background-color': imageBackgroundColor}\">\n    <img [src]=\"imageSrc\" alt=\"Company Logo\">\n</div>\n}","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n})\nexport class LogoutComponent {\n  constructor(private authService: AuthService) {\n    this.authService.logout();\n  }\n}\n","<br /><br /><br />\n\n<h1 style=\"padding-left: 200px;\">You have been logged out.</h1>\n\n<br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Location, CommonModule } from '@angular/common';\nimport { LogoComponent } from '../logo/logo.component';\nimport { OrderConfirmation } from 'src/app/models/order-confirmation.model';\n\n@Component({\n  standalone: true,\n  selector: 'app-order-confirmation',\n  templateUrl: './order-confirmation.component.html',\n  styleUrls: ['./order-confirmation.component.css'],\n  imports: [CommonModule, LogoComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationComponent implements OnInit {\n  orderData!: OrderConfirmation;\n  companyId!: number;\n\n  constructor(private router: Router, private location: Location) {}\n\n  ngOnInit(): void {\n    this.orderData = history.state['order']; // Access the passed data here'\n    this.companyId = history.state['companyId'];\n  }\n\n  goBack(): void {\n    this.router.navigate([`/customer/${this.orderData.customerId}/order-form`]);\n  }\n}\n","<div class=\"container\">\n\n  <app-logo [companyId]=\"companyId\"></app-logo>\n\n  <h2>Hello {{ orderData.customerName }},</h2>\n  <p>Thank you for your order. Here are the details of your order:</p>\n  <br>\n  <table class=\"order-grid\" id=\"order-grid\">\n    <thead class=\"sticky\">\n      <tr>\n        <th>Description</th>\n        <th>Unit Type</th>\n        <th>Pack Size</th>\n        <th>Price</th>\n        <th>Qty</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let product of orderData.profiles\">\n        <td>{{ product.profileDescription }}</td>\n        <td>{{ product.unitType }}</td>\n        <td>{{ product.packSize }}</td>\n        <td class=\"price\">{{ product.salesPrice | number:'1.2-2' }}</td>\n        <td>{{ product.quantity }}</td>\n      </tr>\n    </tbody>\n  </table>\n\n  <div>\n    <div class=\"total\"><strong>Total: </strong>\n      <span id=\"total-amount\">{{ orderData.totalPrice| currency:'USD':true }}</span>\n    </div>\n  </div>\n\n  <div>\n    <p>Delivery date: {{orderData.deliveryDate | date: 'MM/dd/yyyy'}}</p>\n  </div>\n  <div *ngIf=\"orderData.shipToId\">\n    <p>Delivery location: {{orderData.shipToName}}</p>\n  </div>\n\n\n  <p>Thank you,<br>Your Sales Team</p>\n  <button class=\"button\" (click)=\"goBack()\">Back</button>\n</div>","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { CommonModule } from '@angular/common';\nimport { Order } from 'src/app/models/order.model';\n\n@Component({\n  standalone: true,\n  selector: 'app-order-details-dialog',\n  templateUrl: './order-details-dialog.component.html',\n  styleUrls: ['./order-details-dialog.component.css'],\n  imports: [CommonModule, MatDialogModule, MatButtonModule],\n})\nexport class OrderDetailsDialogComponent {\n  constructor(@Inject(MAT_DIALOG_DATA) public order: Order, private dialogRef: MatDialogRef<OrderDetailsDialogComponent>) {}\n\n  closeDialog(): void {\n    this.dialogRef.close();\n  }\n}\n","<h2 mat-dialog-title>Order Details</h2>\n<mat-dialog-content>\n  <p><strong>Customer Name:</strong> {{ order.customerName }}</p>\n  <p><strong>Order Date:</strong> {{ order.deliveryDate | date }}</p>\n  <p><strong>Customer PO:</strong> {{ order.customerPo }}</p>\n  <p><strong>Sales Rep:</strong> {{ order.salesRepName }}</p>\n  <p><strong>Ship To:</strong> {{ order.shipToName }}</p>\n  <p><strong>Total Price:</strong> {{ order.totalPrice | currency }}</p>\n\n  <!-- Profiles section -->\n  <h3>Profiles</h3>\n  <table class=\"profile-table\">\n    <thead>\n      <tr>\n        <th>ID</th>\n        <th class=\"description-column\">Description</th>\n        <th>Unit Type</th>\n        <th>Pack Size</th>\n        <th>Quantity</th>\n        <th>Sales Price</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let profile of order.profiles\">\n        <td>{{ profile.id }}</td>\n        <td class=\"description-column\">{{ profile.profileDescription }}</td>\n        <td>{{ profile.unitType }}</td>\n        <td>{{ profile.packSize }}</td>\n        <td>{{ profile.quantity }}</td>\n        <td>{{ profile.salesPrice | currency }}</td>\n      </tr>\n    </tbody>\n  </table>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-button mat-dialog-close>Close</button>\n</mat-dialog-actions>","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { LogoComponent } from '../logo/logo.component';\nimport { OrderConfirmation } from 'src/app/models/order-confirmation.model';\n\n@Component({\n  standalone: true,\n  selector: 'app-order-exists',\n  templateUrl: './order-exists.component.html',\n  styleUrls: ['./order-exists.component.css'],\n  imports: [CommonModule, LogoComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderExistsComponent implements OnInit {\n  orderData!: OrderConfirmation;\n  companyId!: number;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.orderData = history.state['order']; // Access the passed data here\n    this.companyId = history.state['companyId'];\n  }\n\n  goBack(): void {\n    window.history.back();\n  }\n}\n","<div class=\"container\">\n  <app-logo [companyId]=\"companyId\"></app-logo>\n\n  <h2>Existing Order</h2>\n  <div class=\"error-message\" style=\"color: red;\">\n    We already have an order for you placed on this delivery date. If you would like it changed please contact your sales rep.\n  </div>\n  <br>\n  <table class=\"order-grid\" id=\"order-grid\">\n    <thead class=\"\" sticky>\n      <tr>\n        <th>Product Description</th>\n        <th>Unit Type</th>\n        <th>Pack Size</th>\n        <th>Price</th>\n        <th>Qty</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let profile of orderData.profiles\">\n        <td>{{ profile.profileDescription }}</td>\n        <td>{{ profile.unitType }}</td>\n        <td>{{ profile.packSize }}</td>\n        <td class=\"price\">{{ profile.salesPrice| currency:'USD':true }}</td>\n        <td>{{ profile.quantity }}</td>\n      </tr>\n    </tbody>\n  </table>\n\n  <div>\n    <div class=\"total\"><strong>Total: </strong>\n      <span id=\"total-amount\">{{ orderData.totalPrice| currency:'USD':true }}</span>\n    </div>\n  </div>\n\n  <div>\n    <p>Sales rep: {{orderData.salesRepName}}</p>\n  </div>\n  <div>\n    <p>Delivery date: {{orderData.deliveryDate | date: 'MM/dd/yyyy'}}</p>\n  </div>\n  <div *ngIf=\"orderData.shipToId\">\n    <p>Delivery location: {{orderData.shipToName}}</p>\n  </div>\n\n\n\n  <button class=\"button\" (click)=\"goBack()\">Back</button>\n</div>","import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormGroup, ReactiveFormsModule, ValidationErrors, Validators } from '@angular/forms';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LogoComponent } from '../logo/logo.component';\nimport { Order } from 'src/app/models/order.model';\nimport { OrderRequest } from 'src/app/models/order-request.model';\nimport { ProfileRequest } from 'src/app/models/profile-request.model';\nimport { OrderFormService } from 'src/app/services/order-form.service';\nimport { Profile } from 'src/app/models/profile.model';\nimport { ParamMap } from '@angular/router';\n\n@Component({\n  standalone: true,\n  selector: 'app-order-form',\n  templateUrl: './order-form.component.html',\n  styleUrls: ['./order-form.component.css'],\n  imports: [CommonModule, ReactiveFormsModule, LogoComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderFormComponent implements OnInit {\n  order!: Order;\n  hasSpecials = false;\n  orderForm!: FormGroup;\n  submitted: boolean = false;\n  customerId!: number;\n\n  // New properties for modal functionality\n  showModal = false;\n  currentOrderItems: any[] = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private snackBarService: SnackbarService,\n    private orderService: OrderFormService,\n    private route: ActivatedRoute,\n    private cdr: ChangeDetectorRef,\n  ) {}\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params: ParamMap) => {\n      const id = params.get('id');\n      this.customerId = id ? +id : NaN;\n      this.loadOrderData(this.customerId);\n    });\n  }\n\n  loadOrderData(customerId: number): void {\n    this.orderService.getOrderData(customerId).subscribe({\n      next: (order: Order) => {\n        order.profiles.sort((a, b) => a.profileDescription.localeCompare(b.profileDescription));\n        this.order = order;\n        this.hasSpecials = this.order.profiles.some((profile) => profile.isSpecial);\n        const shipToValidators = order.shipTos?.length ? [Validators.required] : [];\n\n        this.orderForm = this.fb.group({\n          customerId: [order.customerId],\n          deliveryDate: ['', [Validators.required, this.dateAfterTomorrowValidator, this.dateWithinThreeMonthsValidator, this.dateNotOnSundayValidator]],\n          shipToId: ['', shipToValidators],\n          customerPo: [''],\n          totalPrice: [0],\n          profiles: this.fb.array(\n            this.order.profiles.map((profile) => this.createProfileGroup(profile)),\n            [this.atLeastOneQuantityValidator],\n          ),\n        });\n        this.cdr.markForCheck();\n      },\n    });\n  }\n\n  get formControls() {\n    return this.orderForm.controls;\n  }\n\n  get profileControls(): FormArray {\n    return this.orderForm.get('profiles') as FormArray;\n  }\n\n  get totalPrice(): number {\n    let totalPrice = 0;\n    for (let i = 0; i < this.order.profiles.length; i++) {\n      const quantity = this.profileControls.at(i).get('quantity')?.value || 0;\n      const packSize = this.order.profiles[i].packSize || 0;\n      const price = this.order.profiles[i].salesPrice || 0;\n      totalPrice += quantity * packSize * price;\n    }\n    return totalPrice;\n  }\n\n  getRowTotalPrice(index: number): number {\n    const quantity = this.profileControls.at(index).get('quantity')?.value || 0;\n    const packSize = this.order.profiles[index].packSize || 0;\n    const price = this.order.profiles[index].salesPrice || 0;\n    return quantity * packSize * price;\n  }\n\n  createProfileGroup(profile: Profile): FormGroup {\n    return this.fb.group({\n      profileDid: [profile.id],\n      quantity: ['', Validators.min(1)],\n    });\n  }\n\n  onSubmit() {\n    this.snackBarService.showInfo('Submitting Order...');\n\n    if (this.orderForm.valid) {\n      const order: OrderRequest = this.orderForm.value;\n\n      // Remove profiles with a quantity of 0 and set total price\n      order.profiles = order.profiles.filter((profile: ProfileRequest) => profile.quantity > 0);\n      order.totalPrice = this.totalPrice;\n\n      // Set shipToId to an empty string if it's not set\n      if (!order.shipToId) {\n        order.shipToId = ''; // Ensures \"\" is submitted instead of 0 or null\n      }\n\n      this.orderService.placeOrder(this.customerId, order).subscribe({\n        next: (orderConfirmation) => {\n          this.router.navigate(['/customer', this.customerId, 'order-confirmation'], {\n            state: { order: orderConfirmation, companyId: this.order.companyId },\n          });\n          this.snackBarService.showSuccess('Order submitted successfully');\n        },\n        error: (error) => {\n          const errorCode = error.status;\n          const errorMessage = errorCode == 409 ? 'An order already exists for that day' : 'Error submitting order';\n          if (errorCode == 409) {\n            this.router.navigate(['/customer', this.customerId, 'order-exists'], {\n              state: { order: error.error, companyId: this.order.companyId },\n            });\n          }\n          this.snackBarService.showError(errorMessage);\n\n          console.error('Error submitting order', error);\n        },\n      });\n\n      this.submitted = true;\n    } else {\n      this.orderForm.markAllAsTouched();\n    }\n  }\n\n  isQuantityEntered(index: number): boolean {\n    const quantity = this.profileControls.at(index).get('quantity')?.value;\n    return typeof quantity === 'number' && quantity > 0;\n  }\n\n  showCurrentOrder() {\n    this.currentOrderItems = this.order.profiles\n      .map((profile, index) => ({\n        ...profile,\n        quantity: this.profileControls.at(index).get('quantity')?.value,\n        totalPrice: (this.profileControls.at(index).get('quantity')?.value || 0) * (profile.packSize || 0) * (profile.salesPrice || 0),\n      }))\n      .filter((item) => item.quantity > 0);\n    this.showModal = true;\n    this.cdr.markForCheck();\n    console.error(this.currentOrderItems);\n  }\n\n  // New method to close the modal\n  closeModal() {\n    this.showModal = false;\n  }\n\n  dateAfterTomorrowValidator(control: AbstractControl): ValidationErrors | null {\n    const dateValue = new Date(control.value);\n    const now = new Date();\n    const twoAmToday = new Date(now.getFullYear(), now.getMonth(), now.getDate(), 2, 0, 0);\n\n    // Check if the date is valid and after 2 AM of today\n    if (!isNaN(dateValue.getTime()) && dateValue < twoAmToday) {\n      return { dateAfterTomorrow: true }; // Return error key if date is invalid\n    }\n    return null; // Return null if date is valid\n  }\n\n  atLeastOneQuantityValidator(control: AbstractControl): ValidationErrors | null {\n    const formArray = control as FormArray;\n    const hasAtLeastOneQuantity = formArray.controls.some((group) => group.get('quantity')?.value > 0);\n    return hasAtLeastOneQuantity ? null : { atLeastOneQuantity: true };\n  }\n\n  dateWithinThreeMonthsValidator(control: AbstractControl): ValidationErrors | null {\n    const dateValue = new Date(control.value);\n    const now = new Date();\n    const threeMonthsFromNow = new Date(now.getFullYear(), now.getMonth() + 3, now.getDate());\n\n    // Check if the date is within three months\n    if (!isNaN(dateValue.getTime()) && dateValue > threeMonthsFromNow) {\n      return { dateWithinThreeMonths: true }; // Return error key if date is out of range\n    }\n    return null; // Return null if date is valid\n  }\n\n  dateNotOnSundayValidator(control: AbstractControl): ValidationErrors | null {\n    if (!control.value) {\n      return null; // If there's no date, validation passes\n    }\n\n    const dateValue = new Date(control.value);\n\n    // Check if the parsed date is valid and if it's a Sunday\n    if (!isNaN(dateValue.getTime()) && dateValue.getUTCDay() === 0) {\n      return { dateNotOnSunday: true }; // Trigger error if Sunday\n    }\n\n    return null; // Otherwise, validation passes\n  }\n}\n","<form *ngIf=\"order\" [formGroup]=\"orderForm\" (ngSubmit)=\"onSubmit()\" class=\"order-form\">\n  <div class=\"container\">\n    <app-logo [companyId]=\"order.companyId\"></app-logo>\n    <h2 class=\"page-title\">Order Form</h2>\n\n    <div *ngIf=\"order.customerName && order.salesRepName\" class=\"customer-sales-info\">\n      <p><strong>Customer:</strong> <br>{{ order.customerName }}</p>\n      <div class=\"sales-rep-info\">\n        <strong>Sales Rep:</strong> <br>{{ order.salesRepName }}\n        <br><a [href]=\"'tel:' + order.salesRepPhone\">{{ order.salesRepPhone }}</a>\n      </div>\n    </div>\n\n    <div *ngIf=\"order.shipTos\" class=\"shipto-dropdown\">\n      <label for=\"ship-to\"><strong>Ship to:</strong></label>\n      <select id=\"ship-to\" formControlName=\"shipToId\" class=\"input-select\">\n        <option *ngFor=\"let shipTo of order.shipTos\" [value]=\"shipTo.id\">{{ shipTo.shipToName }}</option>\n      </select>\n      <div *ngIf=\"orderForm.get('shipToId')?.touched && orderForm.get('shipToId')?.errors?.['required']\" class=\"error\">\n        Ship to is required.\n      </div>\n    </div>\n\n    <div *ngIf=\"hasSpecials\">\n      <h3 class=\"section-title\">Specials</h3>\n      <div formArrayName=\"profiles\" class=\"profiles\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th>Description</th>\n              <th>Qty</th>\n              <th>Unit Type</th>\n              <th>Pack Size</th>\n              <th>Price</th>\n              <th>Total</th>\n            </tr>\n          </thead>\n          <tbody>\n            <ng-container *ngFor=\"let profile of profileControls.controls; let i = index\">\n              <tr *ngIf=\"order.profiles[i].isSpecial\" [formGroupName]=\"i\" [ngStyle]=\"{'background-color': isQuantityEntered(i) ? 'whitesmoke': 'white'}\">\n                <input type=\"hidden\" formControlName=\"profileDid\" class=\"input-text hidden-column\">\n                <td>{{ order.profiles[i].profileDescription }}</td>\n                <td>\n                  <input type=\"number\" formControlName=\"quantity\" class=\"input-number\">\n                  <div *ngIf=\"profile.get('quantity')?.errors?.['min']\" class=\"error\">The number must be greater than zero.</div>\n                </td>\n                <td>{{ order.profiles[i].unitType }}</td>\n                <td>{{ order.profiles[i].packSize }}</td>\n                <td>{{ order.profiles[i].salesPrice | currency:'USD':'symbol':'1.2-2'}}</td>\n                <td>{{ getRowTotalPrice(i) | currency:'USD':'symbol':'1.2-2' }}</td>\n              </tr>\n            </ng-container>\n          </tbody>\n        </table>\n      </div>\n    </div>\n\n    <h3 class=\"section-title\">Products</h3>\n    <div formArrayName=\"profiles\" class=\"profiles\">\n      <table class=\"table\">\n        <thead class=\"sticky\">\n          <tr>\n            <th>Description</th>\n            <th>Qty</th>\n            <th>Unit Type</th>\n            <th>Pack Size</th>\n            <th>Price</th>\n            <th>Total</th>\n          </tr>\n        </thead>\n        <tbody>\n          <ng-container *ngFor=\"let profile of profileControls.controls; let i = index\">\n            <tr *ngIf=\"!order.profiles[i].isSpecial\" [formGroupName]=\"i\" [ngStyle]=\"{'background-color': isQuantityEntered(i) ? 'whitesmoke': 'white'}\">\n              <td>\n                <input type=\"text\" type=\"hidden\" formControlName=\"profileDid\">\n                {{ order.profiles[i].profileDescription }}\n              </td>\n              <td>\n                <input type=\"number\" formControlName=\"quantity\" class=\"input-number\">\n                <div *ngIf=\"profile.get('quantity')?.errors?.['min']\" class=\"error\">The number must be greater than zero.</div>\n              </td>\n              <td>{{ order.profiles[i].unitType }}</td>\n              <td>{{ order.profiles[i].packSize }}</td>\n              <td>{{ order.profiles[i].salesPrice | currency:'USD':'symbol':'1.2-2'}}</td>\n              <td>{{ getRowTotalPrice(i) | currency:'USD':'symbol':'1.2-2' }}</td>\n            </tr>\n          </ng-container>\n        </tbody>\n      </table>\n      <div *ngIf=\"submitted && orderForm.get('profiles')?.hasError('atLeastOneQuantity')\" class=\"error\">\n        At least one quantity is required.\n      </div>\n    </div>\n\n    <div *ngIf=\"profileControls.touched && profileControls.errors?.['atLeastOneQuantity']\" class=\"error\">\n      Enter at least one quantity.\n    </div>\n\n    <div class=\"total-price\">\n      <br>Total price: {{totalPrice | currency:'USD':'symbol':'1.2-2'}}\n      <div *ngIf=\"totalPrice > 10000\" class=\"error\">The total has to be less than $10,000.</div>\n    </div>\n\n    <!-- Current Order Button -->\n    <button type=\"button\" (click)=\"showCurrentOrder()\" class=\"current-order-btn\">Current Order</button>\n\n    <div>\n      <label for=\"customer-po\"><strong>Customer PO: </strong></label>\n      <input id=\"customer-po\" formControlName=\"customerPo\" type=\"text\" class=\"customer-po\">\n    </div>\n\n    <div class=\"delivery-date\">\n      <label for=\"delivery-date\"><strong>Delivery Date:</strong></label>\n      <input id=\"delivery-date\" formControlName=\"deliveryDate\" type=\"date\" class=\"input-date\">\n      <div *ngIf=\"formControls['deliveryDate'].touched && formControls['deliveryDate'].errors?.['required']\" class=\"error\">\n        Delivery date is required.\n      </div>\n      <div *ngIf=\"formControls['deliveryDate'].dirty && formControls['deliveryDate'].errors?.['dateAfterTomorrow']\" class=\"error\">\n        Delivery date cannot be in the past or after 2am of today's date.\n      </div>\n      <div *ngIf=\"formControls['deliveryDate'].dirty && formControls['deliveryDate'].errors?.['dateWithinThreeMonths']\" class=\"error\">\n        Delivery date must be within 3 months.\n      </div>\n      <div *ngIf=\"formControls['deliveryDate'].dirty && formControls['deliveryDate'].errors?.['dateNotOnSunday']\" class=\"error\">\n        Delivery date cannot be on Sunday.\n      </div>\n    </div>\n\n    <!-- Pop-up Modal for Current Order -->\n    <div *ngIf=\"showModal\" class=\"modal\">\n      <div class=\"modal-content\">\n        <span class=\"close\" (click)=\"closeModal()\">&times;</span>\n        <h3>Current Order</h3>\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th>Description</th>\n              <th>Qty</th>\n              <th>Unit Type</th>\n              <th>Pack Size</th>\n              <th>Price</th>\n              <th>Total</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let item of currentOrderItems\">\n              <td>{{ item.profileDescription }}</td>\n              <td>{{ item.quantity }}</td>\n              <td>{{ item.unitType }}</td>\n              <td>{{ item.packSize }}</td>\n              <td>{{ item.salesPrice | currency:'USD':'symbol':'1.2-2' }}</td>\n              <td>{{ item.totalPrice | currency:'USD':'symbol':'1.2-2' }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n\n    <br><button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"!orderForm.valid\" class=\"submit-btn\">Submit</button>\n  </div>\n</form>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { Observable, switchMap, tap } from 'rxjs';\nimport { FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { Company } from 'src/app/models/company.model';\nimport { Customer } from 'src/app/models/customer.model';\nimport { SalesRep } from 'src/app/models/sales-rep.model';\nimport { OrderLinksService } from 'src/app/services/order-links.service';\nimport { CommonModule } from '@angular/common';\nimport { LogoComponent } from '../logo/logo.component';\n\n@Component({\n  standalone: true,\n  selector: 'app-order-links',\n  templateUrl: './order-links.component.html',\n  styleUrls: ['./order-links.component.css'],\n  imports: [CommonModule, ReactiveFormsModule, RouterModule, LogoComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderLinksComponent implements OnInit {\n  form!: FormGroup;\n  companies$!: Observable<Company[]>;\n  salesPersons$!: Observable<SalesRep[]>;\n  customers: Customer[] = [];\n  filteredCustomers: Customer[] = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private cdr: ChangeDetectorRef,\n    private snackbarService: SnackbarService,\n    private orderLinksService: OrderLinksService,\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      company: [],\n      salesPerson: [],\n      searchText: '',\n    });\n\n    // Load companies and set default to 'PFF'\n    this.companies$ = this.orderLinksService.getCompanies().pipe(\n      tap((companies) => {\n        const defaultCompany = companies.find((company) => company.name === 'PFF');\n        if (defaultCompany) {\n          this.form.get('company')!.setValue(defaultCompany);\n        }\n      }),\n    );\n\n    // Load salespersons based on selected company\n    this.form\n      .get('company')!\n      .valueChanges.pipe(\n        switchMap((company) =>\n          this.orderLinksService.getSalesPersons(company.id).pipe(\n            tap((salesreps) => {\n              salesreps.sort((a, b) => a.name.localeCompare(b.name));\n              this.salesPersons$ = new Observable<SalesRep[]>((observer) => {\n                observer.next(salesreps);\n                observer.complete();\n              });\n              if (salesreps.length > 0) {\n                this.form.get('salesPerson')!.setValue(salesreps[0]);\n              }\n            }),\n          ),\n        ),\n      )\n      .subscribe();\n\n    // Load customers based on selected salesperson\n    this.form\n      .get('salesPerson')!\n      .valueChanges.pipe(\n        switchMap((salesrep) => {\n          const company = this.form.get('company')!.value;\n          return this.orderLinksService.getCustomers(company.id, salesrep.name);\n        }),\n      )\n      .subscribe({\n        next: (customers) => {\n          this.customers = [...customers];\n          this.customers.sort((a, b) => a.name.localeCompare(b.name));\n          this.filteredCustomers = [...this.customers];\n          this.cdr.markForCheck();\n        },\n      });\n\n    // Apply search filter on customer names\n    this.form.get('searchText')!.valueChanges.subscribe((searchText: string) => {\n      this.filteredCustomers = this.customers.filter((customer) => customer.name.toLowerCase().includes(searchText.toLowerCase()));\n    });\n  }\n\n  // Generate Order Link\n  generateLink(customerId: number): string {\n    const baseUrl = window.location.href.replace('/order-links', '');\n    return `${baseUrl}/customer/${customerId}/order-form`;\n  }\n\n  // Copy Order Link to Clipboard\n  copyLink(customerId: number): void {\n    const link = this.generateLink(customerId);\n    navigator.clipboard\n      .writeText(link)\n      .then(() => {\n        this.snackbarService.showSuccess('Link copied to clipboard!');\n      })\n      .catch((err) => {\n        console.error('Failed to copy link: ', err);\n      });\n  }\n}\n","<form [formGroup]=\"form\">\n  <div class=\"container\">\n    <!-- Logo Component with Navigation -->\n    <a [routerLink]=\"['/home']\">\n      <app-logo [companyId]=\"form.get('company')?.value?.id\"></app-logo>\n    </a>\n\n    <h2 class=\"underlined\">Customers</h2>\n\n    <!-- Filters Section -->\n    <div class=\"filters\">\n      <!-- Company Filter -->\n      <div class=\"filter-group\">\n        <label for=\"company-filter\" class=\"filter-label\">Company:</label>\n        <select id=\"company-filter\" formControlName=\"company\">\n          <option *ngFor=\"let company of companies$ | async\" [ngValue]=\"company\">{{ company.name }}</option>\n        </select>\n      </div>\n\n      <!-- Sales Rep Filter -->\n      <div class=\"filter-group\">\n        <label for=\"salesname-filter\" class=\"filter-label\">Sales Rep:</label>\n        <select id=\"salesname-filter\" formControlName=\"salesPerson\">\n          <option *ngFor=\"let salesperson of salesPersons$ | async\" [ngValue]=\"salesperson\">{{ salesperson.name }}</option>\n        </select>\n      </div>\n\n      <!-- Customer Search Filter -->\n      <div class=\"filter-group\">\n        <label for=\"customer-search\" class=\"filter-label\">Customer:</label>\n        <input type=\"text\" id=\"customer-search\" placeholder=\"Search Customers\" formControlName=\"searchText\" />\n      </div>\n    </div>\n\n    <!-- Order Grid Table -->\n    <table class=\"order-grid\">\n      <thead>\n        <tr>\n          <th>Customer Name</th>\n          <th>Order Form</th>\n          <th>Copy Link</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let customer of filteredCustomers;\">\n          <td>{{ customer.name }}</td>\n          <td>\n            <a [routerLink]=\"['/customer', customer.id, 'order-form']\">Order Form</a>\n          </td>\n          <td>\n            <a href=\"javascript:void(0)\" (click)=\"copyLink(customer.id)\" (keyup)=\"copyLink(customer.id)\">Copy Link</a>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</form>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { Observable, switchMap, tap } from 'rxjs';\nimport { FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { Company } from 'src/app/models/company.model';\nimport { SalesRep } from 'src/app/models/sales-rep.model';\nimport { CommonModule } from '@angular/common';\nimport { LogoComponent } from '../logo/logo.component';\nimport { OrderDetailsDialogComponent } from 'src/app/components/order-details-dialog/order-details-dialog.component';\nimport { OrderService } from 'src/app/services/order.services';\nimport { Order } from 'src/app/models/order.model';\n\n@Component({\n  standalone: true,\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css'],\n  imports: [CommonModule, ReactiveFormsModule, RouterModule, LogoComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrdersComponent implements OnInit {\n  form!: FormGroup;\n  companies$!: Observable<Company[]>;\n  salesPersons$!: Observable<SalesRep[]>;\n  orders: Order[] = [];\n  filteredOrders: Order[] = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private cdr: ChangeDetectorRef,\n    private snackbarService: SnackbarService,\n    private orderService: OrderService,\n    private dialog: MatDialog,\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      company: [],\n      salesPerson: [],\n      customerName: [''],\n    });\n\n    this.loadCompanies();\n    this.setupSalesPersonListener();\n    this.setupOrdersListener();\n    this.setupCustomerNameFilterListener();\n  }\n\n  private loadCompanies(): void {\n    this.companies$ = this.orderService.loadCompanies().pipe(\n      tap((companies) => {\n        if (companies && companies.length > 0) {\n          this.form.get('company')!.setValue(companies[0]);\n        }\n      }),\n    );\n  }\n\n  private setupSalesPersonListener(): void {\n    this.form\n      .get('company')!\n      .valueChanges.pipe(\n        switchMap((company: Company) => {\n          return this.orderService.loadSalesRep(company.id);\n        }),\n        tap((salesreps) => {\n          this.salesPersons$ = new Observable<SalesRep[]>((observer) => {\n            observer.next(salesreps);\n            observer.complete();\n          });\n\n          if (salesreps && salesreps.length > 0) {\n            this.form.get('salesPerson')!.setValue(salesreps[0]);\n          }\n\n          this.loadOrders();\n        }),\n      )\n      .subscribe({\n        error: (error) => {\n          console.error('Failed to load sales reps:', error);\n          this.snackbarService.showError('Failed to load sales reps.');\n        },\n      });\n  }\n\n  private setupOrdersListener(): void {\n    this.form.get('salesPerson')!.valueChanges.subscribe(() => {\n      this.loadOrders();\n    });\n  }\n\n  private loadOrders(): void {\n    const company = this.form.get('company')!.value;\n    const salesrep = this.form.get('salesPerson')!.value;\n\n    if (!company || !salesrep) {\n      return;\n    }\n    this.orderService.loadOrders(company.id, salesrep.name, 72).subscribe({\n      next: (orders) => {\n        this.orders = orders;\n        this.applyFilters();\n      },\n      error: (error) => {\n        console.error('Failed to load orders:', error);\n        this.snackbarService.showError('Failed to load orders.');\n      },\n    });\n  }\n\n  private setupCustomerNameFilterListener(): void {\n    this.form.get('customerName')!.valueChanges.subscribe(() => this.applyFilters());\n  }\n\n  private applyFilters(): void {\n    const customerName = this.form.get('customerName')!.value?.toLowerCase() || '';\n    this.filteredOrders = this.orders.filter((order) => order.customerName.toLowerCase().includes(customerName));\n    this.cdr.markForCheck();\n  }\n\n  onRowClick(order: Order): void {\n    this.dialog.open(OrderDetailsDialogComponent, {\n      data: order,\n      width: '800px',\n    });\n  }\n}\n","<form [formGroup]=\"form\">\n  <div class=\"container\">\n    <!-- Logo Component with Navigation -->\n    <a [routerLink]=\"['/home']\">\n      <app-logo [companyId]=\"form.get('company')?.value?.id\"></app-logo>\n    </a>\n\n    <h2 class=\"page-title\">Existing Orders</h2>\n\n    <!-- Filters Section -->\n    <div class=\"filters\">\n      <!-- Company Filter -->\n      <div class=\"filter-group\">\n        <label for=\"company-filter\" class=\"filter-label\">Company:</label>\n        <select id=\"company-filter\" formControlName=\"company\">\n          <option *ngFor=\"let company of companies$ | async\" [ngValue]=\"company\">{{ company.name }}</option>\n        </select>\n      </div>\n\n      <!-- Sales Rep Filter -->\n      <div class=\"filter-group\">\n        <label for=\"salesname-filter\" class=\"filter-label\">Sales Rep:</label>\n        <select id=\"salesname-filter\" formControlName=\"salesPerson\">\n          <option *ngFor=\"let salesperson of salesPersons$ | async\" [ngValue]=\"salesperson\">{{ salesperson.name }}</option>\n        </select>\n      </div>\n\n      <!-- Customer Name Filter -->\n      <div class=\"filter-group\">\n        <label for=\"customer-filter\" class=\"filter-label\">Customer Name:</label>\n        <input\n          id=\"customer-filter\"\n          type=\"text\"\n          formControlName=\"customerName\"\n          placeholder=\"Search Customer Name\"\n        />\n      </div>\n    </div>\n\n    <!-- Orders Table -->\n    <table class=\"order-grid\">\n      <thead>\n        <tr>\n          <th>Order ID</th>\n          <th>Delivery Date</th>\n          <th>Customer Name</th>\n          <th>Ship To</th>\n          <th>Total Price</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let item of filteredOrders\" (click)=\"onRowClick(item)\" class=\"clickable-row\">\n          <td>{{ item.id }}</td>\n          <td>{{ item.deliveryDate | date }}</td>\n          <td>{{ item.customerName }}</td>\n          <td>{{ item.shipToName }}</td>\n          <td>{{ item.totalPrice | currency }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</form>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\nimport { Router, RouterModule } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\n\n@Component({\n  selector: 'app-password-request',\n  templateUrl: './password-request.component.html',\n  styleUrls: ['./password-request.component.css'],\n  standalone: true,\n  imports: [CommonModule, MatFormFieldModule, MatInputModule, MatButtonModule, ReactiveFormsModule, RouterModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PasswordRequestComponent {\n  passwordRequestForm: FormGroup;\n\n  constructor(\n    private router: Router,\n    private cdr: ChangeDetectorRef,\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private snackbarService: SnackbarService,\n  ) {\n    this.passwordRequestForm = this.formBuilder.group({\n      username: ['', [Validators.required, Validators.email]],\n    });\n  }\n\n  onSubmit() {\n    const { username } = this.passwordRequestForm.value;\n\n    this.authService.passwordRequest(username).subscribe({\n      next: () => {\n        this.snackbarService.showInfo(`An email has been sent to ${username} to reset your password`);\n        this.router.navigate(['/login']);\n      },\n    });\n  }\n}\n","<div class=\"container\">\n    <div class=\"login-container\">\n\n        <div class=\"logo-container\">\n            <a [routerLink]=\"['/home']\">\n                <img src=\"assets/logo.png\" alt=\"Company Logo\" class=\"logo\">\n            </a>\n        </div>\n\n        <h1>New password request</h1>\n        <form [formGroup]=\"passwordRequestForm\" (ngSubmit)=\"onSubmit()\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Username</mat-label>\n                <input matInput type=\"text\" formControlName=\"username\" placeholder=\"Enter your username\" autocomplete=\"username\">\n            </mat-form-field>\n\n            <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"passwordRequestForm.invalid\">\n                <span>Submit password request</span>\n            </button>\n        </form>\n    </div>\n</div>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, RouterModule, ParamMap } from '@angular/router';\nimport { AbstractControl, FormBuilder, FormGroup, ValidationErrors, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\n\n@Component({\n  selector: 'app-password-reset',\n  templateUrl: './password-reset.component.html',\n  styleUrls: ['./password-reset.component.css'],\n  standalone: true,\n  imports: [CommonModule, MatFormFieldModule, MatInputModule, MatButtonModule, ReactiveFormsModule, RouterModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PasswordResetComponent implements OnInit {\n  passwordResetForm: FormGroup;\n  token: string = '';\n  mismatchedPassword: boolean = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private cdr: ChangeDetectorRef,\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private snackbarService: SnackbarService,\n  ) {\n    this.passwordResetForm = this.formBuilder.group({\n      password: ['', [Validators.required, Validators.minLength(5), this.specialCharacterValidator]],\n      confirmPassword: ['', [Validators.required, Validators.minLength(5), this.specialCharacterValidator]],\n    });\n  }\n\n  ngOnInit(): void {\n    this.passwordResetForm.get('confirmPassword')?.valueChanges.subscribe(() => {\n      this.mismatchedPassword = false;\n    });\n\n    this.route.paramMap.subscribe((params: ParamMap) => {\n      this.token = params.get('token') || '';\n      if (!this.token) {\n        // no JWT found\n        this.router.navigate(['/login']);\n      }\n    });\n  }\n\n  onSubmit() {\n    const { password, confirmPassword } = this.passwordResetForm.value;\n\n    if (password !== confirmPassword) {\n      this.mismatchedPassword = true;\n      return;\n    }\n\n    this.authService.passwordReset(password, this.token).subscribe({\n      next: () => {\n        this.snackbarService.showSuccess('Your password has been reset');\n        this.router.navigate(['/login']); // Navigate to /products on success\n      },\n    });\n  }\n\n  specialCharacterValidator(control: AbstractControl): ValidationErrors | null {\n    const value = control.value;\n    // Regular expression for special characters\n    const hasSpecialCharacter = /[!@#$%^&*(),.?\":{}|<>]/.test(value);\n    return hasSpecialCharacter ? null : { noSpecialCharacter: true };\n  }\n}\n","<div class=\"container\">\n    <div class=\"login-container\">\n\n        <div class=\"logo-container\">\n            <a [routerLink]=\"['/home']\">\n                <img src=\"assets/logo.png\" alt=\"Company Logo\" class=\"logo\">\n            </a>\n        </div>\n\n        <h1>New password</h1>\n        <form [formGroup]=\"passwordResetForm\" (ngSubmit)=\"onSubmit()\">\n\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Password</mat-label>\n                <input matInput type=\"password\" formControlName=\"password\" placeholder=\"Enter your password\" autocomplete=\"current-password\">\n            </mat-form-field>\n\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Re-enter your password</mat-label>\n                <input matInput type=\"password\" formControlName=\"confirmPassword\" placeholder=\"Enter your password\" autocomplete=\"current-password\">\n            </mat-form-field>\n\n            <div *ngIf=\"passwordResetForm.get('password')?.touched && passwordResetForm.get('password')?.errors?.['minlength']\" class=\"error\">\n                Your password needs to have at least 5 characters.\n            </div>\n\n            <div *ngIf=\"passwordResetForm.get('password')?.touched && passwordResetForm.get('password')?.errors?.['noSpecialCharacter']\" class=\"error\">\n                Your password needs to contain at least one special character: {{ '[!@#$%^&*(),.?\":{}|<>]' }}\n            </div>\n\n            <div *ngIf=\"mismatchedPassword\" class=\"error\">\n                The 2 entries do not match.\n            </div>\n\n            <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"passwordResetForm.invalid\">\n                <span>Submit new password</span>\n            </button>\n        </form>\n    </div>\n</div>","import { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { ActivatedRoute, RouterModule } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { FormArray, FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms'; // Import FormsModule\nimport { PreOrder } from 'src/app/models/preorder.model';\nimport { PreorderService } from 'src/app/services/preorder.service';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\n\n@Component({\n  standalone: true,\n  imports: [CommonModule, RouterModule, FormsModule, ReactiveFormsModule],\n  selector: 'app-preorder-form',\n  templateUrl: './preorder-form.component.html',\n  styleUrls: ['./preorder-form.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PreorderFormComponent implements OnInit {\n  preOrderForm!: FormGroup;\n  vendorId!: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private http: HttpClient,\n    private preorderService: PreorderService,\n    private cdr: ChangeDetectorRef,\n    private fb: FormBuilder,\n    private snackBarService: SnackbarService,\n  ) {}\n\n  ngOnInit(): void {\n    this.preOrderForm = this.fb.group({\n      preOrders: this.fb.array([]),\n    });\n\n    this.route.params.subscribe((params) => {\n      this.vendorId = params['vendorId'];\n      this.preorderService.getPreOrders(this.vendorId).subscribe((preOrders) => {\n        this.setPreOrders(preOrders);\n        this.cdr.markForCheck();\n      });\n    });\n  }\n\n  // Populate the form with the products\n  setPreOrders(preOrders: PreOrder[]): void {\n    const preOrderFormGroups = preOrders.map((preOrder) => this.createPreOrderForm(preOrder));\n    const preOrderFormArray = this.fb.array(preOrderFormGroups);\n    this.preOrderForm.setControl('preOrders', preOrderFormArray);\n  }\n\n  // Create a FormGroup for each product\n  createPreOrderForm(preOrder: PreOrder): FormGroup {\n    return this.fb.group({\n      id: [preOrder.id],\n      sodId: [preOrder.sodId],\n      dispatchDate: [preOrder.dispatchDate],\n      customerName: [preOrder.customerName],\n      descriptionMemo: [preOrder.descriptionMemo],\n      unitSize: [preOrder.unitSize],\n      unitType: [preOrder.unitType],\n      weight: [preOrder.weight, [Validators.required, Validators.min(0)]],\n      price: [preOrder.price, [Validators.required, Validators.min(0)]],\n    });\n  }\n\n  // Getter for the FormArray\n  get preOrdersArray(): FormArray {\n    return this.preOrderForm.get('preOrders') as FormArray;\n  }\n\n  getModifiedPreOrders(): PreOrder[] {\n    // Filter out preOrders where any of the controls are dirty\n    return this.preOrderForm.value.preOrders.filter((preOrder: PreOrder, index: number) => {\n      const preOrderGroup = this.preOrdersArray.at(index);\n      return preOrderGroup.dirty;\n    });\n  }\n\n  submitAll(): void {\n    const modifiedPreOrders = this.getModifiedPreOrders();\n    modifiedPreOrders.forEach((preOrder) => {\n      this.preorderService.updatePreOrderWeightAndPrice(this.vendorId, preOrder).subscribe(() => {\n        this.snackBarService.showSuccess('The data has been updated.');\n      });\n    });\n  }\n\n  trackByOrderId(index: number, order: PreOrder): number {\n    return order.id;\n  }\n\n  // TODO: shoudl not be hard-coded here\n  getUnitType(unitType: number): string {\n    const unitTypeMap: { [key: number]: string } = {\n      '1': 'Case',\n      '2': 'Piece',\n      '3': 'Pack',\n      '4': 'Pound',\n      '5': 'Side',\n    };\n    return unitTypeMap[unitType] || 'Unknown';\n  }\n}\n","<div class=\"container\">\n  <!-- Header Section -->\n  <div class=\"header-section\">\n    <a [routerLink]=\"['/home']\">\n      <img src=\"assets/logo.png\" alt=\"Company Logo\" />\n    </a>\n  </div>\n\n  <!-- Page Title -->\n  <h2 class=\"page-title\">PreOrders</h2>\n\n  <!-- PreOrders Table -->\n  <form [formGroup]=\"preOrderForm\" (ngSubmit)=\"submitAll()\">\n    <table class=\"table\">\n      <thead class=\"sticky\">\n        <tr>\n          <th>ID</th>\n          <th>Dispatch Date</th>\n          <th>Customer Name</th>\n          <th>Description</th>\n          <th>Unit Size</th>\n          <th>Unit Type</th>\n          <th>Weight (Lbs)</th>\n          <th>Price</th>\n        </tr>\n      </thead>\n      <tbody formArrayName=\"preOrders\">\n        <tr *ngFor=\"let preOrder of preOrdersArray.controls; let i = index\" [formGroupName]=\"i\" [ngStyle]=\"{'background-color': preOrder.dirty ? 'whitesmoke' : 'white'}\">\n\n          <td>{{ preOrder.get('id')?.value }}</td>\n          <td class=\"nowrap\">{{ preOrder.get('dispatchDate')?.value | date: 'mediumDate' }}</td>\n          <td>{{ preOrder.get('customerName')?.value }}</td>\n          <td>{{ preOrder.get('descriptionMemo')?.value }}</td>\n          <td>{{ preOrder.get('unitSize')?.value }}</td>\n          <td>{{ getUnitType(preOrder.get('unitType')?.value) }}</td>\n          <td>\n            <input type=\"number\" formControlName=\"price\" min=\"0\" />\n            <div *ngIf=\"preOrder.get('price')?.touched && preOrder.get('price')?.hasError('min')\" class=\"error\">\n              Weight must be greater than 0</div>\n          </td>\n          <td>\n            <div class=\"currency-input\">\n              <span class=\"currency-symbol\">$</span>\n              <input type=\"number\" formControlName=\"weight\" step=\"0.01\" min=\"0\" />\n              <div *ngIf=\"preOrder.get('weight')?.touched && preOrder.get('weight')?.hasError('min')\" class=\"error\">\n                Price must be greater than 0</div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <!-- Submit Button -->\n    <div class=\"text-center\">\n      <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!preOrderForm.dirty || !preOrderForm.valid\">\n        Submit\n      </button>\n    </div>\n  </form>\n\n</div>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Router, RouterModule } from '@angular/router';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { VendorsService, Vendor } from 'src/app/services/vendors.service'; // Import Vendor type\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  standalone: true,\n  selector: 'app-vendor-links',\n  templateUrl: './preorder-links.component.html',\n  styleUrls: ['./preorder-links.component.css'],\n  imports: [CommonModule, RouterModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VendorLinksComponent implements OnInit {\n  vendors$!: Observable<Vendor[]>;\n\n  constructor(private cdr: ChangeDetectorRef, private snackbarService: SnackbarService, private vendorsService: VendorsService, private router: Router) {}\n  ngOnInit(): void {\n    this.vendors$ = this.vendorsService.getVendors();\n  }\n\n  // Navigate to Preorder Form for the selected vendor\n  navigateToPreorderForm(vendorId: number): void {\n    this.router.navigate(['/preorder-form', vendorId]); // Navigate with vendorId as route parameter\n  }\n\n  // Copy Vendor Link to Clipboard\n  copyLink(vendorId: number): void {\n    const link = `${window.location.origin}/preorder-form/${vendorId}`;\n    navigator.clipboard\n      .writeText(link)\n      .then(() => {\n        this.snackbarService.showSuccess('Link copied to clipboard!');\n      })\n      .catch((err) => {\n        this.snackbarService.showError('Failed to copy link: ', err);\n        console.error('Failed to copy link: ', err);\n      });\n  }\n}\n","<div class=\"container\">\n  <a [routerLink]=\"['/home']\">\n    <div class=\"image-container\">\n      <img src=\"assets/logo.png\" alt=\"Company Logo\">\n    </div>\n  </a>\n\n  <h2 class=\"underlined\">Vendors</h2>\n\n  <table class=\"order-grid\">\n    <thead>\n      <tr>\n        <th>Vendor Name</th>\n        <th>Preorder Form</th>\n        <th>Copy Link</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let vendor of vendors$ | async\">\n        <td>{{ vendor.name }}</td>\n        <td>\n          <a [routerLink]=\"['/preorder-form', vendor.id]\">Preorder Form</a>\n        </td>\n        <td>\n          <a href=\"javascript:void(0)\" (click)=\"copyLink(vendor.id)\" (keyup)=\"copyLink(vendor.id)\">Copy Link</a>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialogModule } from '@angular/material/dialog';\nimport { CommonModule } from '@angular/common';\nimport { HttpEventType } from '@angular/common/http';\nimport { ProductService } from '../../services/products.service'; // Ensure the correct path\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { InventoryItem } from 'src/app/models/product.model';\nimport { DOC_ORIENTATION, NgxImageCompressService } from 'ngx-image-compress';\n\n@Component({\n  standalone: true,\n  selector: 'app-product-details-dialog',\n  templateUrl: './product-details-dialog.component.html',\n  styleUrls: ['./product-details-dialog.component.css'],\n  imports: [CommonModule, MatDialogModule],\n})\nexport class ProductDetailsDialogComponent {\n  showInfo = false; // Controls visibility of the info section\n\n  constructor(\n    private snackBarService: SnackbarService,\n    public dialogRef: MatDialogRef<ProductDetailsDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: InventoryItem,\n    private productService: ProductService,\n    private imageCompress: NgxImageCompressService,\n  ) {}\n\n  toggleInfoVisibility(): void {\n    this.showInfo = !this.showInfo;\n  }\n\n  close(): void {\n    this.dialogRef.close();\n  }\n\n  getUnitType(unitType?: number): string {\n    switch (unitType) {\n      case 1:\n        return 'Cs';\n      case 2:\n        return 'Pcs';\n      case 3:\n        return 'Pck';\n      case 4:\n        return 'lbs';\n      case 5:\n        return 'side';\n      default:\n        return 'Unknown';\n    }\n  }\n\n  triggerFileInput(fileInput: HTMLInputElement): void {\n    fileInput.click();\n  }\n\n  onFileSelected(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    if (input.files && input.files.length > 0) {\n      this.snackBarService.showInfo('Uploading file...');\n      const file = input.files[0];\n\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        const imageBase64 = reader.result as string;\n\n        this.imageCompress.compressFile(imageBase64, DOC_ORIENTATION.Default, 50, 50, 960, 540).then((compressedImage) => {\n          // Convert base64 back to Blob\n          const blob = this.dataURItoBlob(compressedImage);\n\n          const compressedFile = new File([blob], file.name.replace(/\\..+$/, '.jpeg'), {\n            type: 'image/jpeg',\n          });\n\n          this.productService.uploadProductImage(this.data.compItemId, compressedFile).subscribe({\n            next: (event) => {\n              if (event.type === HttpEventType.Response) {\n                const updatedItem = event.body as InventoryItem;\n                this.data.photoUrl = updatedItem.photoUrl;\n                this.snackBarService.showSuccess('File uploaded successfully');\n              }\n            },\n          });\n        });\n      };\n    }\n  }\n\n  deletePhoto(): void {\n    if (confirm('Are you sure you want to delete this photo?')) {\n      this.productService.deleteProductPhoto(this.data.compItemId).subscribe({\n        next: () => {\n          this.data.photoUrl = undefined;\n          this.snackBarService.showSuccess('Photo deleted successfully.');\n        },\n      });\n    }\n  }\n\n  // Utility to convert base64 to Blob\n  private dataURItoBlob(dataURI: string): Blob {\n    // Split the URI into data and mime type\n    const byteString = atob(dataURI.split(',')[1]);\n    const mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n\n    // Convert the byte string into an array of bytes (Uint8Array)\n    const arrayBuffer = new ArrayBuffer(byteString.length);\n    const intArray = new Uint8Array(arrayBuffer);\n    for (let i = 0; i < byteString.length; i++) {\n      intArray[i] = byteString.charCodeAt(i);\n    }\n\n    // Return a Blob with the appropriate MIME type\n    return new Blob([intArray], { type: mimeString });\n  }\n}\n","<h2>{{ data.compItemId }} - {{ data.compDescription }}</h2>\n<div class=\"special-instructions\">{{ data.compInstructions || 'N/A' }}</div>\n\n<mat-dialog-content>\n  <!-- Display Image if Available -->\n  <div class=\"image-container\">\n    <ng-container *ngIf=\"data.photoUrl; else uploadButton\">\n      <div class=\"image-wrapper\">\n        <img [src]=\"data.photoUrl\" alt=\"Product Image\" class=\"product-image\" />\n        <div class=\"delete-icon\" (click)=\"deletePhoto()\">&#x2715;</div>\n      </div>\n    </ng-container>\n    <ng-template #uploadButton>\n      <input type=\"file\" #fileInput (change)=\"onFileSelected($event)\" accept=\"image/*\" hidden />\n      <button type=\"button\" class=\"button\" (click)=\"triggerFileInput(fileInput)\">Upload Image</button>\n    </ng-template>\n  </div>\n\n  <!-- Toggleable Information -->\n  <button class=\"toggle-button\" (click)=\"toggleInfoVisibility()\">\n    {{ showInfo ? 'Hide Info' : 'Show Info' }}\n  </button>\n\n  <div class=\"info-section\" *ngIf=\"showInfo\">\n    <div class=\"margins\">\n      <div class=\"margin-values\">\n        <div class=\"margin-group\">\n          <div class=\"field\">\n            <span class=\"field-label\">16%</span>\n            <span>{{ ((data.compCost ?? 0) * (data.yield ?? 0) + (data.laborPackCost ?? 0)) / 0.84 | number:'1.2-2' }}</span>\n          </div>\n          <div class=\"field\">\n            <span class=\"field-label\">18%</span>\n            <span>{{ ((data.compCost ?? 0) * (data.yield ?? 0) + (data.laborPackCost ?? 0)) / 0.82 | number:'1.2-2' }}</span>\n          </div>\n          <div class=\"field\">\n            <span class=\"field-label\">20%</span>\n            <span>{{ ((data.compCost ?? 0) * (data.yield ?? 0) + (data.laborPackCost ?? 0)) / 0.80 | number:'1.2-2' }}</span>\n          </div>\n          <div class=\"field\">\n            <span class=\"field-label\">22%</span>\n            <span>{{ ((data.compCost ?? 0) * (data.yield ?? 0) + (data.laborPackCost ?? 0)) / 0.78 | number:'1.2-2' }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"field-group\">\n      <div class=\"field\">\n        <span class=\"field-label\">Cost</span>\n        <span>{{ (data.compCost ?? 0) * (data.yield ?? 0) | number:'1.2-2' }}</span>\n      </div>\n      <div class=\"field\">\n        <span class=\"field-label\">Yield</span>\n        <span>{{ (data.yield ?? 0) * 100 | number:'1.0-0' }}%</span>\n      </div>\n      <div class=\"field\">\n        <span class=\"field-label\">Labor Pack</span>\n        <span>{{ data.laborPackCost | number:'1.2-2' }}</span>\n      </div>\n      <div class=\"field\">\n        <span class=\"field-label\">Finish</span>\n        <span>{{ ((data.compCost ?? 0) * (data.yield ?? 0) + (data.laborPackCost ?? 0)) | number:'1.2-2' }}</span>\n      </div>\n    </div>\n  </div>\n\n\n  <div class=\"field-group\">\n    <div class=\"field\">\n      <span class=\"field-label\">Origin</span>\n      <span>{{ data.origin }}</span>\n    </div>\n    <div class=\"field\">\n      <span class=\"field-label\">Notes</span>\n      <span>{{ data.notes || 'N/A' }}</span>\n    </div>\n    <div class=\"field\">\n      <span class=\"field-label\">WOH</span>\n      <span>{{ data.woh }}</span>\n    </div>\n    <div class=\"field\">\n      <span class=\"field-label\">Unit Type</span>\n      <span>{{ getUnitType(data.unitType ?? 0) }}</span>\n    </div>\n  </div>\n\n  <div class=\"field-group\">\n    <div class=\"field\">\n      <span class=\"field-label\">Pack Size</span>\n      <span>{{ data.packSize }}</span>\n    </div>\n    <div class=\"field\">\n      <span class=\"field-label\">Buyer</span>\n      <span>{{ data.buyer }}</span>\n    </div>\n    <div class=\"field\">\n      <span class=\"field-label\">Sixty Sales</span>\n      <span>{{ data.sixtySales }}</span>\n    </div>\n  </div>\n\n  <div class=\"field-group\">\n    <div class=\"field\">\n      <span class=\"field-label\">Ten Sales</span>\n      <span>{{ data.tenSales }}</span>\n    </div>\n    <div class=\"field\">\n      <span class=\"field-label\">Pre-Order Hours</span>\n      <span>{{ data.preOrderHours }}</span>\n    </div>\n  </div>\n</mat-dialog-content>","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ProductService } from '../../services/products.service';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { InventoryItem } from 'src/app/models/product.model';\nimport { BehaviorSubject, Subject, Subscription } from 'rxjs';\nimport { InfiniteScrollDirective } from 'ngx-infinite-scroll';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, FormControl } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { ProductDetailsDialogComponent } from '../product-details-dialog/product-details-dialog.component';\n\n@Component({\n  standalone: true,\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css'],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, RouterModule, InfiniteScrollDirective],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductsComponent implements OnInit, OnDestroy {\n  page = 0;\n  size = 50;\n  searchTerm = '';\n  showRelevantItems = false;\n  showSixtySales = false;\n  showWoh = false;\n  showYield = false;\n  showWithImages = false; // New filter for rows with images\n\n  // Filter dropdowns\n  originFilter: string = '';\n  packSizeFilter: string | number = '';\n  buyerFilter: string | number = '';\n\n  // Min CompCost property\n  minCompCost: number = 0;\n\n  // Form control\n  minCompCostControl = new FormControl('');\n\n  // Unique dropdown options\n  uniqueOrigins: string[] = [];\n  uniquePackSizes: (string | number)[] = [];\n  uniqueBuyers: (string | number)[] = [];\n\n  private searchSubject = new Subject<string>();\n  private searchSubscription!: Subscription;\n\n  private inventoryItemsSubject = new BehaviorSubject<InventoryItem[]>([]);\n  inventoryItems$ = this.inventoryItemsSubject.asObservable();\n\n  constructor(private productService: ProductService, private dialog: MatDialog) {}\n\n  ngOnInit(): void {\n    this.loadData();\n\n    this.searchSubscription = this.searchSubject.pipe(distinctUntilChanged(this.trimComparator), debounceTime(200)).subscribe((searchTerm) => {\n      this.searchTerm = searchTerm;\n      this.page = 0;\n      this.inventoryItemsSubject.next([]);\n      this.loadData();\n    });\n\n    this.minCompCostControl.valueChanges.subscribe((value) => {\n      this.minCompCost = value ? parseFloat(value) : 0;\n      this.onCompCostChange();\n    });\n  }\n\n  loadData(): void {\n    this.productService.getProducts(this.page, this.size, this.searchTerm).subscribe({\n      next: (response: InventoryItem[]) => {\n        const currentData = this.inventoryItemsSubject.value;\n        const newData = response.filter((item) => !currentData.some((currentItem) => currentItem.compItemId === item.compItemId));\n\n        let filteredData = this.showRelevantItems ? newData.filter((item) => item.tenSales && item.tenSales > 0) : newData;\n\n        if (this.showSixtySales) {\n          filteredData = filteredData.filter((item) => item.sixtySales !== null && item.sixtySales !== undefined && item.sixtySales > 0);\n        }\n\n        if (this.showWoh) {\n          filteredData = filteredData.filter((item) => item.woh !== null && item.woh !== undefined && item.woh > 0);\n        }\n\n        if (this.showYield) {\n          filteredData = filteredData.filter((item) => item.yield && item.yield < 1);\n        }\n\n        if (this.showWithImages) {\n          filteredData = filteredData.filter((item) => item.photoUrl);\n        }\n\n        const fullyFilteredData = filteredData.filter((item) => {\n          const compCost = item.compCost ?? 0;\n          return (\n            (this.originFilter ? item.origin === this.originFilter : true) &&\n            (this.packSizeFilter ? item.packSize === this.packSizeFilter : true) &&\n            (this.buyerFilter ? item.buyer === this.buyerFilter : true) &&\n            compCost >= this.minCompCost\n          );\n        });\n\n        this.populateUniqueDropdowns(response);\n        this.inventoryItemsSubject.next([...currentData, ...fullyFilteredData]);\n      },\n    });\n  }\n\n  onRowClick(item: InventoryItem, event: Event): void {\n    const target = event.target as HTMLElement;\n    const tagName = target.tagName;\n\n    // Prevent pop-up for button or input clicks\n    if (tagName !== 'BUTTON' && tagName !== 'INPUT') {\n      this.dialog.open(ProductDetailsDialogComponent, {\n        data: {\n          ...item,\n        },\n        width: '550px',\n      });\n    }\n  }\n\n  toggleRelevantItemsFilter(): void {\n    this.showRelevantItems = !this.showRelevantItems;\n    this.page = 0;\n    this.inventoryItemsSubject.next([]);\n    this.loadData();\n  }\n\n  toggleSixtySalesFilter(): void {\n    this.showSixtySales = !this.showSixtySales;\n    this.page = 0;\n    this.inventoryItemsSubject.next([]);\n    this.loadData();\n  }\n\n  toggleWohFilter(): void {\n    this.showWoh = !this.showWoh;\n    this.page = 0;\n    this.inventoryItemsSubject.next([]);\n    this.loadData();\n  }\n\n  toggleYieldFilter(): void {\n    this.showYield = !this.showYield;\n    this.page = 0;\n    this.inventoryItemsSubject.next([]);\n    this.loadData();\n  }\n\n  toggleWithImagesFilter(): void {\n    this.showWithImages = !this.showWithImages;\n    this.page = 0;\n    this.inventoryItemsSubject.next([]);\n    this.loadData();\n  }\n\n  onFilterChange(): void {\n    this.page = 0;\n    this.inventoryItemsSubject.next([]);\n    this.loadData();\n  }\n\n  onCompCostChange(): void {\n    this.page = 0;\n    this.inventoryItemsSubject.next([]);\n    this.loadData();\n  }\n\n  onScroll(): void {\n    this.page++;\n    this.loadData();\n  }\n\n  onSearchChange(event: Event): void {\n    const searchTerm = (event.target as HTMLInputElement).value;\n    this.page = 0;\n    this.searchSubject.next(searchTerm);\n  }\n\n  private trimComparator(prev: string, curr: string): boolean {\n    return prev.trim() === curr.trim();\n  }\n\n  ngOnDestroy(): void {\n    if (this.searchSubscription) {\n      this.searchSubscription.unsubscribe();\n    }\n  }\n\n  private populateUniqueDropdowns(products: InventoryItem[]): void {\n    this.uniqueOrigins = [...new Set(products.map((item) => item.origin))].filter(Boolean).sort() as string[];\n    this.uniquePackSizes = [...new Set(products.map((item) => item.packSize))].filter(Boolean).sort((a, b) => Number(a) - Number(b)) as (string | number)[];\n    this.uniqueBuyers = [...new Set(products.map((item) => item.buyer))].filter(Boolean).sort() as string[];\n  }\n}\n","<div class=\"content\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"50\" (scrolled)=\"onScroll()\">\n  <div class=\"container\">\n    <!-- Make the entire image-container clickable by wrapping in a link -->\n    <a [routerLink]=\"['/home']\" class=\"image-container\">\n      <img src=\"assets/logo.png\" alt=\"Company Logo\">\n    </a>\n\n    <h2 class=\"inventory-title\">Products</h2>\n\n    <!-- Search Bar Section -->\n    <div class=\"search-bar\">\n      <input type=\"text\" placeholder=\"Search Products\" (input)=\"onSearchChange($event)\">\n    </div>\n\n    <!-- Button Row for Relevant Items and Additional Filters -->\n    <div class=\"button-row\">\n      <button (click)=\"toggleRelevantItemsFilter()\" class=\"relevant-items-btn\">\n        {{ showRelevantItems ? 'Show All Items' : 'Relevant Items' }}\n      </button>\n      <button (click)=\"toggleSixtySalesFilter()\" class=\"filter-btn\">\n        {{ showSixtySales ? 'Show All Sixty Sales' : 'Sixty Sales > 0' }}\n      </button>\n      <button (click)=\"toggleWohFilter()\" class=\"filter-btn\">\n        {{ showWoh ? 'Show All WOH' : 'WOH > 0' }}\n      </button>\n      <button (click)=\"toggleYieldFilter()\" class=\"filter-btn\">\n        {{ showYield ? 'Show All Yield' : 'Yield < 100%' }} </button>\n      <button (click)=\"toggleWithImagesFilter()\" class=\"filter-btn\">\n        {{ showWithImages ? 'Show All Items' : 'With Images' }}\n      </button>\n    </div>\n\n    <!-- Centered Filters Section -->\n    <div class=\"filters\">\n      <div class=\"filter-group\">\n        <label for=\"originFilter\">Origin</label>\n        <select id=\"originFilter\" (change)=\"onFilterChange()\" [(ngModel)]=\"originFilter\">\n          <option value=\"\">All Origins</option>\n          <option *ngFor=\"let origin of uniqueOrigins\" [value]=\"origin\">{{ origin }}</option>\n        </select>\n      </div>\n      <div class=\"filter-group minfilter\">\n        <label for=\"comp-cost-min\">Min CompCost</label>\n        <input type=\"number\" id=\"comp-cost-min\" [(ngModel)]=\"minCompCost\" (input)=\"onCompCostChange()\" placeholder=\"Min\" />\n      </div>\n      <div class=\"filter-group\">\n        <label for=\"buyerFilter\">Buyer</label>\n        <select id=\"buyerFilter\" (change)=\"onFilterChange()\" [(ngModel)]=\"buyerFilter\">\n          <option value=\"\">All Buyers</option>\n          <option *ngFor=\"let buyer of uniqueBuyers\" [value]=\"buyer\">{{ buyer }}</option>\n        </select>\n      </div>\n    </div>\n\n    <!-- Inventory Grid Table -->\n    <table class=\"inventory-grid\" *ngIf=\"inventoryItems$ | async as products; else noData\">\n      <thead class=\"sticky\">\n        <tr>\n          <th>ID</th>\n          <th>Description</th>\n          <th>WOH</th>\n          <th>Sixty Sales</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr\n          *ngFor=\"let item of products\"\n          (click)=\"onRowClick(item, $event)\"\n          [class.has-image]=\"item.photoUrl\"\n        >\n          <td>{{ item.compItemId }}</td>\n          <td>\n            <div class=\"description-cell\">\n              {{ item.compDescription }}\n            </div>\n          </td>\n          <td>{{ item.woh }}</td>\n          <td>{{ item.sixtySales }}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <!-- Message for No Data -->\n    <ng-template #noData>\n      <p>No products available.</p>\n    </ng-template>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(): boolean {\n    if (this.authService.isLoggedIn()) {\n      return true;\n    } else {\n      // Redirect to login if not authenticated\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n\n  intercept<T>(req: HttpRequest<T>, next: HttpHandler): Observable<HttpEvent<T>> {\n    // Get the token from the AuthService (or other storage like localStorage)\n    const token = this.authService.getToken(); // Make sure to implement getToken() method\n\n    if (token) {\n      // Clone the request and add the authorization header\n      const clonedRequest = req.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      return next.handle(clonedRequest);\n    }\n\n    // If there's no token, continue with the original request\n    return next.handle(req);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../models/user.model ';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private tokenKey = 'authToken';\n  private fullnameKey = 'fullname';\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  login(username: string, password: string): Observable<User> {\n    return this.http.post<User>(`${environment.apiUrl}/public/auth/login`, { username, password });\n  }\n\n  passwordRequest(username: string): Observable<unknown> {\n    return this.http.post<unknown>(`${environment.apiUrl}/public/auth/password-request`, { username });\n  }\n\n  passwordReset(password: string, token: string): Observable<unknown> {\n    return this.http.post<unknown>(`${environment.apiUrl}/public/auth/password-reset`, { password, token });\n  }\n\n  saveFullnameAndToken(fullname: string, token: string): void {\n    localStorage.setItem(this.tokenKey, token);\n    localStorage.setItem(this.fullnameKey, fullname);\n  }\n\n  // Retrieve the token (from sessionStorage first, then fallback to localStorage)\n  getToken(): string | null {\n    const token = localStorage.getItem(this.tokenKey);\n    return token;\n  }\n\n  getFullname(): string | null {\n    const token = localStorage.getItem(this.fullnameKey);\n    return token;\n  }\n\n  // Check if the user is logged in by verifying if a token exists\n  isLoggedIn(): boolean {\n    const token = localStorage.getItem(this.tokenKey);\n    return !!token;\n  }\n\n  // Optional: method to log out\n  logout(): void {\n    localStorage.removeItem(this.tokenKey);\n    this.router.navigate(['/login']);\n  }\n\n  // Check if token exists and is not expired\n  /*\n  isTokenValid(url?: string): boolean {\n    // Skip token validation if the URL matches an excluded path\n    if (url && this.isExcludedPath(url)) {\n      console.log('URL is excluded from authentication, skipping token validation:', url);\n      return true;\n    }\n\n    const token = this.getToken();\n    if (!token) {\n      console.warn('No token found');\n      return false;\n    }\n\n    const payload = this.decodeToken(token);\n    if (!payload || !payload.exp) {\n      console.warn('Invalid token payload');\n      return false;\n    }\n\n    const expiryTime = payload.exp * 1000; // Convert to milliseconds\n    const currentTime = Date.now();\n    const isValid = currentTime < expiryTime;\n    console.log('Token validity:', isValid); // Debug: Log token validity\n    return isValid;\n  }\n\n  // Decode the token to get its payload\n  private decodeToken(token: string): any | null {\n    try {\n      const payloadPart = token.split('.')[1];\n      const decodedPayload = atob(payloadPart);\n      const parsedPayload = JSON.parse(decodedPayload);\n      console.log('Decoded token payload:', parsedPayload); // Debug: Log decoded payload\n      return parsedPayload;\n    } catch (error) {\n      console.error('Failed to decode token:', error);\n      return null;\n    }\n  }\n*/\n}\n","import { HttpClient, HttpEvent, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { DeliveryStop } from '../models/delivery-stop.model';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from './auth.service';\n\ninterface Driver {\n  name: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DriverRouteService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient, private authService: AuthService) {}\n\n  getDrivers(): Observable<Driver[]> {\n    return this.http.get<Driver[]>(`${this.apiUrl}/drivers`);\n  }\n\n  getDeliveryRoute(driverName: string, deliveryDate: string): Observable<DeliveryStop[]> {\n    const params = new HttpParams().set('driverName', driverName).set('deliveryDate', deliveryDate);\n\n    return this.http.get<DeliveryStop[]>(`${this.apiUrl}/delivery-stops`, { params });\n  }\n\n  hasArrived(id: string): Observable<DeliveryStop> {\n    return this.http.patch<DeliveryStop>(`${this.apiUrl}/delivery-stops/${id}`, {});\n  }\n\n  uploadPhoto(deliveryStopId: number, file: File): Observable<HttpEvent<DeliveryStop>> {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    return this.http.post<DeliveryStop>(`${this.apiUrl}/delivery-stops/${deliveryStopId}/photos`, formData, {\n      reportProgress: true,\n      observe: 'events',\n    });\n  }\n}\n","import { ErrorHandler, Injectable } from '@angular/core';\nimport { SnackbarService } from './snackbar.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GlobalErrorHandlerService implements ErrorHandler {\n  constructor(private snackBarService: SnackbarService, private router: Router, private authService: AuthService) {}\n\n  handleError(error: unknown) {\n    if (error instanceof HttpErrorResponse) {\n      // Check network connectivity\n      if (!navigator.onLine) {\n        this.snackBarService.showError('No internet connection');\n        return;\n      }\n\n      // Handle client-side errors\n      if (error.error instanceof ErrorEvent) {\n        this.snackBarService.showError(error.error.message);\n        return;\n      }\n\n      // Handle specific HTTP status codes\n      switch (error.status) {\n        case 401:\n          this.authService.logout();\n          this.snackBarService.showError('Unauthorized. Please enter your credentials.');\n          this.router.navigate(['/login']);\n          break;\n\n        case 403: {\n          this.authService.logout();\n          const errorMessage = error.error?.message || 'Try again.';\n          this.snackBarService.showError(`Access denied. ${errorMessage}.`);\n          break;\n        }\n        case 423: {\n          this.authService.logout();\n          const errorMessage = error.error?.message || 'Try again.';\n          this.snackBarService.showError(`Access denied. ${errorMessage}.`);\n          break;\n        }\n        case 404:\n          this.snackBarService.showError('Resource not found.');\n          break;\n\n        case 413:\n          this.snackBarService.showError('File too large.');\n          break;\n        case 500: {\n          const errorMessage = error.error?.message || 'Please try again later.';\n          this.snackBarService.showError(`Error: ${errorMessage}`);\n          break;\n        }\n        default: {\n          console.error('An error occurred:', error);\n          const errorMessage = error.error?.message || 'An unexpected error occurred.';\n          this.snackBarService.showError(`Error: ${errorMessage}`);\n        }\n      }\n\n      // Log the full error for debugging\n      console.error('Full error details:', {\n        status: error.status,\n        statusText: error.statusText,\n        url: error.url,\n        error: error.error,\n      });\n    } else {\n      // Handle client-side/non-HTTP errors\n      console.error('Client-side error:', error);\n      this.snackBarService.showError('An unexpected error occurred');\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { OrderRequest } from '../models/order-request.model';\nimport { OrderConfirmation } from '../models/order-confirmation.model';\nimport { environment } from 'src/environments/environment';\nimport { Order } from '../models/order.model';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderFormService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient, private authService: AuthService) {}\n\n  getOrderData(customerId: number): Observable<Order> {\n    return this.http.get<Order>(`${this.apiUrl}/public/customers/${customerId}/profiles`);\n  }\n\n  placeOrder(customerId: number, order: OrderRequest): Observable<OrderConfirmation> {\n    const url = `${this.apiUrl}/public/customers/${customerId}/orders`;\n    return this.http.post<OrderConfirmation>(url, order);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Company } from '../models/company.model';\nimport { Customer } from '../models/customer.model';\nimport { SalesRep } from '../models/sales-rep.model';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderLinksService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient, private authService: AuthService) {}\n\n  getCompanies(): Observable<Company[]> {\n    return this.http.get<Company[]>(`${this.apiUrl}/companies`);\n  }\n\n  getSalesPersons(companyId: number): Observable<SalesRep[]> {\n    return this.http.get<SalesRep[]>(`${this.apiUrl}/companies/${companyId}/sales-reps`);\n  }\n\n  getCustomers(companyId: number, salesRepName: string): Observable<Customer[]> {\n    return this.http.get<Customer[]>(`${this.apiUrl}/companies/${companyId}/sales-reps/${salesRepName}/customers`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Company } from '../models/company.model';\nimport { SalesRep } from '../models/sales-rep.model';\nimport { Order } from '../models/order.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderService {\n  constructor(private http: HttpClient) {}\n\n  public loadCompanies(): Observable<Company[]> {\n    return this.http.get<Company[]>(`${environment.apiUrl}/companies`);\n  }\n\n  public loadOrders(company_id: number, salesrep_name: string, past_hours: number): Observable<Order[]> {\n    const apiUrl = `${environment.apiUrl}/companies/${company_id}/sales-reps/${salesrep_name}/orders?pastHours=${past_hours}`;\n    return this.http.get<Order[]>(apiUrl);\n  }\n\n  public loadSalesRep(company_id: number): Observable<SalesRep[]> {\n    return this.http.get<SalesRep[]>(`${environment.apiUrl}/companies/${company_id}/sales-reps`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { PreOrder } from '../models/preorder.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PreorderService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  getPreOrders(vendorId: string): Observable<PreOrder[]> {\n    return this.http.get<PreOrder[]>(`${this.apiUrl}/public/vendors/${vendorId}/pre-orders`);\n  }\n\n  updatePreOrderWeightAndPrice(vendorId: string, preOrder: PreOrder): Observable<unknown> {\n    const patchUrl = `${this.apiUrl}/vendors/${vendorId}/pre-orders/${preOrder.sodId}`;\n    const body = {\n      weight: preOrder.weight,\n      price: preOrder.price,\n    };\n    return this.http.patch(patchUrl, body);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpEvent } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { InventoryItem } from '../models/product.model';\nimport { AuthService } from './auth.service';\nimport { PaginatedResponse } from '../models/paginate-response.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient, private authService: AuthService) {}\n\n  /**\n   * Fetch products with pagination and search term\n   */\n  getProducts(page: number, size: number, searchTerm: string): Observable<InventoryItem[]> {\n    const params = new HttpParams().set('page', page.toString()).set('size', size.toString()).set('search', searchTerm);\n\n    return this.http.get<PaginatedResponse<InventoryItem>>(`${this.apiUrl}/products`, { params }).pipe(map((response) => response.content));\n  }\n\n  /**\n   * Upload a photo for a specific product\n   */\n  uploadProductImage(productId: number, file: File): Observable<HttpEvent<InventoryItem>> {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    return this.http.post<InventoryItem>(`${this.apiUrl}/products/${productId}/photos`, formData, {\n      reportProgress: true,\n      observe: 'events',\n    });\n  }\n\n  /**\n   * Delete a photo for a specific product\n   */\n  deleteProductPhoto(productId: number): Observable<void> {\n    const url = `${this.apiUrl}/products/${productId}/photos`; // Full API endpoint\n    return this.http.delete<void>(url); // Use DELETE HTTP method\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PwaService {\n  private isPwa = new BehaviorSubject<boolean>(false);\n  isPwa$ = this.isPwa.asObservable();\n\n  updateValue(isPwa: boolean): void {\n    this.isPwa.next(isPwa);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarRef, MatSnackBarVerticalPosition, TextOnlySnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SnackbarService {\n  private snackBarRef!: MatSnackBarRef<TextOnlySnackBar>;\n  private duration = 10000;\n  private verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n  private horizontalPos: MatSnackBarHorizontalPosition = 'center';\n  private action = 'Hide';\n\n  // Define standard styles\n  private styles = {\n    error: 'error-snackbar',\n    success: 'success-snackbar',\n    warning: 'warning-snackbar',\n    info: 'info-snackbar',\n  };\n\n  constructor(private matSnackBar: MatSnackBar) {}\n\n  private showSnackBar(message: string, style?: 'error' | 'success' | 'warning' | 'info', duration: number = this.duration) {\n    // Close any existing snackbar\n    this.closeSnackBar();\n\n    // Get the appropriate style class\n    const panelClass = style ? this.styles[style] : undefined;\n\n    this.snackBarRef = this.matSnackBar.open(message, this.action, {\n      duration: duration,\n      verticalPosition: this.verticalPosition,\n      horizontalPosition: this.horizontalPos,\n      panelClass: panelClass,\n    });\n\n    this.snackBarRef.onAction().subscribe(() => {\n      this.closeSnackBar();\n    });\n\n    return this.snackBarRef;\n  }\n\n  // Convenience methods for different types of messages\n  showError(message: string, duration?: number) {\n    return this.showSnackBar(message, 'error', duration);\n  }\n\n  showSuccess(message: string, duration?: number) {\n    return this.showSnackBar(message, 'success', duration);\n  }\n\n  showWarning(message: string, duration?: number) {\n    return this.showSnackBar(message, 'warning', duration);\n  }\n\n  showInfo(message: string, duration?: number) {\n    return this.showSnackBar(message, 'info', duration);\n  }\n\n  closeSnackBar() {\n    if (this.snackBarRef) {\n      this.snackBarRef.dismiss();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n// Define the type for the vendor data\nexport interface Vendor {\n  id: number;\n  name: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class VendorsService {\n  private apiUrl = `${environment.apiUrl}/vendors`; // Base API endpoint for vendors\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Fetch the list of vendors from the API\n   * @returns Observable of vendor data\n   */\n  getVendors(): Observable<Vendor[]> {\n    return this.http.get<Vendor[]>(this.apiUrl);\n  }\n}\n","export const environment = {\n  production: false,\n  apiUrl: 'https://uat-pffc.onrender.com/api',\n};\n","import { AppComponent } from './app/app.component';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { CommonModule } from '@angular/common'; \nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { provideAnimations } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app/app-routing.module';\nimport { BrowserModule, bootstrapApplication } from '@angular/platform-browser';\nimport { GlobalErrorHandlerService } from './app/services/global-error-handler.service';\nimport { ErrorHandler, importProvidersFrom, isDevMode } from '@angular/core';\nimport { HTTP_INTERCEPTORS, provideHttpClient, withInterceptorsFromDi } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { AuthInterceptor } from './app/interceptors/auth.interceptor';\nimport { provideServiceWorker } from '@angular/service-worker';\n\nbootstrapApplication(AppComponent, {\n  providers: [\n    importProvidersFrom(\n      BrowserModule,\n      AppRoutingModule,\n      RouterModule,\n      CommonModule, \n      FormsModule,\n      ReactiveFormsModule,\n      MatSlideToggleModule,\n      MatTableModule,\n      MatSidenavModule,\n      MatToolbarModule,\n      MatIconModule,\n      MatListModule,\n      MatMenuModule,\n      MatSnackBarModule,\n      ModalModule.forRoot(),\n    ),\n    { provide: ErrorHandler, useClass: GlobalErrorHandlerService },\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    provideHttpClient(withInterceptorsFromDi()),\n    provideAnimations(), provideServiceWorker('ngsw-worker.js', {\n            enabled: !isDevMode(),\n            registrationStrategy: 'registerWhenStable:30000'\n          }),\n  ],\n}).catch((err) => console.error(err));\n"],"names":["RouterModule","DriverRouteComponent","HomeComponent","OrderLinksComponent","LoginComponent","LogoutComponent","ProductsComponent","OrderConfirmationComponent","OrderExistsComponent","OrderFormComponent","DataComponent","OrdersComponent","VendorLinksComponent","PreorderFormComponent","AuthGuard","PasswordRequestComponent","PasswordResetComponent","routes","path","redirectTo","pathMatch","component","title","canActivate","AppRoutingModule","forRoot","imports","i1","exports","isDevMode","RouterOutlet","CommonModule","MatToolbarModule","MatIconModule","environment","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","apiUrl","AppComponent","constructor","router","showWarning","includes","alert","ɵɵdirectiveInject","Router","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","AppComponent_div_6_Template","AppComponent_div_7_Template","ɵɵproperty","i2","NgIf","styles","changeDetection","ɵɵlistener","AppInstallPromptComponent_Conditional_0_Template_button_click_1_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","promptInstall","AppInstallPromptComponent_Conditional_2_Template_button_click_1_listener","_r3","showIosInstructions","AppInstallPromptComponent","pwaService","platform","snackbarService","deferredPrompt","isPwa$","isStandalone","window","navigator","isIosButNotStandalone","IOS","ngOnInit","console","log","beforeInstallPromptHandler","event","preventDefault","updateValue","addEventListener","ngOnDestroy","removeEventListener","prompt","userChoice","then","showInfo","PwaService","Platform","i3","SnackbarService","AppInstallPromptComponent_Template","AppInstallPromptComponent_Conditional_0_Template","AppInstallPromptComponent_Conditional_2_Template","ɵɵconditional","ɵɵpipeBind1","i4","AsyncPipe","http","snackBar","uploadUrl","downloadOrders","url","get","responseType","subscribe","response","blob","Blob","type","downloadURL","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL","error","open","duration","onFileSelected","fileInput","target","files","length","file","uploadFile","formData","FormData","append","post","next","HttpClient","MatSnackBar","DataComponent_Template","DataComponent_Template_button_click_1_listener","DataComponent_Template_button_click_3_listener","fileInput_r2","ɵɵreference","DataComponent_Template_input_change_5_listener","$event","SecurityContext","map","tap","HttpEventType","ImageThumbnailComponent","MatTableModule","driverNames_r4","name","i_r5","ɵɵtextInterpolate1","dataSource_r7","indexOf","element_r6","timeDifference","DriverRouteComponent_table_18_td_3_div_2_Template","deliveryAddress1","ctx_r8","getGoogleMapsUrl","element_r8","deliveryAddress2","deliveryAddress3","ɵɵsanitizeUrl","ɵɵtextInterpolate2","ɵɵpropertyInterpolate1","element_r10","customerPhone","DriverRouteComponent_table_18_td_12_div_1_Template_input_change_1_listener","_r11","element_r12","$implicit","DriverRouteComponent_table_18_td_12_div_1_Template_button_click_3_listener","fileInput_r13","fileUrl","ɵɵpipeBind2","actualArrivalTime","DriverRouteComponent_table_18_td_12_div_1_Template","DriverRouteComponent_table_18_td_12_ng_template_2_Template","ɵɵtemplateRefExtractor","alreadyArrivedBlock_r14","ɵɵpureFunction1","_c1","row_r15","ɵɵelementContainerStart","DriverRouteComponent_table_18_th_2_Template","DriverRouteComponent_table_18_td_3_Template","DriverRouteComponent_table_18_th_5_Template","DriverRouteComponent_table_18_td_6_Template","DriverRouteComponent_table_18_th_8_Template","DriverRouteComponent_table_18_td_9_Template","DriverRouteComponent_table_18_th_11_Template","DriverRouteComponent_table_18_td_12_Template","DriverRouteComponent_table_18_tr_13_Template","DriverRouteComponent_table_18_tr_14_Template","displayedColumns","driverRouteService","snackBarService","sanitizer","cdr","maxFileSize","selectedFile","today","formatDate","Date","driverNames$","getDrivers","pipe","data","refreshDeliverRoute","date","month","getMonth","slice","day","getDate","year","getFullYear","driverName","deliveryDate","formattedDate","toISOString","split","deliveryRoute$","getDeliveryRoute","deliveryStops","calculateTimeDifferences","deliveryRoute","input","startsWith","size","showError","showSuccess","uploadPhoto","id","Response","updatedDeliveryStop","body","Object","assign","closeSnackBar","detectChanges","address2","address3","encodeURIComponent","sanitizedUrl","sanitize","bypassSecurityTrustUrl","i","currentStop","previousStop","currentTime","plannedArrivalTime","getTime","previousTime","timeDifferenceInMinutes","Math","round","undefined","DriverRouteService","DomSanitizer","ChangeDetectorRef","DriverRouteComponent_Template","DriverRouteComponent_Template_select_change_9_listener","driverName_r2","deliveryDate2_r3","value","DriverRouteComponent_option_11_Template","DriverRouteComponent_table_18_Template","ɵɵpureFunction0","_c0","NgClass","NgForOf","DatePipe","i5","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","i6","RouterLink","authService","username","getFullname","navigateTo","page","navigate","logout","AuthService","HomeComponent_Template","HomeComponent_Template_button_click_2_listener","HomeComponent_Template_button_click_4_listener","HomeComponent_Template_button_click_6_listener","HomeComponent_Template_button_click_8_listener","HomeComponent_Template_button_click_10_listener","HomeComponent_Template_button_click_12_listener","ImageThumbnailComponent_ng_template_2_Template_button_click_3_listener","ctx_r3","modalRef","hide","ImageThumbnailComponent_ng_template_2_Template_img_click_7_listener","ImageThumbnailComponent_ng_template_2_Template_img_keyup_7_listener","imageUrl","modalService","openModal","show","class","BsModalService","inputs","ImageThumbnailComponent_Template","ImageThumbnailComponent_Template_div_click_0_listener","imageModal_r2","ImageThumbnailComponent_Template_img_keyup_1_listener","ImageThumbnailComponent_ng_template_2_Template","Validators","MatFormFieldModule","MatInputModule","MatButtonModule","ReactiveFormsModule","catchError","throwError","errorMessage","formBuilder","loading","loginForm","group","required","password","onLogin","invalid","login","loginError","errorCode","status","message","markForCheck","loginResponse","fullname","firstName","lastName","trim","saveFullnameAndToken","token","FormBuilder","LoginComponent_Template","LoginComponent_Template_form_ngSubmit_6_listener","LoginComponent_span_18_Template","LoginComponent_span_19_Template","LoginComponent_div_20_Template","MatFormField","MatLabel","MatInput","i7","MatButton","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","imageBackgroundColor","imageSrc","LogoComponent_Conditional_0_div_1_Template","companyId","LogoComponent_Conditional_1_div_0_Template","LogoComponent","isLoggedIn","ngOnChanges","ɵɵNgOnChangesFeature","LogoComponent_Template","LogoComponent_Conditional_0_Template","LogoComponent_Conditional_1_Template","NgStyle","LogoutComponent_Template","product_r1","profileDescription","unitType","packSize","salesPrice","quantity","orderData","shipToName","location","history","state","goBack","customerId","Location","OrderConfirmationComponent_Template","OrderConfirmationComponent_tr_21_Template","OrderConfirmationComponent_div_33_Template","OrderConfirmationComponent_Template_button_click_38_listener","customerName","profiles","ɵɵpipeBind3","totalPrice","shipToId","DecimalPipe","CurrencyPipe","MAT_DIALOG_DATA","MatDialogModule","profile_r1","OrderDetailsDialogComponent","order","dialogRef","closeDialog","close","MatDialogRef","OrderDetailsDialogComponent_Template","OrderDetailsDialogComponent_tr_47_Template","customerPo","salesRepName","MatDialogClose","MatDialogTitle","MatDialogActions","MatDialogContent","route","back","ActivatedRoute","OrderExistsComponent_Template","OrderExistsComponent_tr_21_Template","OrderExistsComponent_div_36_Template","OrderExistsComponent_Template_button_click_37_listener","salesRepPhone","shipTo_r3","OrderFormComponent_form_0_div_6_option_5_Template","OrderFormComponent_form_0_div_6_div_6_Template","shipTos","tmp_3_0","orderForm","touched","errors","OrderFormComponent_form_0_div_7_ng_container_20_tr_1_div_6_Template","i_r6","isQuantityEntered","tmp_9_0","profile_r5","ɵɵpipeBind4","getRowTotalPrice","OrderFormComponent_form_0_div_7_ng_container_20_tr_1_Template","isSpecial","OrderFormComponent_form_0_div_7_ng_container_20_Template","profileControls","controls","OrderFormComponent_form_0_ng_container_27_tr_1_div_6_Template","i_r9","tmp_8_0","profile_r8","OrderFormComponent_form_0_ng_container_27_tr_1_Template","item_r11","OrderFormComponent_form_0_div_51_Template_span_click_2_listener","_r10","closeModal","OrderFormComponent_form_0_div_51_tr_22_Template","currentOrderItems","OrderFormComponent_form_0_Template_form_ngSubmit_0_listener","onSubmit","OrderFormComponent_form_0_div_5_Template","OrderFormComponent_form_0_div_6_Template","OrderFormComponent_form_0_div_7_Template","OrderFormComponent_form_0_ng_container_27_Template","OrderFormComponent_form_0_div_28_Template","OrderFormComponent_form_0_div_29_Template","OrderFormComponent_form_0_div_34_Template","OrderFormComponent_form_0_Template_button_click_35_listener","showCurrentOrder","OrderFormComponent_form_0_div_47_Template","OrderFormComponent_form_0_div_48_Template","OrderFormComponent_form_0_div_49_Template","OrderFormComponent_form_0_div_50_Template","OrderFormComponent_form_0_div_51_Template","hasSpecials","submitted","tmp_7_0","hasError","formControls","dirty","showModal","valid","fb","orderService","paramMap","params","NaN","loadOrderData","getOrderData","sort","a","b","localeCompare","some","profile","shipToValidators","dateAfterTomorrowValidator","dateWithinThreeMonthsValidator","dateNotOnSundayValidator","array","createProfileGroup","atLeastOneQuantityValidator","at","price","index","profileDid","min","filter","placeOrder","orderConfirmation","markAllAsTouched","item","control","dateValue","now","twoAmToday","isNaN","dateAfterTomorrow","formArray","hasAtLeastOneQuantity","atLeastOneQuantity","threeMonthsFromNow","dateWithinThreeMonths","getUTCDay","dateNotOnSunday","OrderFormService","OrderFormComponent_Template","OrderFormComponent_form_0_Template","NgSelectOption","ɵNgSelectMultipleOption","NumberValueAccessor","SelectControlValueAccessor","FormGroupName","FormArrayName","Observable","switchMap","company_r1","salesperson_r2","OrderLinksComponent_tr_33_Template_a_click_7_listener","customer_r4","ctx_r4","copyLink","OrderLinksComponent_tr_33_Template_a_keyup_7_listener","orderLinksService","customers","filteredCustomers","form","company","salesPerson","searchText","companies$","getCompanies","companies","defaultCompany","find","setValue","valueChanges","getSalesPersons","salesreps","salesPersons$","observer","complete","salesrep","getCustomers","customer","toLowerCase","generateLink","baseUrl","replace","clipboard","writeText","catch","err","OrderLinksService","OrderLinksComponent_Template","OrderLinksComponent_option_11_Template","OrderLinksComponent_option_17_Template","OrderLinksComponent_tr_33_Template","tmp_2_0","OrdersComponent_tr_37_Template_tr_click_0_listener","item_r4","onRowClick","dialog","orders","filteredOrders","loadCompanies","setupSalesPersonListener","setupOrdersListener","setupCustomerNameFilterListener","loadSalesRep","loadOrders","applyFilters","width","OrderService","MatDialog","OrdersComponent_Template","OrdersComponent_option_11_Template","OrdersComponent_option_17_Template","OrdersComponent_tr_37_Template","passwordRequestForm","email","passwordRequest","PasswordRequestComponent_Template","PasswordRequestComponent_Template_form_ngSubmit_7_listener","mismatchedPassword","passwordResetForm","minLength","specialCharacterValidator","confirmPassword","passwordReset","hasSpecialCharacter","test","noSpecialCharacter","PasswordResetComponent_Template","PasswordResetComponent_Template_form_ngSubmit_7_listener","PasswordResetComponent_div_16_Template","PasswordResetComponent_div_17_Template","PasswordResetComponent_div_18_Template","i8","FormsModule","PreorderFormComponent_tr_27_div_16_Template","PreorderFormComponent_tr_27_div_22_Template","i_r2","preOrder_r1","tmp_5_0","tmp_6_0","ctx_r2","getUnitType","tmp_10_0","tmp_11_0","tmp_12_0","preorderService","preOrderForm","preOrders","vendorId","getPreOrders","setPreOrders","preOrderFormGroups","preOrder","createPreOrderForm","preOrderFormArray","setControl","sodId","dispatchDate","descriptionMemo","unitSize","weight","preOrdersArray","getModifiedPreOrders","preOrderGroup","submitAll","modifiedPreOrders","forEach","updatePreOrderWeightAndPrice","trackByOrderId","unitTypeMap","PreorderService","PreorderFormComponent_Template","PreorderFormComponent_Template_form_ngSubmit_6_listener","PreorderFormComponent_tr_27_Template","MinValidator","VendorLinksComponent_tr_16_Template_a_click_7_listener","vendor_r2","VendorLinksComponent_tr_16_Template_a_keyup_7_listener","vendorsService","vendors$","getVendors","navigateToPreorderForm","origin","VendorsService","VendorLinksComponent_Template","VendorLinksComponent_tr_16_Template","DOC_ORIENTATION","ProductDetailsDialogComponent_ng_container_6_Template_div_click_3_listener","_r2","deletePhoto","photoUrl","ProductDetailsDialogComponent_ng_template_7_Template_input_change_0_listener","_r4","ProductDetailsDialogComponent_ng_template_7_Template_button_click_2_listener","fileInput_r5","triggerFileInput","compCost","yield","laborPackCost","tmp_4_0","ProductDetailsDialogComponent","productService","imageCompress","toggleInfoVisibility","reader","FileReader","readAsDataURL","onload","imageBase64","result","compressFile","Default","compressedImage","dataURItoBlob","compressedFile","File","uploadProductImage","compItemId","updatedItem","confirm","deleteProductPhoto","dataURI","byteString","atob","mimeString","arrayBuffer","ArrayBuffer","intArray","Uint8Array","charCodeAt","ProductService","NgxImageCompressService","ProductDetailsDialogComponent_Template","ProductDetailsDialogComponent_ng_container_6_Template","ProductDetailsDialogComponent_ng_template_7_Template","ProductDetailsDialogComponent_Template_button_click_9_listener","ProductDetailsDialogComponent_div_11_Template","compDescription","compInstructions","uploadButton_r6","notes","woh","buyer","sixtySales","tenSales","preOrderHours","debounceTime","distinctUntilChanged","BehaviorSubject","Subject","InfiniteScrollDirective","FormControl","origin_r2","buyer_r3","ProductsComponent_table_38_tr_12_Template_tr_click_0_listener","item_r5","ctx_r5","ɵɵclassProp","ProductsComponent_table_38_tr_12_Template","products_r7","searchTerm","showRelevantItems","showSixtySales","showWoh","showYield","showWithImages","originFilter","packSizeFilter","buyerFilter","minCompCost","minCompCostControl","uniqueOrigins","uniquePackSizes","uniqueBuyers","searchSubject","inventoryItemsSubject","inventoryItems$","asObservable","loadData","searchSubscription","trimComparator","parseFloat","onCompCostChange","getProducts","currentData","newData","currentItem","filteredData","fullyFilteredData","populateUniqueDropdowns","tagName","toggleRelevantItemsFilter","toggleSixtySalesFilter","toggleWohFilter","toggleYieldFilter","toggleWithImagesFilter","onFilterChange","onScroll","onSearchChange","prev","curr","unsubscribe","products","Set","Boolean","Number","ProductsComponent_Template","ProductsComponent_Template_div_scrolled_0_listener","ProductsComponent_Template_input_input_7_listener","ProductsComponent_Template_button_click_9_listener","ProductsComponent_Template_button_click_11_listener","ProductsComponent_Template_button_click_13_listener","ProductsComponent_Template_button_click_15_listener","ProductsComponent_Template_button_click_17_listener","ProductsComponent_Template_select_change_23_listener","ɵɵtwoWayListener","ProductsComponent_Template_select_ngModelChange_23_listener","ɵɵtwoWayBindingSet","ProductsComponent_option_26_Template","ProductsComponent_Template_input_ngModelChange_30_listener","ProductsComponent_Template_input_input_30_listener","ProductsComponent_Template_select_change_34_listener","ProductsComponent_Template_select_ngModelChange_34_listener","ProductsComponent_option_37_Template","ProductsComponent_table_38_Template","ProductsComponent_ng_template_40_Template","ɵɵtwoWayProperty","noData_r8","NgModel","ɵɵinject","factory","ɵfac","providedIn","AuthInterceptor","intercept","req","getToken","clonedRequest","clone","setHeaders","Authorization","handle","tokenKey","fullnameKey","localStorage","setItem","getItem","removeItem","HttpParams","set","hasArrived","patch","deliveryStopId","reportProgress","observe","HttpErrorResponse","GlobalErrorHandlerService","handleError","onLine","ErrorEvent","statusText","company_id","salesrep_name","past_hours","patchUrl","toString","content","productId","delete","isPwa","matSnackBar","verticalPosition","horizontalPos","action","success","warning","info","showSnackBar","style","panelClass","snackBarRef","horizontalPosition","onAction","dismiss","production","ModalModule","MatSnackBarModule","MatMenuModule","MatListModule","MatSidenavModule","MatSlideToggleModule","provideAnimations","BrowserModule","bootstrapApplication","ErrorHandler","importProvidersFrom","HTTP_INTERCEPTORS","provideHttpClient","withInterceptorsFromDi","provideServiceWorker","providers","provide","useClass","multi","enabled","registrationStrategy"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}