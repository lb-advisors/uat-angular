{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/data/data.component.ts","./src/app/components/data/data.component.html","./src/app/components/driver-route/driver-route.component.ts","./src/app/components/driver-route/driver-route.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/image-thumbnail/image-thumbnail.component.ts","./src/app/components/image-thumbnail/image-thumbnail.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/logo/logo.component.ts","./src/app/components/logo/logo.component.html","./src/app/components/logout/logout.component.ts","./src/app/components/logout/logout.component.html","./src/app/components/order-confirmation/order-confirmation.component.ts","./src/app/components/order-confirmation/order-confirmation.component.html","./src/app/components/order-exists/order-exists.component.ts","./src/app/components/order-exists/order-exists.component.html","./src/app/components/order-form/order-form.component.ts","./src/app/components/order-form/order-form.component.html","./src/app/components/order-links/order-links.component.ts","./src/app/components/order-links/order-links.component.html","./src/app/components/orders/orders.component.ts","./src/app/components/orders/orders.component.html","./src/app/components/preorders/preorders.component.ts","./src/app/components/preorders/preorders.component.html","./src/app/components/product-details-dialog/product-details-dialog.component.ts","./src/app/components/product-details-dialog/product-details-dialog.component.html","./src/app/components/products/products.component.ts","./src/app/components/products/products.component.html","./src/app/interceptors/auth.interceptor.ts","./src/app/interceptors/http-logging.interceptor.ts","./src/app/services/auth.service.ts","./src/app/services/driver-route.service.ts","./src/app/services/global-error-handler.service.ts","./src/app/services/order-form.service.ts","./src/app/services/order-links.service.ts","./src/app/services/products.service.ts","./src/app/services/snackbar.service.ts","./src/environments/environment.development.ts","./src/main.ts"],"sourcesContent":["\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthInterceptor } from './interceptors/auth.interceptor';\nimport { HttpLoggingInterceptor } from 'src/app/interceptors/http-logging.interceptor';\nimport { DriverRouteComponent } from './components/driver-route/driver-route.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { OrderLinksComponent } from './components/order-links/order-links.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { LogoutComponent } from './components/logout/logout.component';\nimport { ProductsComponent } from './components/products/products.component';\nimport { OrderConfirmationComponent } from './components/order-confirmation/order-confirmation.component';\nimport { OrderExistsComponent } from './components/order-exists/order-exists.component';\nimport { OrderFormComponent } from './components/order-form/order-form.component';\nimport { DataComponent } from './components/data/data.component';\nimport { OrdersComponent } from './components/orders/orders.component';\nimport { PreOrdersComponent } from './components/preorders/preorders.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\n  { path: 'home', component: HomeComponent, title: 'Home' },\n  { path: 'driver', component: DriverRouteComponent, title: 'Driver Route' },\n  { path: 'order-links', component: OrderLinksComponent, title: 'Order Links' },\n  { path: 'login', component: LoginComponent, title: 'Login' },\n  { path: 'logout', component: LogoutComponent, title: 'Logout' },\n  { path: 'products', component: ProductsComponent, title: 'Products' },\n  { path: 'customer/:id/order-confirmation', component: OrderConfirmationComponent, title: 'Order Confirmation' },\n  { path: 'customer/:id/order-exists', component: OrderExistsComponent, title: 'Order Exists' },\n  { path: 'customer/:id/order-form', component: OrderFormComponent, title: 'Order Form' },\n  { path: 'data', component: DataComponent, title: 'Data' },\n  { path: 'orders', component: OrdersComponent, title: 'Orders' },\n  { path: 'preorders', component: PreOrdersComponent, title: 'PreOrders' },\n  { path: '**', redirectTo: 'login' } // Wildcard route to handle unmatched paths, redirect to login\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: HttpLoggingInterceptor, multi: true }\n  ]\n})\nexport class AppRoutingModule {}\n","import { ChangeDetectionStrategy, Component, OnInit, isDevMode } from '@angular/core';\nimport { NavigationEnd, Router, RouterLink, RouterLinkActive, RouterOutlet } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  standalone: true,\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  imports: [\n    CommonModule,\n    MatToolbarModule,\n    RouterLink,\n    RouterLinkActive,\n    MatIconModule,\n    RouterOutlet\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent implements OnInit { // Renamed to AppComponent\n  isDevMode: boolean = isDevMode();\n  apiUrl = environment.apiUrl;\n  showWarning = false;\n  isOrderForm: boolean = false;\n\n  constructor(private router: Router) {\n    // Check that UAT is not using the prod backend\n    if (this.isDevMode && this.apiUrl.includes('prod')) {\n      this.showWarning = true;\n      alert('WARNING: Angular is in Dev mode but connected to production !!!');\n    }\n  }\n\n  ngOnInit(): void {\n    // Check if we are on the order form\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        const currentRoute = event.urlAfterRedirects;\n        this.isOrderForm = currentRoute.includes('order-') && !currentRoute.includes('order-links');\n      }\n    });\n  }\n}\n","@if (!isOrderForm) {\n    <mat-toolbar color=\"primary\" class=\"header\" [ngClass]=\"{'warning': showWarning}\">\n        <div class=\"nav-links-center\">\n            <a mat-button routerLink=\"/products\" routerLinkActive=\"active-link\">\n                <mat-icon>inventory</mat-icon>\n                Products\n            </a>\n            <a mat-button routerLink=\"/order-links\" routerLinkActive=\"active-link\">\n                <mat-icon>description</mat-icon>\n                Order Links\n            </a>\n            <a mat-button routerLink=\"/orders\" routerLinkActive=\"active-link\">\n                <mat-icon>assignment</mat-icon>\n                Orders\n            </a>\n            <a mat-button routerLink=\"/preorders\" routerLinkActive=\"active-link\">\n                <mat-icon>event_note</mat-icon>\n                PreOrders\n            </a>\n            <a mat-button routerLink=\"/driver\" routerLinkActive=\"active-link\">\n                <mat-icon>local_shipping</mat-icon>\n                Routes\n            </a>\n            <a mat-button routerLink=\"/login\" routerLinkActive=\"active-link\"> <!-- Login link -->\n                <mat-icon>login</mat-icon>\n                Login\n            </a>\n        </div>\n    </mat-toolbar>\n}\n\n<div class=\"underline\"></div> <!-- Thinner black line underlining the nav bar -->\n\n<main>\n    <router-outlet></router-outlet>\n</main>\n\n<!-- Footer with Navigation and Social Icons-->\n<footer class=\"mat-drawer-container\">\n    <div class=\"container\">\n        <div class=\"text-align-center\">\n            © 2024 - Pacific Fresh Fish Company\n            @if (isDevMode) {<div class=\"dev-mode\">UAT ENVIRONMENT</div>\n            <div class=\"dev-mode\">{{apiUrl}}</div>}\n        </div>\n    </div>\n</footer>\n","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { environment } from 'src/environments/environment'; // Import the environment configuration\n\n@Component({\n  selector: 'app-data',\n  templateUrl: './data.component.html',\n  styleUrls: ['./data.component.css'],\n})\nexport class DataComponent {\n  private apiUrl = environment.apiUrl;\n  uploadUrl: string = `${this.apiUrl}/database/csv/upload/profiles`;\n\n  constructor(private http: HttpClient, private snackBar: MatSnackBar) {}\n\n  downloadOrders() {\n    const url = `${this.apiUrl}/database/csv/download/orders`;\n\n    this.http.get(url, { responseType: 'blob' }).subscribe(\n      (response: Blob) => {\n        const blob = new Blob([response], { type: 'text/csv' });\n        const downloadURL = window.URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = downloadURL;\n        link.download = 'orders.csv';\n        link.click();\n        window.URL.revokeObjectURL(downloadURL);\n      },\n      (error) => {\n        console.error('Download failed:', error);\n        this.snackBar.open('Failed to download orders. Please try again later.', 'Close', { duration: 3000 });\n      },\n    );\n  }\n\n  onFileSelected(event: Event) {\n    const fileInput = event.target as HTMLInputElement;\n    if (fileInput.files && fileInput.files.length > 0) {\n      const file = fileInput.files[0];\n      this.uploadFile(file);\n    }\n  }\n\n  uploadFile(file: File) {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    this.snackBar.open('Processing your CSV file', '', { duration: 20000 });\n\n    this.http.post(this.uploadUrl, formData).subscribe({\n      next: () => {\n        this.snackBar.open('All Done', '', { duration: 3000 });\n      },\n    });\n  }\n}\n","<div class=\"data-container\">\n    <button class=\"action-button download-button\" (click)=\"downloadOrders()\">Download Orders</button>\n    <button class=\"action-button upload-button\" (click)=\"fileInput.click()\">Upload Profiles</button>\n    <input type=\"file\" #fileInput accept=\".csv\" style=\"display: none\" (change)=\"onFileSelected($event)\" />\n</div>\n\n<div class=\"upload-instructions\">\n    <p>CSV file required</p>\n    <p>File with these columns, in this order required:</p>\n    <ul>\n        <li>ProfileDID</li>\n        <li>SalesRepName</li>\n        <li>SalesRepCell</li>\n        <li>SalesRepEmail</li>\n        <li>ProfileID</li>\n        <li>CustomerID</li>\n        <li>CustomerName</li>\n        <li>CompItemID</li>\n        <li>ProfileDescription</li>\n        <li>ProfileInstruction</li>\n        <li>UnitTypePD</li>\n        <li>PackSizePD</li>\n        <li>SalesPrice</li>\n        <li>CustomerContactName</li>\n        <li>CustomerCell</li>\n        <li>CustomerEmail</li>\n        <li>Company</li>\n        <li>CompanyID</li>\n    </ul>\n</div>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, SecurityContext } from '@angular/core';\nimport { DriverRouteService } from '../../services/driver-route.service';\nimport { Observable } from 'rxjs';\nimport { DeliveryStop } from 'src/app/models/delivery-stop.model';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { map, tap } from 'rxjs/operators';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { HttpEventType } from '@angular/common/http';\nimport { ImageThumbnailComponent } from '../image-thumbnail/image-thumbnail.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { CommonModule } from '@angular/common';\n\ninterface Driver {\n  name: string;\n}\n\n@Component({\n  standalone: true,\n  selector: 'app-driver-route',\n  templateUrl: './driver-route.component.html',\n  styleUrls: ['./driver-route.component.css'],\n  imports: [CommonModule, MatTableModule, ImageThumbnailComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DriverRouteComponent implements OnInit {\n  readonly maxFileSize = 4 * 1024 * 1024; // 4 MB\n\n  driverNames$!: Observable<Driver[]>;\n  deliveryRoute$: Observable<DeliveryStop[]> | undefined;\n  today: string;\n  selectedFile: File | null = null;\n\n  displayedColumns: string[] = ['deliveryAddress1', 'address', 'customerPhone', 'actualArrivalTime'];\n\n  constructor(\n    private driverRouteService: DriverRouteService,\n    private snackBarService: SnackbarService,\n    private sanitizer: DomSanitizer,\n    private cdr: ChangeDetectorRef,\n  ) {\n    this.today = this.formatDate(new Date());\n  }\n\n  ngOnInit(): void {\n    this.driverNames$ = this.driverRouteService.getDrivers().pipe(\n      tap((data) => {\n        if (data && data.length > 0) {\n          this.refreshDeliverRoute(data[0].name, this.today);\n        }\n      }),\n    );\n  }\n\n  formatDate(date: Date): string {\n    const month = ('0' + (date.getMonth() + 1)).slice(-2);\n    const day = ('0' + date.getDate()).slice(-2);\n    const year = date.getFullYear();\n    return `${month}/${day}/${year}`;\n  }\n\n  refreshDeliverRoute(driverName: string, deliveryDate: string): void {\n    const formattedDate = new Date(deliveryDate).toISOString().split('T')[0]; // Ensure date is formatted as YYYY-MM-DD\n    this.deliveryRoute$ = this.driverRouteService\n      .getDeliveryRoute(driverName, formattedDate)\n      .pipe(map((deliveryStops) => this.calculateTimeDifferences(deliveryStops)));\n  }\n\n  onFileSelected(deliveryRoute: DeliveryStop, event: Event) {\n    const input = event.target as HTMLInputElement;\n    if (input.files && input.files.length > 0) {\n      const file = input.files[0];\n      if (file && file.type.startsWith('image/')) {\n        if (file.size <= this.maxFileSize) {\n          this.selectedFile = file;\n          this.uploadFile(deliveryRoute, file);\n        } else {\n          this.snackBarService.showSnackBar('File size exceeds 4 MB.');\n        }\n      } else {\n        this.snackBarService.showSnackBar('Please select an image file');\n        this.selectedFile = null;\n      }\n    }\n  }\n\n  uploadFile(deliveryRoute: DeliveryStop, file: File) {\n    this.snackBarService.showSnackBar('Your file is being uploaded');\n    this.driverRouteService.uploadPhoto(deliveryRoute.id, file).subscribe({\n      next: (event) => {\n        switch (event.type) {\n          case HttpEventType.Response: {\n            const updatedDeliveryStop = event.body as DeliveryStop;\n            Object.assign(deliveryRoute, updatedDeliveryStop);\n            this.snackBarService.closeSnackBar();\n            this.cdr.detectChanges();\n          }\n        }\n      },\n    });\n  }\n\n  getGoogleMapsUrl(address2: string, address3: string): SafeUrl {\n    const url = `https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(address2 + ' ' + address3)}`;\n\n    const sanitizedUrl = this.sanitizer.sanitize(SecurityContext.URL, url);\n    if (sanitizedUrl) {\n      return this.sanitizer.bypassSecurityTrustUrl(sanitizedUrl);\n    } else {\n      return '';\n    }\n  }\n\n  private calculateTimeDifferences(deliveryStops: DeliveryStop[]): DeliveryStop[] {\n    for (let i = deliveryStops.length - 1; i > 0; i--) {\n      const currentStop = deliveryStops[i];\n      const previousStop = deliveryStops[i - 1];\n\n      const currentTime = new Date(currentStop.plannedArrivalTime).getTime();\n      const previousTime = new Date(previousStop.plannedArrivalTime).getTime();\n\n      const timeDifferenceInMinutes = Math.round((currentTime - previousTime) / 60000);\n      currentStop.timeDifference = timeDifferenceInMinutes;\n    }\n\n    if (deliveryStops.length > 0) {\n      deliveryStops[0].timeDifference = undefined; // First row will have no time difference\n    }\n    return deliveryStops;\n  }\n}\n","<div class=\"container\">\n  <div class=\"image-container\">\n    <img src=\"assets/logo.png\" alt=\"Company Logo\">\n  </div>\n\n  <h2 class=\"driver-routes-title\">Driver Routes</h2>\n\n  <div class=\"filters\">\n    <div class=\"driver-filter\">\n      <label for=\"driver-name\">Driver Name:</label>\n      <select id=\"driver-name\" #driverName (change)=\"refreshDeliverRoute(driverName.value, deliveryDate2.value)\">\n        <option *ngFor=\"let driverNames of (driverNames$ | async); let i = index\" [value]=\"driverNames.name\" [selected]=\"i === 0\">{{driverNames.name}}</option>\n      </select>\n    </div>\n\n    <div class=\"delivery-date-filter\">\n      <label for=\"delivery-date\">Delivery Date:</label>\n      <input type=\"text\" id=\"delivery-date\" #deliveryDate2 [value]=\"today\" readonly class=\"delivery-date-input\">\n    </div>\n  </div>\n\n  <table mat-table *ngIf=\"deliveryRoute$ | async as dataSource\" [dataSource]=\"dataSource\" class=\"mat-elevation-z8 driver-routes-grid\" matSort>\n    <!-- Customer Column -->\n    <ng-container matColumnDef=\"deliveryAddress1\">\n      <th mat-header-cell *matHeaderCellDef class=\"no-bottom-border\">Customer</th>\n      <td mat-cell *matCellDef=\"let element\" class=\"no-bottom-border\">\n        {{element.deliveryAddress1}}\n        <div *ngIf=\"element !== dataSource[dataSource.length - 1]\" class=\"arrow-container\">\n          <i class=\"fas fa-arrow-down\"></i>\n          <span class=\"time-difference-arrow\">+{{ dataSource[dataSource.indexOf(element) + 1].timeDifference + ' m' }}</span>\n        </div>\n      </td>\n    </ng-container>\n\n    <!-- Address Column (Concatenation of Delivery Address 2 and 3) -->\n    <ng-container matColumnDef=\"address\">\n      <th mat-header-cell *matHeaderCellDef>Address</th>\n      <td mat-cell *matCellDef=\"let element\" class=\"address-column\">\n        <a [href]=\"getGoogleMapsUrl(element.deliveryAddress2, element.deliveryAddress3)\" target=\"_blank\">\n          {{element.deliveryAddress2}} {{element.deliveryAddress3}}\n        </a>\n      </td>\n    </ng-container>\n\n    <!-- Customer Phone Column -->\n    <ng-container matColumnDef=\"customerPhone\">\n      <th mat-header-cell *matHeaderCellDef class=\"wrap\">Customer Phone</th>\n      <td mat-cell *matCellDef=\"let element\" class=\"customerPhone\"><a href=\"tel:+1{{element.customerPhone}} \"> {{element.customerPhone}}</a> </td>\n    </ng-container>\n\n    <!-- Actual Arrival Time Column -->\n    <ng-container matColumnDef=\"actualArrivalTime\">\n      <th mat-header-cell *matHeaderCellDef>Arrival</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <div *ngIf=\"!element.actualArrivalTime || !element.fileUrl; else alreadyArrivedBlock\" class=\"custom-file-input\">\n          <input type=\"file\" id=\"file\" #fileInput (change)=\"onFileSelected(element, $event)\" accept=\"image/*\" required hidden>\n          <button type=\"button\" class=\"button\" (click)=\"fileInput.click()\">Arrived</button>\n        </div>\n        <ng-template #alreadyArrivedBlock>\n          <div>\n            <app-image-thumbnail [imageUrl]=\"element.fileUrl\"\n              [title]=\"element.deliveryAddress2 + ' ' + element.deliveryAddress3 + ' (' + (element.actualArrivalTime | date: 'medium') + ')'\"></app-image-thumbnail>\n          </div>\n        </ng-template>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" [ngClass]=\"{'arrived-row': row.actualArrivalTime}\"></tr>\n  </table>\n</div>","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\ninterface Employee {\n  name: string;\n  status: 'sick' | 'vacation' | 'onsite';\n}\n\ninterface Item {\n  description: string;\n  status: 'low' | 'none';\n  ordered: boolean;\n}\n\n@Component({\n  standalone: true,\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n  imports: [CommonModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HomeComponent implements OnInit {\n  today: Date = new Date();\n  employees: Employee[] = [\n    { name: 'Miguel Rodriguez', status: 'onsite' },\n    { name: 'Maria Lopez', status: 'sick' },\n    { name: 'Michael Johnson', status: 'vacation' },\n    { name: 'Arev Sarkisian', status: 'onsite' },\n    { name: 'Narek Petrosian', status: 'onsite' },\n    { name: 'Lilit Avetisyan', status: 'onsite' },\n    { name: 'Anahit Hovhannisyan', status: 'onsite' },\n    { name: 'David Martirosyan', status: 'onsite' },\n    { name: 'Armen Harutyunyan', status: 'sick' },\n    { name: 'Karen Avanesyan', status: 'vacation' },\n  ];\n\n  items: Item[] = [\n    { description: 'Marinated Anchovies Fresh 2.2#', status: 'none', ordered: true },\n    { description: 'Octopus Spanish 6-8 Whole Raw Frozen', status: 'none', ordered: true },\n    { description: 'Clam Whole Cooked Frozen', status: 'none', ordered: true },\n    { description: 'PRODUCE KAIWARE (RADISH-SPROUTS)', status: 'none', ordered: true },\n    { description: 'PRODUCE OHBA (PERILLA-LEAVES)', status: 'none', ordered: true },\n    { description: 'Cold-Smoked Salmon Fillet Sliced With-Skin Deluxe *NOIR*', status: 'none', ordered: false },\n    { description: 'ALBACORE SUSHI LOIN FROZEN', status: 'low', ordered: false },\n    { description: 'LOBSTER MEAT CK (CLAW / KNUCKLE) FROZEN', status: 'low', ordered: false },\n    { description: 'OYSTER FAT BASTARD LIVE', status: 'low', ordered: false },\n    { description: 'Salmon Atlantic Fillet Fresh 2-3 E-Trim Skin-Off 10lb', status: 'low', ordered: false },\n  ];\n\n  constructor(private router: Router) {}\n\n  ngOnInit(): void {\n    this.sortEmployees();\n    this.sortItems();\n  }\n\n  sortEmployees(): void {\n    this.employees.sort((a, b) => {\n      const statusOrder = { sick: 0, vacation: 1, onsite: 2 };\n      return statusOrder[a.status] - statusOrder[b.status];\n    });\n  }\n\n  sortItems(): void {\n    this.items.sort((a, b) => {\n      const statusOrder = { none: 0, low: 1 };\n      return statusOrder[a.status] - statusOrder[b.status];\n    });\n  }\n\n  getStatusIcon(status: string): string {\n    switch (status) {\n      case 'sick':\n      case 'vacation':\n      case 'onsite':\n      case 'low':\n      case 'none':\n        return 'circle';\n      default:\n        return '';\n    }\n  }\n\n  getStatusColor(status: string): string {\n    switch (status) {\n      case 'sick':\n        return 'red';\n      case 'vacation':\n      case 'low':\n        return 'orange';\n      case 'onsite':\n      case 'ordered':\n        return 'green';\n      case 'none':\n        return 'red';\n      default:\n        return '';\n    }\n  }\n\n  navigateTo(page: string): void {\n    this.router.navigate([`/${page}`]);\n  }\n}\n","<div class=\"container\">\n    <div class=\"header-container\">\n        <h1 class=\"date\">{{ today | date:'fullDate' }}</h1>\n    </div>\n\n    <div class=\"kpi-container\">\n        <div class=\"kpi\">\n            <h2>Online Orders</h2>\n            <p>42</p>\n        </div>\n        <div class=\"kpi\">\n            <h2>Deliveries</h2>\n            <p>12/20</p>\n        </div>\n        <div class=\"kpi\">\n            <h2>Deliveries Ahead of Schedule</h2>\n            <p>67%</p>\n        </div>\n    </div>\n\n    <div class=\"grid-container\">\n        <div class=\"grid\">\n            <h2>Items</h2>\n            <table class=\"item-grid\">\n                <thead>\n                    <tr>\n                        <th>Description</th>\n                        <th>Status</th>\n                        <th>Ordered</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let item of items\">\n                        <td>{{ item.description }}</td>\n                        <td class=\"status-cell\">\n                            <mat-icon class=\"status-icon\" [ngStyle]=\"{'color': getStatusColor(item.status)}\">{{ getStatusIcon(item.status) }}</mat-icon>\n                            {{ item.status | titlecase }}\n                        </td>\n                        <td class=\"ordered-cell\">\n                            <ng-container *ngIf=\"item.ordered\">\n                                <mat-icon class=\"status-icon\" [ngStyle]=\"{'color': getStatusColor('ordered')}\">circle</mat-icon>\n                                Ordered\n                            </ng-container>\n                            <ng-container *ngIf=\"!item.ordered\">\n                                <!-- Empty cell content for unordered items -->\n                                &nbsp;\n                            </ng-container>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n\n        <div class=\"grid\">\n            <h2>Employees</h2>\n            <table class=\"employee-grid\">\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Status</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let employee of employees\">\n                        <td>{{ employee.name }}</td>\n                        <td class=\"status-cell\">\n                            <mat-icon class=\"status-icon\" [ngStyle]=\"{'color': getStatusColor(employee.status)}\">{{ getStatusIcon(employee.status) }}</mat-icon>\n                            {{ employee.status | titlecase }}\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n","import { ChangeDetectionStrategy, Component, Input, TemplateRef } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\n\n@Component({\n  standalone: true,\n  selector: 'app-image-thumbnail',\n  templateUrl: './image-thumbnail.component.html',\n  styleUrl: './image-thumbnail.component.css',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ImageThumbnailComponent {\n  @Input() imageUrl: string = '';\n  @Input() title: string | null = ' ';\n\n  modalRef!: BsModalRef;\n\n  constructor(private modalService: BsModalService) {}\n\n  openModal(template: string | TemplateRef<unknown>) {\n    this.modalRef = this.modalService.show(template, Object.assign({}, { class: 'modal-lg' }));\n  }\n}\n","<!-- eslint-disable @angular-eslint/template/click-events-have-key-events -->\n<!-- eslint-disable @angular-eslint/template/interactive-supports-focus -->\n<div (click)=\"openModal(imageModal)\">\n    <img [src]=\"imageUrl\" alt=\"Image Thumbnail\" title=\"Click to enlarge\" class=\"thumbnail\" (keyup)=\"modalRef.hide()\">\n</div>\n\n<ng-template #imageModal>\n    <div class=\" modal-header\">\n        <h4 class=\"modal-title\">{{title}}</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body text-center\">\n        <img [src]=\"imageUrl\" alt=\"Full Image\" class=\"full-image\" (click)=\"modalRef.hide()\" (keyup)=\"modalRef.hide()\">\n    </div>\n</ng-template>","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, RouterModule } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    RouterModule, // Added RouterModule here\n  ],\n})\nexport class LoginComponent {\n  loginForm: FormGroup;\n  loading = false;\n  errorMessage: string | null = null;\n\n  private loginApiUrl = `${environment.apiUrl}/public/auth/login`;\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private authService: AuthService\n  ) {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  onLogin() {\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    this.errorMessage = null;\n    const { username, password } = this.loginForm.value;\n\n    this.http.post<{ token: string }>(this.loginApiUrl, { username, password }).subscribe({\n      next: (loginResponse) => {\n        this.authService.saveToken(loginResponse.token);\n        console.log('Login successful, token saved:', loginResponse.token);\n        this.router.navigate(['/products']); // Navigate to /products on success\n      },\n      error: (loginError) => {\n        this.loading = false;\n        this.errorMessage = 'Login failed. Please check your username and password.';\n        console.error('Login error:', loginError);\n      }\n    });\n  }\n}\n","<div class=\"container\">\n    <div class=\"logo-container\">\n        <a [routerLink]=\"['/home']\">\n            <img src=\"assets/logo.png\" alt=\"Company Logo\" class=\"logo\">\n        </a>\n    </div>\n    \n    <div class=\"login-container\">\n        <h1>Login</h1>\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin()\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Username</mat-label>\n                <input matInput \n                       type=\"text\" \n                       formControlName=\"username\" \n                       placeholder=\"Enter your username\" \n                       autocomplete=\"username\">\n            </mat-form-field>\n            \n            <mat-form-field appearance=\"fill\">\n                <mat-label>Password</mat-label>\n                <input matInput \n                       type=\"password\" \n                       formControlName=\"password\" \n                       placeholder=\"Enter your password\" \n                       autocomplete=\"current-password\">\n            </mat-form-field>\n            \n            <button mat-raised-button \n                    color=\"primary\" \n                    type=\"submit\" \n                    [disabled]=\"loading\">\n                <span *ngIf=\"!loading\">Login</span>\n                <span *ngIf=\"loading\">Logging in...</span>\n            </button>\n        </form>\n        \n        <div *ngIf=\"errorMessage\" class=\"error-message\">\n            {{ errorMessage }}\n        </div>\n    </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { Component, Input, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-logo',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './logo.component.html',\n  styleUrls: ['./logo.component.css'],\n})\nexport class LogoComponent implements OnChanges {\n  @Input() companyId!: number;\n\n  imageSrc = 'assets/fogriver.png';\n  imageBackgroundColor = '#000000';\n\n  ngOnChanges(): void {\n    if (this.companyId === 14) {\n      this.imageSrc = 'assets/fogriver.png';\n      this.imageBackgroundColor = '#000000'; // Black background\n    } else {\n      this.imageSrc = 'assets/logo.png';\n      this.imageBackgroundColor = 'rgba(0, 16, 46, 1)'; // Dark blue background\n    }\n  }\n}\n","<div *ngIf=\"companyId\" class=\"image-container\" [ngStyle]=\"{'background-color': imageBackgroundColor}\">\n    <img [src]=\"imageSrc\" alt=\"Company Logo\">\n</div>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n    selector: 'app-logout',\n    templateUrl: './logout.component.html',\n    styleUrls: ['./logout.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone: true,\n})\nexport class LogoutComponent {}\n","<br /><br /><br />\n\n<h1 style=\"padding-left: 200px;\">Logout page</h1>\n\n<br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Location, CommonModule } from '@angular/common';\nimport { LogoComponent } from '../logo/logo.component';\nimport { OrderConfirmation } from 'src/app/models/order-confirmation.model';\n\n@Component({\n  standalone: true,\n  selector: 'app-order-confirmation',\n  templateUrl: './order-confirmation.component.html',\n  styleUrls: ['./order-confirmation.component.css'],\n  imports: [CommonModule, LogoComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationComponent implements OnInit {\n  orderData!: OrderConfirmation;\n  companyId!: number;\n\n  constructor(private router: Router, private location: Location) {}\n\n  ngOnInit(): void {\n    this.orderData = history.state['order']; // Access the passed data here'\n    this.companyId = history.state['companyId'];\n  }\n\n  goBack(): void {\n    this.router.navigate([`/customer/${this.orderData.customerId}/order-form`]);\n  }\n}\n","<div class=\"container\">\n \n    <app-logo [companyId]=\"companyId\"></app-logo>\n  \n  <h2>Hello {{ orderData.customerName }},</h2>\n  <p>Thank you for your order. Here are the details of your order:</p>\n  <br>\n  <table class=\"order-grid\" id=\"order-grid\">\n    <thead>\n      <tr>\n        <th>Description</th>\n        <th>Unit Type</th>\n        <th>Pack Size</th>\n        <th>Price</th>\n        <th>Qty</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let product of orderData.profiles\">\n        <td>{{ product.profileDescription }}</td>\n        <td>{{ product.unitType }}</td>\n        <td>{{ product.packSize }}</td>\n        <td class=\"price\">{{ product.salesPrice | number:'1.2-2' }}</td>\n        <td>{{ product.quantity }}</td>\n      </tr>\n    </tbody>\n  </table>\n\n  <div>\n    <div class=\"total\"><strong>Total: </strong>\n      <span id=\"total-amount\">{{ orderData.totalPrice| currency:'USD':true }}</span>\n    </div>\n  </div>\n\n  <div>\n    <p>Delivery date: {{orderData.deliveryDate | date: 'MM/dd/yyyy'}}</p>\n  </div>\n  <div *ngIf=\"orderData.shipToId\">\n    <p>Delivery location: {{orderData.shipToName}}</p>\n  </div>\n\n\n  <p>Thank you,<br>Your Sales Team</p>\n  <button class=\"button\" (click)=\"goBack()\">Back</button>\n</div>\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { LogoComponent } from '../logo/logo.component';\nimport { OrderConfirmation } from 'src/app/models/order-confirmation.model';\n\n@Component({\n  standalone: true,\n  selector: 'app-order-exists',\n  templateUrl: './order-exists.component.html',\n  styleUrls: ['./order-exists.component.css'],\n  imports: [CommonModule, LogoComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderExistsComponent implements OnInit {\n  orderData!: OrderConfirmation;\n  companyId!: number;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.orderData = history.state['order']; // Access the passed data here\n    this.companyId = history.state['companyId'];\n  }\n\n  goBack(): void {\n    window.history.back();\n  }\n}\n","<div class=\"container\">\n  <app-logo [companyId]=\"companyId\"></app-logo>\n\n  <h2>Existing Order</h2>\n  <div class=\"error-message\" style=\"color: red;\">\n    We already have an order for you placed on this delivery date. If you would like it changed please contact your sales rep.\n  </div>\n  <br>\n  <table class=\"order-grid\" id=\"order-grid\">\n    <thead>\n      <tr>\n        <th>Product Description</th>\n        <th>Unit Type</th>\n        <th>Pack Size</th>\n        <th>Price</th>\n        <th>Qty</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let profile of orderData.profiles\">\n        <td>{{ profile.profileDescription }}</td>\n        <td>{{ profile.unitType }}</td>\n        <td>{{ profile.packSize }}</td>\n        <td class=\"price\">{{ profile.salesPrice| currency:'USD':true }}</td>\n        <td>{{ profile.quantity }}</td>\n      </tr>\n    </tbody>\n  </table>\n\n  <div>\n    <div class=\"total\"><strong>Total: </strong>\n      <span id=\"total-amount\">{{ orderData.totalPrice| currency:'USD':true }}</span>\n    </div>\n  </div>\n\n  <div>\n    <p>Sales rep: {{orderData.salesRepName}}</p>\n  </div>\n  <div>\n    <p>Delivery date: {{orderData.deliveryDate | date: 'MM/dd/yyyy'}}</p>\n  </div>\n  <div *ngIf=\"orderData.shipToId\">\n    <p>Delivery location: {{orderData.shipToName}}</p>\n  </div>\n\n\n\n  <button class=\"button\" (click)=\"goBack()\">Back</button>\n</div>","import { CommonModule } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormGroup, ReactiveFormsModule, ValidationErrors, Validators } from '@angular/forms';\nimport { environment } from 'src/environments/environment';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LogoComponent } from '../logo/logo.component';\nimport { Profile } from 'src/app/models/profile-model';\nimport { Order } from 'src/app/models/order.model';\nimport { OrderRequest } from 'src/app/models/order-request.model';\nimport { ProfileRequest } from 'src/app/models/profile-request.model';\nimport { OrderFormService } from 'src/app/services/order-form.service';\n\nimport { toZonedTime, fromZonedTime } from 'date-fns-tz';\nimport { addMonths, setHours, setMinutes, setSeconds, isAfter, isBefore } from 'date-fns';\n\n@Component({\n  standalone: true,\n  selector: 'app-order-form',\n  templateUrl: './order-form.component.html',\n  styleUrls: ['./order-form.component.css'],\n  imports: [CommonModule, ReactiveFormsModule, LogoComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderFormComponent implements OnInit {\n  private apiUrl = environment.apiUrl;\n  order!: Order;\n  hasSpecials = false;\n  orderForm!: FormGroup;\n  submitted: boolean = false;\n  customerId!: number;\n\n  constructor(\n    private http: HttpClient,\n    private fb: FormBuilder,\n    private router: Router,\n    private snackBarService: SnackbarService,\n    private orderService: OrderFormService,\n    private route: ActivatedRoute,\n    private cdr: ChangeDetectorRef,\n  ) {}\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params) => {\n      const id = params.get('id');\n      this.customerId = id ? +id : NaN;\n      this.loadOrderData(this.customerId);\n    });\n  }\n\n  loadOrderData(customerId: number): void {\n    this.orderService.getOrderData(customerId).subscribe({\n      next: (order: Order) => {\n        order.profiles.sort((a, b) => a.profileDescription.localeCompare(b.profileDescription));\n        this.order = order;\n        this.hasSpecials = this.order.profiles.some((profile) => profile.isSpecial);\n        const shipToValidators = order.shipTos?.length ? [Validators.required] : [];\n        \n        this.orderForm = this.fb.group({\n          customerId: [order.customerId],\n          deliveryDate: ['', [Validators.required, this.dateAfterTomorrowValidator, this.dateWithinThreeMonthsValidator, this.dateNotOnSundayValidator]],\n          shipToId: ['', shipToValidators],\n          customerPo: [''],\n          totalPrice: [0],\n          profiles: this.fb.array(\n            this.order.profiles.map((profile) => this.createProfileGroup(profile)),\n            [this.atLeastOneQuantityValidator],\n          ),\n        });\n\n        this.cdr.markForCheck();\n      },\n    });\n  }\n\n  get formControls() {\n    return this.orderForm.controls;\n  }\n\n  get profileControls(): FormArray {\n    return this.orderForm.get('profiles') as FormArray;\n  }\n\n  get totalPrice(): number {\n    let totalPrice = 0;\n    for (let i = 0; i < this.order.profiles.length; i++) {\n      const quantity = this.profileControls.at(i).get('quantity')?.value || 0;\n      const packSize = this.order.profiles[i].packSize || 0;\n      const price = this.order.profiles[i].salesPrice || 0;\n      totalPrice += quantity * packSize * price;\n    }\n    return totalPrice;\n  }\n\n  getRowTotalPrice(index: number): number {\n    const quantity = this.profileControls.at(index).get('quantity')?.value || 0;\n    const packSize = this.order.profiles[index].packSize || 0;\n    const price = this.order.profiles[index].salesPrice || 0;\n    return quantity * packSize * price;\n  }\n\n  createProfileGroup(profile: Profile): FormGroup {\n    return this.fb.group({\n      profileDid: [profile.id],\n      quantity: ['', Validators.min(1)],\n    });\n  }\n\n  onSubmit() {\n    this.snackBarService.showSnackBar('Submitting Order...');\n  \n    if (this.orderForm.valid) {\n      console.log('Form Submitted', this.orderForm.value);\n  \n      const order: OrderRequest = this.orderForm.value;\n  \n      // Remove profiles with a quantity of 0 and set total price\n      order.profiles = order.profiles.filter((profile: ProfileRequest) => profile.quantity > 0);\n      order.totalPrice = this.totalPrice;\n  \n      // Set shipToId to an empty string if it's not set\n      if (!order.shipToId) {\n        order.shipToId = \"\";  // Ensures \"\" is submitted instead of 0 or null\n      }\n  \n      this.orderService.placeOrder(this.customerId, order).subscribe({\n        next: (orderConfirmation) => {\n          console.log('Order submitted successfully', orderConfirmation);\n          this.router.navigate(['/customer', this.customerId, 'order-confirmation'], {\n            state: { order: orderConfirmation, companyId: this.order.companyId },\n          });\n          this.snackBarService.showSnackBar('Order submitted successfully');\n        },\n        error: (error) => {\n          const errorCode = error.status;\n          const errorMessage =\n            errorCode == 409 ? 'An order already exists for that day' : 'Error submitting order';\n          if (errorCode == 409) {\n            this.router.navigate(['/customer', this.customerId, 'order-exists'], {\n              state: { order: error.error, companyId: this.order.companyId },\n            });\n          }\n          this.snackBarService.showSnackBar(errorMessage);\n  \n          console.error('Error submitting order', error);\n        },\n      });\n  \n      this.submitted = true;\n    } else {\n      this.orderForm.markAllAsTouched();\n    }\n  }\n  \n  \n  \n  isQuantityEntered(index: number): boolean {\n    const quantity = this.profileControls.at(index).get('quantity')?.value;\n    return typeof quantity === 'number' && quantity > 0;\n  }\n\n  dateAfterTomorrowValidator(control: AbstractControl): ValidationErrors | null {\n    // Your validator logic here\n    return null;\n  }\n\n  atLeastOneQuantityValidator(control: AbstractControl): ValidationErrors | null {\n    const formArray = control as FormArray;\n    const hasAtLeastOneQuantity = formArray.controls.some((group) => group.get('quantity')?.value > 0);\n    return hasAtLeastOneQuantity ? null : { atLeastOneQuantity: true };\n  }\n\n  dateWithinThreeMonthsValidator(control: AbstractControl): ValidationErrors | null {\n    // Your validator logic here\n    return null;\n  }\n\n  dateNotOnSundayValidator(control: AbstractControl): ValidationErrors | null {\n    const dateValue = new Date(control.value);\n    return dateValue.getDay() !== 0 ? null : { dateNotOnSunday: true };\n  }\n}\n","<form *ngIf=\"order\" [formGroup]=\"orderForm\" (ngSubmit)=\"onSubmit()\" class=\"order-form\">\n    <div class=\"container\">\n        <app-logo [companyId]=\"order.companyId\"></app-logo>\n        <h2 class=\"page-title\">Order Form</h2>\n\n        <div *ngIf=\"order.customerName && order.salesRepName\" class=\"customer-sales-info\">\n            <p><strong>Customer:</strong> <br>\n                {{ order.customerName }}</p>\n            <div class=\"sales-rep-info\">\n                <strong>Sales Rep:</strong> <br>\n                {{ order.salesRepName }}\n                <br><a [href]=\"'tel:' + order.salesRepPhone\">{{ order.salesRepPhone }}</a>\n            </div>\n        </div>\n\n        <div *ngIf=\"order.shipTos\" class=\"shipto-dropdown\">\n            <label for=\"ship-to\"><strong>Ship to:</strong></label>\n            <select id=\"ship-to\" formControlName=\"shipToId\" class=\"input-select\">\n                <option *ngFor=\"let shipTo of order.shipTos\" [value]=\"shipTo.id\">{{ shipTo.shipToName }}</option>\n            </select>\n            <div *ngIf=\"(orderForm.get('shipToId')?.touched || orderForm.get('shipToId')?.dirty) && orderForm.get('shipToId')?.errors?.['required']\" class=\"error\">\n                Ship to is required.\n            </div>\n        </div>\n\n        <div *ngIf=\"hasSpecials\">\n            <h3 class=\"section-title\">Specials</h3>\n            <div formArrayName=\"profiles\" class=\"profiles\">\n                <table class=\"table\">\n                    <thead>\n                        <tr>\n                            <th>Description</th>\n                            <th>Qty</th>\n                            <th>Unit Type</th>\n                            <th>Pack Size</th>\n                            <th>Price</th>\n                            <th>Total</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <ng-container *ngFor=\"let profile of profileControls.controls; let i = index\">\n                            <tr *ngIf=\"order.profiles[i].isSpecial\" [formGroupName]=\"i\" [ngStyle]=\"{'background-color': isQuantityEntered(i) ? 'lightgrey' : 'white'}\">\n                                <input type=\"text\" formControlName=\"profileDid\" class=\"input-text hidden-column\">\n                                <td>{{ order.profiles[i].profileDescription }}</td>\n                                <td><input type=\"number\" formControlName=\"quantity\" class=\"input-number\">\n                                    <div *ngIf=\"profile.get('quantity')?.errors?.['min']\" class=\"error\">The number must be greater than zero.</div>\n                                </td>\n                                <td>{{ order.profiles[i].unitType }}</td>\n                                <td>{{ order.profiles[i].packSize }}</td>\n                                <td>{{ order.profiles[i].salesPrice | currency:'USD':'symbol':'1.2-2'}}</td>\n                                <td>{{ getRowTotalPrice(i) | currency:'USD':'symbol':'1.2-2' }}</td>\n                            </tr>\n                        </ng-container>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n\n        <h3 class=\"section-title\">Products</h3>\n        <div formArrayName=\"profiles\" class=\"profiles\">\n            <table class=\"table\">\n                <thead>\n                    <tr>\n                        <th>Description</th>\n                        <th>Qty</th>\n                        <th>Unit Type</th>\n                        <th>Pack Size</th>\n                        <th>Price</th>\n                        <th>Total</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <ng-container *ngFor=\"let profile of profileControls.controls; let i = index\">\n                        <tr *ngIf=\"!order.profiles[i].isSpecial\" [formGroupName]=\"i\" [ngStyle]=\"{'background-color': isQuantityEntered(i) ? 'lightgrey' : 'white'}\">\n                            <input type=\"text\" formControlName=\"profileDid\" class=\"input-text hidden-column\">\n                            <td>{{ order.profiles[i].profileDescription }}</td>\n                            <td><input type=\"number\" formControlName=\"quantity\" class=\"input-number\">\n                                <div *ngIf=\"profile.get('quantity')?.errors?.['min']\" class=\"error\">The number must be greater than zero.</div>\n                            </td>\n                            <td>{{ order.profiles[i].unitType }}</td>\n                            <td>{{ order.profiles[i].packSize }}</td>\n                            <td>{{ order.profiles[i].salesPrice | currency:'USD':'symbol':'1.2-2'}}</td>\n                            <td>{{ getRowTotalPrice(i) | currency:'USD':'symbol':'1.2-2' }}</td>\n                        </tr>\n                    </ng-container>\n                </tbody>\n            </table>\n            <div *ngIf=\"submitted && orderForm.get('profiles')?.hasError('atLeastOneQuantity')\" class=\"error\">\n                At least one quantity is required\n            </div>\n        </div>\n\n        <div *ngIf=\"profileControls.touched && profileControls.errors?.['atLeastOneQuantity']\" class=\"error\">\n            Enter at least one quantity\n        </div>\n\n        <div class=\"total-price\">\n            <br>Total price: {{totalPrice | currency:'USD':'symbol':'1.2-2'}}\n            <div *ngIf=\"totalPrice > 10000\" class=\"error\">The total has to be less than $10,000</div>\n        </div>\n\n        <div>\n            <label for=\"customer-po\"><strong>Customer PO: </strong></label>\n            <input id=\"customer-po\" formControlName=\"customerPo\" type=\"text\" class=\"customer-po\">\n        </div>\n\n        <div class=\"delivery-date\">\n            <label for=\"delivery-date\"><strong>Delivery Date:</strong></label>\n            <input id=\"delivery-date\" formControlName=\"deliveryDate\" type=\"date\" class=\"input-date\">\n            <div *ngIf=\"formControls['deliveryDate'].touched && formControls['deliveryDate'].errors?.['required']\" class=\"error\">\n                Delivery date is required.\n            </div>\n            <div *ngIf=\"formControls['deliveryDate'].dirty && formControls['deliveryDate'].errors?.['dateAfterTomorrow']\" class=\"error\">\n                Delivery date cannot be in the past or after 2am of today's date.\n            </div>\n            <div *ngIf=\"formControls['deliveryDate'].dirty && formControls['deliveryDate'].errors?.['dateWithinThreeMonths']\" class=\"error\">\n                Delivery date must be within 3 months.\n            </div>\n            <div *ngIf=\"formControls['deliveryDate'].dirty && formControls['deliveryDate'].errors?.['dateNotOnSunday']\" class=\"error\">\n                Delivery date cannot be on Sunday.\n            </div>\n        </div>\n\n        <br><button type=\"submit\" [disabled]=\"!orderForm.valid\" class=\"submit-btn\">Submit</button>\n    </div>\n</form>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, switchMap, tap } from 'rxjs';\nimport { FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { Company } from 'src/app/models/company.model';\nimport { Customer } from 'src/app/models/customer.model';\nimport { SalesRep } from 'src/app/models/sales-rep.model';\nimport { OrderLinksService } from 'src/app/services/order-links.service';\nimport { CommonModule } from '@angular/common';\nimport { LogoComponent } from '../logo/logo.component';\n\n@Component({\n  standalone: true,\n  selector: 'app-order-links',\n  templateUrl: './order-links.component.html',\n  styleUrls: ['./order-links.component.css'],\n  imports: [CommonModule, ReactiveFormsModule, RouterModule, LogoComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderLinksComponent implements OnInit {\n  form!: FormGroup;\n  companies$!: Observable<Company[]>;\n  salesPersons$!: Observable<SalesRep[]>;\n  customers: Customer[] = [];\n  filteredCustomers: Customer[] = [];\n\n  constructor(\n    private http: HttpClient,\n    private fb: FormBuilder,\n    private cdr: ChangeDetectorRef,\n    private snackbarService: SnackbarService,\n    private orderLinksService: OrderLinksService\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      company: [],\n      salesPerson: [],\n      searchText: '',\n    });\n\n    // Load companies and set default to 'PFF'\n    this.companies$ = this.orderLinksService.getCompanies().pipe(\n      tap((companies) => {\n        const defaultCompany = companies.find((company) => company.name === 'PFF');\n        if (defaultCompany) {\n          this.form.get('company')!.setValue(defaultCompany);\n        }\n      })\n    );\n\n    // Load salespersons based on selected company\n    this.form.get('company')!.valueChanges.pipe(\n      switchMap((company) =>\n        this.orderLinksService.getSalesPersons(company.id).pipe(\n          tap((salesreps) => {\n            salesreps.sort((a, b) => a.name.localeCompare(b.name));\n            this.salesPersons$ = new Observable<SalesRep[]>((observer) => {\n              observer.next(salesreps);\n              observer.complete();\n            });\n            if (salesreps.length > 0) {\n              this.form.get('salesPerson')!.setValue(salesreps[0]);\n            }\n          })\n        )\n      )\n    ).subscribe();\n\n    // Load customers based on selected salesperson\n    this.form.get('salesPerson')!.valueChanges.pipe(\n      switchMap((salesrep) => {\n        const company = this.form.get('company')!.value;\n        return this.orderLinksService.getCustomers(company.id, salesrep.name);\n      })\n    ).subscribe({\n      next: (customers) => {\n        this.customers = [...customers];\n        this.customers.sort((a, b) => a.name.localeCompare(b.name));\n        this.filteredCustomers = [...this.customers];\n        this.cdr.markForCheck();\n      }\n    });\n\n    // Apply search filter on customer names\n    this.form.get('searchText')!.valueChanges.subscribe((searchText: string) => {\n      this.filteredCustomers = this.customers.filter((customer) =>\n        customer.name.toLowerCase().includes(searchText.toLowerCase())\n      );\n    });\n  }\n\n  // Generate Order Link\n  generateLink(customerId: number): string {\n    const baseUrl = window.location.href.replace('/order-links', '');\n    return `${baseUrl}/customer/${customerId}/order-form`;\n  }\n\n  // Copy Order Link to Clipboard\n  copyLink(customerId: number): void {\n    const link = this.generateLink(customerId);\n    navigator.clipboard\n      .writeText(link)\n      .then(() => {\n        this.snackbarService.showSnackBar('Link copied to clipboard!');\n      })\n      .catch((err) => {\n        console.error('Failed to copy link: ', err);\n      });\n  }\n}\n","<form [formGroup]=\"form\">\n  <div class=\"container\">\n    <!-- Logo Component with Navigation -->\n    <a [routerLink]=\"['/home']\">\n      <app-logo [companyId]=\"form.get('company')?.value?.id\"></app-logo>\n    </a>\n\n    <h2 class=\"underlined\">Customers</h2>\n\n    <!-- Filters Section -->\n    <div class=\"filters\">\n      <!-- Company Filter -->\n      <div class=\"filter-group\">\n        <label for=\"company-filter\" class=\"filter-label\">Company:</label>\n        <select id=\"company-filter\" formControlName=\"company\">\n          <option *ngFor=\"let company of companies$ | async\" [ngValue]=\"company\">{{ company.name }}</option>\n        </select>\n      </div>\n\n      <!-- Sales Rep Filter -->\n      <div class=\"filter-group\">\n        <label for=\"salesname-filter\" class=\"filter-label\">Sales Rep:</label>\n        <select id=\"salesname-filter\" formControlName=\"salesPerson\">\n          <option *ngFor=\"let salesperson of salesPersons$ | async\" [ngValue]=\"salesperson\">{{ salesperson.name }}</option>\n        </select>\n      </div>\n\n      <!-- Customer Search Filter -->\n      <div class=\"filter-group\">\n        <label for=\"customer-search\" class=\"filter-label\">Customer:</label>\n        <input\n          type=\"text\"\n          id=\"customer-search\"\n          placeholder=\"Search Customers\"\n          formControlName=\"searchText\"\n        />\n      </div>\n    </div>\n\n    <!-- Order Grid Table -->\n    <table class=\"order-grid\">\n      <thead>\n        <tr>\n          <th>Customer Name</th>\n          <th>Order Form</th>\n          <th>Copy Link</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let customer of filteredCustomers;\">\n          <td>{{ customer.name }}</td>\n          <td>\n            <a [routerLink]=\"['/customer', customer.id, 'order-form']\" target=\"_blank\">Order Form</a>\n          </td>\n          <td>\n            <a href=\"javascript:void(0)\" (click)=\"copyLink(customer.id)\" (keyup)=\"copyLink(customer.id)\">Copy Link</a>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</form>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, switchMap, tap } from 'rxjs';\nimport { FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { Company } from 'src/app/models/company.model';\nimport { Orders } from 'src/app/models/orders.model';\nimport { SalesRep } from 'src/app/models/sales-rep.model';\nimport { OrderLinksService } from 'src/app/services/order-links.service';\nimport { CommonModule } from '@angular/common';\nimport { LogoComponent } from '../logo/logo.component';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  standalone: true,\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css'],\n  imports: [CommonModule, ReactiveFormsModule, RouterModule, LogoComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrdersComponent implements OnInit {\n  form!: FormGroup;\n  companies$!: Observable<Company[]>;\n  salesPersons$!: Observable<SalesRep[]>;\n  orders: Orders[] = [];\n  filteredOrders: Orders[] = [];\n\n  constructor(\n    private http: HttpClient,\n    private fb: FormBuilder,\n    private cdr: ChangeDetectorRef,\n    private snackbarService: SnackbarService,\n    private orderLinksService: OrderLinksService,\n    private authService: AuthService // Inject AuthService to get the token\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      company: [],\n      salesPerson: [],\n      customerName: [''],\n    });\n\n    this.loadCompaniesAndSetDefaults();\n    this.setupSalesPersonListener();\n    this.setupOrdersListener();\n    this.setupCustomerNameFilterListener();\n  }\n\n  private loadCompaniesAndSetDefaults(): void {\n    this.companies$ = this.orderLinksService.getCompanies().pipe(\n      tap((companies) => {\n        const defaultCompany = companies.find((company) => company.id === 3);\n        if (defaultCompany) {\n          this.form.get('company')!.setValue(defaultCompany);\n        }\n      })\n    );\n  }\n\n  private setupSalesPersonListener(): void {\n    this.form.get('company')!.valueChanges.pipe(\n      switchMap((company) =>\n        this.orderLinksService.getSalesPersons(company.id).pipe(\n          tap((salesreps) => {\n            salesreps.sort((a, b) => a.name.localeCompare(b.name));\n            this.salesPersons$ = new Observable<SalesRep[]>((observer) => {\n              observer.next(salesreps);\n              observer.complete();\n            });\n\n            const defaultSalesRep = salesreps.find((rep) => rep.name === 'Marcelo');\n            if (defaultSalesRep) {\n              this.form.get('salesPerson')!.setValue(defaultSalesRep);\n            } else if (salesreps.length > 0) {\n              this.form.get('salesPerson')!.setValue(salesreps[0]);\n            }\n          })\n        )\n      )\n    ).subscribe();\n  }\n\n  private setupOrdersListener(): void {\n    this.form.get('salesPerson')!.valueChanges.pipe(\n      switchMap((salesrep) => {\n        const company = this.form.get('company')!.value;\n        const apiUrl = `https://uat-pffc.onrender.com/api/companies/${company.id}/sales-reps/${salesrep.name}/orders?pastHours=72`;\n\n        const token = this.authService.getToken();\n        const headers = new HttpHeaders({\n          Authorization: `Bearer ${token}`\n        });\n\n        return this.http.get<Orders[]>(apiUrl, { headers });\n      }),\n      tap((orders) => {\n        this.orders = orders;\n        this.applyFilters();\n      })\n    ).subscribe({\n      error: (error) => {\n        console.error('An error occurred:', error);\n        this.snackbarService.showSnackBar('Failed to load orders.');\n      }\n    });\n  }\n\n  private setupCustomerNameFilterListener(): void {\n    this.form.get('customerName')!.valueChanges.subscribe(() => this.applyFilters());\n  }\n\n  private applyFilters(): void {\n    const customerName = this.form.get('customerName')!.value?.toLowerCase() || '';\n    this.filteredOrders = this.orders.filter(order =>\n      order.customerName.toLowerCase().includes(customerName)\n    );\n    this.cdr.markForCheck();\n  }\n}\n","<form [formGroup]=\"form\">\n  <div class=\"container\">\n    <!-- Logo Component with Navigation -->\n    <a [routerLink]=\"['/home']\">\n      <app-logo [companyId]=\"form.get('company')?.value?.id\"></app-logo>\n    </a>\n\n    <h2 class=\"page-title\">Orders</h2>\n\n    <!-- Filters Section -->\n    <div class=\"filters\">\n      <!-- Company Filter -->\n      <div class=\"filter-group\">\n        <label for=\"company-filter\" class=\"filter-label\">Company:</label>\n        <select id=\"company-filter\" formControlName=\"company\">\n          <option *ngFor=\"let company of companies$ | async\" [ngValue]=\"company\">{{ company.name }}</option>\n        </select>\n      </div>\n\n      <!-- Sales Rep Filter -->\n      <div class=\"filter-group\">\n        <label for=\"salesname-filter\" class=\"filter-label\">Sales Rep:</label>\n        <select id=\"salesname-filter\" formControlName=\"salesPerson\">\n          <option *ngFor=\"let salesperson of salesPersons$ | async\" [ngValue]=\"salesperson\">{{ salesperson.name }}</option>\n        </select>\n      </div>\n\n      <!-- Customer Name Filter -->\n      <div class=\"filter-group\">\n        <label for=\"customer-filter\" class=\"filter-label\">Customer Name:</label>\n        <input\n          id=\"customer-filter\"\n          type=\"text\"\n          formControlName=\"customerName\"\n          placeholder=\"Search Customer Name\"\n        />\n      </div>\n    </div>\n\n    <!-- Orders Table -->\n    <table class=\"order-grid\">\n      <thead>\n        <tr>\n          <th>Order ID</th>\n          <th>Delivery Date</th>\n          <th>Customer Name</th>\n          <th>Ship To Name</th>\n          <th>Total Price</th>\n          <th *ngFor=\"let profile of filteredOrders[0]?.profiles\">Profile Description</th>\n          <th *ngFor=\"let profile of filteredOrders[0]?.profiles\">Unit Type</th>\n          <th *ngFor=\"let profile of filteredOrders[0]?.profiles\">Pack Size</th>\n          <th *ngFor=\"let profile of filteredOrders[0]?.profiles\">Quantity</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let item of filteredOrders\">\n          <td>{{ item.id }}</td>\n          <td>{{ item.deliveryDate | date }}</td>\n          <td>{{ item.customerName }}</td>\n          <td>{{ item.shipToName }}</td>\n          <td>{{ item.totalPrice | currency }}</td>\n          <td *ngFor=\"let profile of item.profiles\">{{ profile.profileDescription }}</td>\n          <td *ngFor=\"let profile of item.profiles\">{{ profile.unitType }}</td>\n          <td *ngFor=\"let profile of item.profiles\">{{ profile.packSize }}</td>\n          <td *ngFor=\"let profile of item.profiles\">{{ profile.quantity }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</form>\n","import { Component } from '@angular/core';\nimport { PreOrders } from '../../models/preorders.model';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  standalone: true,\n  selector: 'app-preorders',\n  templateUrl: './preorders.component.html',\n  styleUrls: ['./preorders.component.css'],\n  imports: [FormsModule, CommonModule, RouterModule] // Include RouterModule here\n})\nexport class PreOrdersComponent {\n  preOrders: PreOrders[] = [\n    {\n      dispatchDate: '11/5/2024 0:00',\n      customerId: 5132,\n      customerName: 'THE GRILL - BEVERLY HILLS',\n      sodId: 2228470,\n      descriptionMemo: 'CHICKEN SINGLE BREAST SKIN-LESS BONELESS FRESH 24ea 5oz',\n      entryTime: '11/4/2024 10:21',\n      preOrderHours: 15,\n      orderedUnits: 4,\n      unitType: 1,\n      unitSize: 7.5,\n      webAppPreOrderQ_VendorID: 1687,\n      vendor_VendorID: 1687,\n      vendorName: 'COMMODITY FOOD SALES',\n      price: 2.5\n    },\n    {\n      dispatchDate: '11/6/2024 0:00',\n      customerId: 5113,\n      customerName: 'SEVEN LAKES COUNTRY CLUB - DESERT',\n      sodId: 2229987,\n      descriptionMemo: 'CHICKEN SINGLE BREAST SKIN-LESS BONELESS FRESH 24ea 8oz',\n      entryTime: '11/5/2024 12:51',\n      preOrderHours: 15,\n      orderedUnits: 5,\n      unitType: 1,\n      unitSize: 12,\n      webAppPreOrderQ_VendorID: 1687,\n      vendor_VendorID: 1687,\n      vendorName: 'COMMODITY FOOD SALES',\n      price: 4.83\n    },\n    {\n      dispatchDate: '11/6/2024 0:00',\n      customerId: 859,\n      customerName: 'SI BON',\n      sodId: 2228782,\n      descriptionMemo: 'CHICKEN THIGH MEAT SKIN-LESS BONELESS FRESH 40LB',\n      entryTime: '11/4/2024 17:06',\n      preOrderHours: 15,\n      orderedUnits: 2,\n      unitType: 1,\n      unitSize: 40,\n      webAppPreOrderQ_VendorID: 1687,\n      vendor_VendorID: 1687,\n      vendorName: 'COMMODITY FOOD SALES',\n      price: 1.80\n    },\n    {\n      dispatchDate: '11/6/2024 0:00',\n      customerId: 5256,\n      customerName: 'THE HIVE - MAR VISTA',\n      sodId: 2229828,\n      descriptionMemo: 'CHICKEN THIGH MEAT SKIN-LESS BONELESS FRESH 40LB',\n      entryTime: '11/5/2024 10:47',\n      preOrderHours: 15,\n      orderedUnits: 1,\n      unitType: 1,\n      unitSize: 40,\n      webAppPreOrderQ_VendorID: 1687,\n      vendor_VendorID: 1687,\n      vendorName: 'COMMODITY FOOD SALES',\n      price: 2.00\n    },\n    {\n      dispatchDate: '11/6/2024 0:00',\n      customerId: 5319,\n      customerName: 'THE HIVE - MANHATTAN BEACH',\n      sodId: 2229838,\n      descriptionMemo: 'CHICKEN THIGH MEAT SKIN-LESS BONELESS FRESH 40LB',\n      entryTime: '11/5/2024 10:49',\n      preOrderHours: 15,\n      orderedUnits: 1,\n      unitType: 1,\n      unitSize: 40,\n      webAppPreOrderQ_VendorID: 1687,\n      vendor_VendorID: 1687,\n      vendorName: 'COMMODITY FOOD SALES',\n      price: 3.50\n    },\n    {\n      dispatchDate: '11/6/2024 0:00',\n      customerId: 5113,\n      customerName: 'SEVEN LAKES COUNTRY CLUB - DESERT',\n      sodId: 2229988,\n      descriptionMemo: 'CHICKEN WHOLE WHITE FRESH 3up (WOGS) SPLIT 22pcs',\n      entryTime: '11/5/2024 12:54',\n      preOrderHours: 15,\n      orderedUnits: 1,\n      unitType: 1,\n      unitSize: 75,\n      webAppPreOrderQ_VendorID: 1687,\n      vendor_VendorID: 1687,\n      vendorName: 'COMMODITY FOOD SALES',\n      price: 1.64\n    },\n    {\n      dispatchDate: '11/6/2024 0:00',\n      customerId: 859,\n      customerName: 'SI BON',\n      sodId: 2228783,\n      descriptionMemo: 'CHICKEN WHOLE WHITE FRESH 2.5 (WOGS) 28pcs',\n      entryTime: '11/4/2024 17:06',\n      preOrderHours: 15,\n      orderedUnits: 1,\n      unitType: 1,\n      unitSize: 75,\n      webAppPreOrderQ_VendorID: 1687,\n      vendor_VendorID: 1687,\n      vendorName: 'COMMODITY FOOD SALES',\n      price: 1.73\n    }\n  ];\n\n  // Properties for filtering and validation\n  filteredPreOrders: PreOrders[] = [];\n  uniqueVendors: string[] = [];\n  selectedVendor: string = '';\n  weights: number[] = Array(this.preOrders.length).fill(null);\n  weightErrors: string[] = [];\n  priceErrors: string[] = [];\n\n  constructor(private snackBar: MatSnackBar) {\n    this.filteredPreOrders = [...this.preOrders];\n    this.getUniqueVendors();\n  }\n\n  getUniqueVendors() {\n    this.uniqueVendors = [...new Set(this.preOrders.map(order => order.vendorName))];\n  }\n\n  filterByVendor() {\n    this.filteredPreOrders = this.selectedVendor\n      ? this.preOrders.filter(order => order.vendorName === this.selectedVendor)\n      : [...this.preOrders];\n  }\n\n  validateWeight(index: number) {\n    const weight = this.weights[index];\n    this.weightErrors[index] = !weight ? 'Please enter a weight.' : isNaN(weight) ? 'Weight must be a valid number.' : '';\n  }\n\n  validatePrice(index: number) {\n    const price = this.preOrders[index].price;\n    this.priceErrors[index] = !price || price <= 0 ? 'Price must be a valid positive number.' : '';\n  }\n\n  submitWeights() {\n    let hasError = false;\n    this.weights.forEach((_, index) => {\n      this.validateWeight(index);\n      this.validatePrice(index);\n      if (this.weightErrors[index] || this.priceErrors[index]) {\n        hasError = true;\n      }\n    });\n\n    if (hasError) {\n      this.snackBar.open('Please fix the errors before submitting.', 'Close', { duration: 3000 });\n    } else {\n      this.snackBar.open('PreOrder saved!', 'Close', { duration: 3000 });\n      console.log('Saved PreOrders:', this.preOrders);\n    }\n  }\n\n  getUnitTypeLabel(unitType: number): string {\n    return ['Unknown', 'Cs', 'Pcs', 'Pck', 'Lbs', 'Side'][unitType] || 'Unknown';\n  }\n}\n","<div class=\"container preorders-container\">\n  <!-- Logo with Navigation to Home -->\n  <a [routerLink]=\"['/home']\">\n    <div class=\"image-container\">\n    <img src=\"assets/logo.png\" alt=\"PFF Logo\" class=\"logo\">\n  </div>\n  </a>\n\n  <h2 class=\"page-title\">PreOrders</h2>\n\n  <!-- Vendor Name Selector/Filter -->\n  <div class=\"filters\">\n    <div class=\"filter-group\">\n      <label for=\"vendorFilter\" class=\"filter-label\">Vendor Name:</label>\n      <select id=\"vendorFilter\" [(ngModel)]=\"selectedVendor\" (change)=\"filterByVendor()\">\n        <option value=\"\">All Vendors</option>\n        <option *ngFor=\"let vendor of uniqueVendors\" [value]=\"vendor\">{{ vendor }}</option>\n      </select>\n    </div>\n  </div>\n\n  <!-- PreOrders Table -->\n  <table class=\"table preorders-table order-grid\">\n    <thead>\n      <tr>\n        <th>Dispatch Date</th>\n        <th class=\"wide-column\">Customer Name</th>\n        <th>SOD ID</th>\n        <th class=\"wide-column\">Description</th>\n        <th>Entry Time</th>\n        <th>Units</th>\n        <th>Unit Type</th>\n        <th>Unit Size</th>\n        <th>Weight</th>\n        <th>Price</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let order of filteredPreOrders; let i = index\">\n        <td>{{ order.dispatchDate }}</td>\n        <td>{{ order.customerName }}</td>\n        <td>{{ order.sodId }}</td>\n        <td>{{ order.descriptionMemo }}</td>\n        <td>{{ order.entryTime }}</td>\n        <td>{{ order.orderedUnits }}</td>\n        <td>{{ getUnitTypeLabel(order.unitType) }}</td>\n        <td>{{ order.unitSize }}</td>\n\n        <!-- Editable Weight column with validation -->\n        <td>\n          <input\n            class=\"input-number\"\n            type=\"number\"\n            [(ngModel)]=\"weights[i]\"\n            placeholder=\"Enter weight\"\n            required\n            (blur)=\"validateWeight(i)\"\n          />\n          <div *ngIf=\"weightErrors[i]\" class=\"error\">\n            {{ weightErrors[i] }}\n          </div>\n        </td>\n\n        <!-- Editable Price column with validation -->\n        <td>\n          <input\n            class=\"input-number\"\n            type=\"number\"\n            [(ngModel)]=\"order.price\"\n            placeholder=\"Enter price\"\n            required\n            (blur)=\"validatePrice(i)\"\n          />\n          <div *ngIf=\"priceErrors[i]\" class=\"error\">\n            {{ priceErrors[i] }}\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n\n  <!-- Submit Button -->\n  <button class=\"submit-btn\" (click)=\"submitWeights()\">Submit</button>\n</div>\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialogModule } from '@angular/material/dialog';\nimport { CommonModule } from '@angular/common';\n\ninterface ProductDetails {\n  compItemId: number;\n  compDescription: string;\n  origin: string;\n  notes?: string;\n  woh?: number;\n  unitType?: number;\n  packSize?: string;\n  packLock?: number;\n  compCost?: number;\n  yield?: number;\n  laborPackCost?: number;\n  buyer?: string;\n  compInstructions?: string;\n  sixtySales?: number;\n  tenSales?: number;\n  preOrderHours?: number;\n}\n\n@Component({\n  standalone: true,\n  selector: 'app-product-details-dialog',\n  templateUrl: './product-details-dialog.component.html',\n  styleUrls: ['./product-details-dialog.component.css'],\n  imports: [CommonModule, MatDialogModule], // Import MatDialogModule here\n})\nexport class ProductDetailsDialogComponent {\n  constructor(\n    public dialogRef: MatDialogRef<ProductDetailsDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: ProductDetails\n  ) {\n    console.log('Product Details Data:', this.data); // Debugging log to verify fields\n  }\n\n  close(): void {\n    this.dialogRef.close();\n  }\n\n  getUnitType(unitType?: number): string {\n    switch (unitType) {\n      case 1: return 'Cs';\n      case 2: return 'Pcs';\n      case 3: return 'Pck';\n      case 4: return 'lbs';\n      case 5: return 'side';\n      default: return 'Unknown';\n    }\n  }\n}\n","<h2>{{ data.compItemId }} - {{ data.compDescription }}</h2>\n<div class=\"special-instructions\">{{ data.compInstructions || 'N/A' }}</div>\n\n<mat-dialog-content>\n  <div class=\"margins\">\n    <div class=\"margin-values\">\n      <div class=\"margin-group\">\n        <div class=\"field\">\n          <span class=\"field-label\">16%</span>\n          <span>{{ ((data.compCost ?? 0) * (data.yield ?? 0) + (data.laborPackCost ?? 0)) / 0.84 | number:'1.2-2' }}</span>\n        </div>\n        <div class=\"field\">\n          <span class=\"field-label\">18%</span>\n          <span>{{ ((data.compCost ?? 0) * (data.yield ?? 0) + (data.laborPackCost ?? 0)) / 0.82 | number:'1.2-2' }}</span>\n        </div>\n        <div class=\"field\">\n          <span class=\"field-label\">20%</span>\n          <span>{{ ((data.compCost ?? 0) * (data.yield ?? 0) + (data.laborPackCost ?? 0)) / 0.80 | number:'1.2-2' }}</span>\n        </div>\n        <div class=\"field\">\n          <span class=\"field-label\">22%</span>\n          <span>{{ ((data.compCost ?? 0) * (data.yield ?? 0) + (data.laborPackCost ?? 0)) / 0.78 | number:'1.2-2' }}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"field-group\">\n    <div class=\"field\">\n      <span class=\"field-label\">Cost</span>\n      <span>{{ (data.compCost ?? 0) * (data.yield ?? 0) | number:'1.2-2' }}</span>\n    </div>\n    <div class=\"field\">\n      <span class=\"field-label\">Yield</span>\n      <span>{{ (data.yield ?? 0) * 100 | number:'1.0-0' }}%</span>\n    </div>\n    <div class=\"field\">\n      <span class=\"field-label\">Labor Pack</span>\n      <span>{{ data.laborPackCost | number:'1.2-2' }}</span>\n    </div>\n    <div class=\"field\">\n      <span class=\"field-label\">Finish</span>\n      <span>{{ ((data.compCost ?? 0) * (data.yield ?? 0) + (data.laborPackCost ?? 0)) | number:'1.2-2' }}</span>\n    </div>\n  </div>\n\n  <div class=\"field-group\">\n    <div class=\"field\">\n      <span class=\"field-label\">Origin</span>\n      <span>{{ data.origin }}</span>\n    </div>\n    <div class=\"field\">\n      <span class=\"field-label\">Notes</span>\n      <span>{{ data.notes || 'N/A' }}</span>\n    </div>\n    <div class=\"field\">\n      <span class=\"field-label\">WOH</span>\n      <span>{{ data.woh }}</span>\n    </div>\n    <div class=\"field\">\n      <span class=\"field-label\">Unit Type</span>\n      <span>{{ getUnitType(data.unitType ?? 0) }}</span>\n    </div>\n  </div>\n\n  <div class=\"field-group\">\n    <div class=\"field\">\n      <span class=\"field-label\">Pack Size</span>\n      <span>{{ data.packSize }}</span>\n    </div>\n    <div class=\"field\">\n      <span class=\"field-label\">Buyer</span>\n      <span>{{ data.buyer }}</span>\n    </div>\n    <div class=\"field\">\n      <span class=\"field-label\">Sixty Sales</span>\n      <span>{{ data.sixtySales }}</span>\n    </div>\n  </div>\n\n  <div class=\"field-group\">\n    <div class=\"field\">\n      <span class=\"field-label\">Ten Sales</span>\n      <span>{{ data.tenSales }}</span>\n    </div>\n    <div class=\"field\">\n      <span class=\"field-label\">Pre-Order Hours</span>\n      <span>{{ data.preOrderHours }}</span>\n    </div>\n  </div>\n</mat-dialog-content>\n","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ProductService } from '../../services/products.service';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { InventoryItem } from 'src/app/models/products.model';\nimport { BehaviorSubject, Subject, Subscription } from 'rxjs';\nimport { InfiniteScrollDirective } from 'ngx-infinite-scroll';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router'; // Import RouterModule for routerLink\nimport { ProductDetailsDialogComponent } from '../product-details-dialog/product-details-dialog.component';\n\n@Component({\n  standalone: true,\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css'],\n  imports: [CommonModule, FormsModule, RouterModule, InfiniteScrollDirective], // Ensure RouterModule and FormsModule are imported\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductsComponent implements OnInit, OnDestroy {\n  page = 0;\n  size = 50;\n  searchTerm = '';\n  showRelevantItems = false;\n\n  // Filter dropdowns\n  originFilter: string = '';\n  unitTypeFilter: string | number = '';\n  packSizeFilter: string | number = '';\n  buyerFilter: string | number = '';\n\n  // Unique dropdown options\n  uniqueOrigins: string[] = [];\n  uniqueUnitTypes: (string | number)[] = [];\n  uniquePackSizes: (string | number)[] = [];\n  uniqueBuyers: (string | number)[] = [];\n\n  private searchSubject = new Subject<string>();\n  private searchSubscription!: Subscription;\n\n  private inventoryItemsSubject = new BehaviorSubject<InventoryItem[]>([]);\n  inventoryItems$ = this.inventoryItemsSubject.asObservable();\n\n  constructor(private productService: ProductService, private dialog: MatDialog) {}\n\n  ngOnInit(): void {\n    this.loadData();\n\n    this.searchSubscription = this.searchSubject.pipe(\n      distinctUntilChanged(this.trimComparator),\n      debounceTime(200)\n    ).subscribe((searchTerm) => {\n      this.searchTerm = searchTerm;\n      this.page = 0;\n      this.inventoryItemsSubject.next([]);\n      this.loadData();\n    });\n  }\n\n  loadData(): void {\n    console.log('Starting data load for page:', this.page);\n    this.productService.getProducts(this.page, this.size, this.searchTerm).subscribe({\n      next: (products: InventoryItem[]) => {\n        const currentData = this.inventoryItemsSubject.value;\n        const newData = products.filter(\n          (item) => !currentData.some((currentItem) => currentItem.compItemId === item.compItemId)\n        );\n\n        const filteredData = this.showRelevantItems\n          ? newData.filter((item) => item.tenSales && item.tenSales > 0)\n          : newData;\n\n        const fullyFilteredData = filteredData.filter((item) =>\n          (this.originFilter ? item.origin === this.originFilter : true) &&\n          (this.unitTypeFilter ? item.unitType === this.unitTypeFilter : true) &&\n          (this.packSizeFilter ? item.packSize === this.packSizeFilter : true) &&\n          (this.buyerFilter ? item.buyer === this.buyerFilter : true)\n        );\n\n        this.populateUniqueDropdowns(products);\n        this.inventoryItemsSubject.next([...currentData, ...fullyFilteredData]);\n      },\n      error: (err) => console.error('Error fetching products:', err),\n    });\n  }\n\n  onRowClick(item: InventoryItem): void {\n    this.dialog.open(ProductDetailsDialogComponent, {\n      data: item,\n      width: '400px',\n    });\n  }\n\n  toggleRelevantItemsFilter(): void {\n    this.showRelevantItems = !this.showRelevantItems;\n    this.page = 0;\n    this.inventoryItemsSubject.next([]);\n    this.loadData();\n  }\n\n  onFilterChange(): void {\n    this.page = 0;\n    this.inventoryItemsSubject.next([]);\n    this.loadData();\n  }\n\n  onScroll(): void {\n    this.page++;\n    this.loadData();\n  }\n\n  onSearchChange(event: Event): void {\n    const searchTerm = (event.target as HTMLInputElement).value;\n    this.page = 0;\n    this.searchSubject.next(searchTerm);\n  }\n\n  private trimComparator(prev: string, curr: string): boolean {\n    return prev.trim() === curr.trim();\n  }\n\n  ngOnDestroy(): void {\n    if (this.searchSubscription) {\n      this.searchSubscription.unsubscribe();\n    }\n  }\n\n  private populateUniqueDropdowns(products: InventoryItem[]): void {\n    this.uniqueOrigins = [...new Set(products.map((item) => item.origin))].filter(Boolean).sort() as string[];\n    this.uniqueUnitTypes = [...new Set(products.map((item) => this.getUnitType(item.unitType as number)))].filter((v): v is string => v !== 'Unknown').sort();\n    this.uniquePackSizes = [...new Set(products.map((item) => item.packSize))].filter(Boolean).sort() as (string | number)[];\n    this.uniqueBuyers = [...new Set(products.map((item) => item.buyer))].filter(Boolean).sort() as string[];\n  }\n\n  private getUnitType(unitType?: number): string {\n    switch (unitType) {\n      case 1: return 'Cs';\n      case 2: return 'Pcs';\n      case 3: return 'Pck';\n      case 4: return 'lbs';\n      case 5: return 'side';\n      default: return 'Unknown';\n    }\n  }\n}\n","<div class=\"content\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"50\" (scrolled)=\"onScroll()\">\n  <div class=\"container\">\n    <div class=\"image-container\">\n      <!-- Wrap the logo image in a router link to navigate to the 'home' route -->\n      <a [routerLink]=\"['/home']\">\n        <img src=\"assets/logo.png\" alt=\"Company Logo\">\n      </a>\n    </div>\n    \n    <h2 class=\"inventory-title\">Products</h2>\n\n    <!-- Search Bar Section -->\n    <div class=\"search-bar\">\n      <input type=\"text\" placeholder=\"Search Products\" (input)=\"onSearchChange($event)\">\n    </div>\n\n    <!-- Filters Section -->\n    <div class=\"filters\">\n      <!-- Relevant Items Toggle Button -->\n      <button (click)=\"toggleRelevantItemsFilter()\" class=\"relevant-items-btn\">\n        {{ showRelevantItems ? 'Show All Items' : 'Relevant Items' }}\n      </button>\n\n      <!-- Origin Filter Dropdown -->\n      <div class=\"filter-group\">\n        <label for=\"originFilter\">Origin</label>\n        <select id=\"originFilter\" (change)=\"onFilterChange()\" [(ngModel)]=\"originFilter\">\n          <option value=\"\">All Origins</option>\n          <option *ngFor=\"let origin of uniqueOrigins\" [value]=\"origin\">{{ origin }}</option>\n        </select>\n      </div>\n\n      <!-- Unit Type Filter Dropdown -->\n      <div class=\"filter-group\">\n        <label for=\"unitTypeFilter\">Unit Type</label>\n        <select id=\"unitTypeFilter\" (change)=\"onFilterChange()\" [(ngModel)]=\"unitTypeFilter\">\n          <option value=\"\">All Unit Types</option>\n          <option *ngFor=\"let unitType of uniqueUnitTypes\" [value]=\"unitType\">{{ unitType }}</option>\n        </select>\n      </div>\n\n      <!-- Pack Size Filter Dropdown -->\n      <div class=\"filter-group\">\n        <label for=\"packSizeFilter\">Pack Size</label>\n        <select id=\"packSizeFilter\" (change)=\"onFilterChange()\" [(ngModel)]=\"packSizeFilter\">\n          <option value=\"\">All Pack Sizes</option>\n          <option *ngFor=\"let packSize of uniquePackSizes\" [value]=\"packSize\">{{ packSize }}</option>\n        </select>\n      </div>\n\n      <!-- Buyer Filter Dropdown -->\n      <div class=\"filter-group\">\n        <label for=\"buyerFilter\">Buyer</label>\n        <select id=\"buyerFilter\" (change)=\"onFilterChange()\" [(ngModel)]=\"buyerFilter\">\n          <option value=\"\">All Buyers</option>\n          <option *ngFor=\"let buyer of uniqueBuyers\" [value]=\"buyer\">{{ buyer }}</option>\n        </select>\n      </div>\n    </div>\n\n    <!-- Inventory Grid Table -->\n    <table class=\"inventory-grid\">\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Description</th>\n          <th>WOH</th>\n          <th>Sixty Sales</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let item of inventoryItems$ | async\" (click)=\"onRowClick(item)\">\n          <td>{{ item.compItemId }}</td>\n          <td>{{ item.compDescription }}</td>\n          <td>{{ item.woh }}</td>\n          <td>{{ item.sixtySales }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","\nimport { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  private excludedPaths: string[] = ['/order-form', '/order-exists', '/order-confirmation'];\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    let isExcluded = false;\n\n    // Method 1: Pathname-based exclusion using URL parsing\n    try {\n      const url = new URL(request.url); // Parse URL to get only the pathname\n      isExcluded = this.excludedPaths.some(path => url.pathname.includes(path));\n      console.log(`Request URL: ${url.pathname}, Excluded (by pathname): ${isExcluded}`);\n    } catch (error) {\n      console.error(\"Invalid URL format:\", request.url);\n    }\n\n    // Method 2: Custom Header exclusion (X-Skip-Auth header)\n    const skipAuth = request.headers.has('X-Skip-Auth');\n    if (skipAuth) {\n      isExcluded = true;\n      console.log('Skipping auth based on custom header for:', request.url);\n    }\n\n    // Method 3: Original exclusion path matching logic as a fallback\n    const isExcludedByPath = this.excludedPaths.some(pattern => request.url.includes(pattern));\n    isExcluded = isExcluded || isExcludedByPath;\n\n    if (isExcluded) {\n      console.log('Request is excluded from authentication:', request.url);\n    }\n\n    // Add Authorization header if token is available and request is not excluded\n    if (!isExcluded) {\n      const token = this.authService.getToken();\n      if (token) {\n        request = request.clone({\n          setHeaders: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n      }\n    }\n\n    return next.handle(request).pipe(\n      catchError((error: HttpErrorResponse) => {\n        if (error.status === 401 && !isExcluded) {\n          console.warn('Unauthorized access detected. Redirecting to login.');\n          this.router.navigate(['/login']);\n        }\n        return throwError(() => error);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Observable, catchError, throwError } from 'rxjs';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\n\n@Injectable()\nexport class HttpLoggingInterceptor implements HttpInterceptor {\n  constructor(private snackBarService: SnackbarService) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler,\n  ): Observable<HttpEvent<unknown>> {\n    // Remove the authorization header modification\n    return next.handle(request).pipe(\n      catchError((err: unknown) => {\n        if (err instanceof HttpErrorResponse) {\n          this.handleServerSideError(err);\n        } else {\n          this.snackBarService.showSnackBar('Error fetching data');\n        }\n        return throwError(() => err);\n      }),\n    );\n  }\n\n  private handleServerSideError(error: HttpErrorResponse) {\n    console.error(error.error.message);\n    switch (error.status) {\n      case 400: //  means the request could not be understood by the server.\n        this.snackBarService.showSnackBar(\n          'Bad Request, please try again later .',\n        );\n        break;\n      case 401: // means lacks valid authentication credentials for the target resource.\n        this.snackBarService.showSnackBar(\n          'Unauthorized, please try again later.',\n        );\n        break;\n      case 403: //  means you are not allowed access to the target resource.\n        this.snackBarService.showSnackBar('Forbidden access is denied');\n        break;\n      case 500: // means there's an issue or temporary glitch with the application's programming\n        console.log(error);\n        this.snackBarService.showSnackBar(\n          'Internal server error, please try again later.',\n        );\n        break;\n      default:\n        this.snackBarService.showSnackBar(\n          'Error fetching data, please try again later.',\n        );\n        break;\n    }\n  }\n}\n","\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private tokenKey = 'authToken';\n\n  // Paths to exclude from authentication\n  private excludedPaths: RegExp[] = [\n    /order-form/i,\n    /order-exists/i,\n    /order-confirmation/i\n  ];\n\n  constructor() {}\n\n  // Save the token to both sessionStorage and localStorage\n  saveToken(token: string): void {\n    sessionStorage.setItem(this.tokenKey, token);\n    localStorage.setItem(this.tokenKey, token);\n    console.log('Token saved:', token); // Debug: Log saved token\n  }\n\n  // Retrieve the token (from sessionStorage first, then fallback to localStorage)\n  getToken(url?: string): string | null {\n    // Skip token retrieval if the URL matches an excluded path\n    if (url && this.isExcludedPath(url)) {\n      console.log('URL is excluded from authentication:', url);\n      return null;\n    }\n\n    const token = sessionStorage.getItem(this.tokenKey) || localStorage.getItem(this.tokenKey);\n    console.log('Retrieved token:', token); // Debug: Log retrieved token\n    return token;\n  }\n\n  // Clear the token from both storages (useful for logout)\n  clearToken(): void {\n    sessionStorage.removeItem(this.tokenKey);\n    localStorage.removeItem(this.tokenKey);\n    console.log('Token cleared'); // Debug: Confirm token clearance\n  }\n\n  // Check if token exists and is not expired\n  isTokenValid(url?: string): boolean {\n    // Skip token validation if the URL matches an excluded path\n    if (url && this.isExcludedPath(url)) {\n      console.log('URL is excluded from authentication, skipping token validation:', url);\n      return true;\n    }\n\n    const token = this.getToken();\n    if (!token) {\n      console.warn('No token found');\n      return false;\n    }\n\n    const payload = this.decodeToken(token);\n    if (!payload || !payload.exp) {\n      console.warn('Invalid token payload');\n      return false;\n    }\n\n    const expiryTime = payload.exp * 1000; // Convert to milliseconds\n    const currentTime = Date.now();\n    const isValid = currentTime < expiryTime;\n    console.log('Token validity:', isValid); // Debug: Log token validity\n    return isValid;\n  }\n\n  // Decode the token to get its payload\n  private decodeToken(token: string): any | null {\n    try {\n      const payloadPart = token.split('.')[1];\n      const decodedPayload = atob(payloadPart);\n      const parsedPayload = JSON.parse(decodedPayload);\n      console.log('Decoded token payload:', parsedPayload); // Debug: Log decoded payload\n      return parsedPayload;\n    } catch (error) {\n      console.error('Failed to decode token:', error);\n      return null;\n    }\n  }\n\n  // Check if the URL matches any excluded path pattern\n  private isExcludedPath(url: string): boolean {\n    return this.excludedPaths.some((pattern) => pattern.test(url));\n  }\n}\n","import { HttpClient, HttpEvent, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { DeliveryStop } from '../models/delivery-stop.model';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from './auth.service';\n\ninterface Driver {\n  name: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DriverRouteService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService\n  ) {}\n\n  private getHeaders(): HttpHeaders {\n    const token = this.authService.getToken();\n    return new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n  }\n\n  getDrivers(): Observable<Driver[]> {\n    return this.http.get<Driver[]>(`${this.apiUrl}/drivers`, {\n      headers: this.getHeaders()\n    });\n  }\n\n  getDeliveryRoute(\n    driverName: string,\n    deliveryDate: string\n  ): Observable<DeliveryStop[]> {\n    const params = new HttpParams()\n      .set('driverName', driverName)\n      .set('deliveryDate', deliveryDate);\n\n    return this.http.get<DeliveryStop[]>(`${this.apiUrl}/delivery-stops`, {\n      params,\n      headers: this.getHeaders()\n    });\n  }\n\n  hasArrived(id: string): Observable<DeliveryStop> {\n    return this.http.patch<DeliveryStop>(\n      `${this.apiUrl}/delivery-stops/${id}`, \n      {},\n      { headers: this.getHeaders() }\n    );\n  }\n\n  uploadPhoto(\n    deliveryStopId: number,\n    file: File\n  ): Observable<HttpEvent<DeliveryStop>> {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    return this.http.post<DeliveryStop>(\n      `${this.apiUrl}/delivery-stops/${deliveryStopId}/photos`,\n      formData,\n      {\n        headers: this.getHeaders(),\n        reportProgress: true,\n        observe: 'events',\n      }\n    );\n  }\n}","import { ErrorHandler, Injectable } from '@angular/core';\nimport { SnackbarService } from './snackbar.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GlobalErrorHandlerService implements ErrorHandler {\n  constructor(\n    private snackBarService: SnackbarService,\n    private router: Router,\n    private authService: AuthService\n  ) {}\n\n  handleError(error: any) {\n    if (error instanceof HttpErrorResponse) {\n      // Check network connectivity\n      if (!navigator.onLine) {\n        this.snackBarService.showSnackBar('No internet connection');\n        return;\n      }\n\n      // Handle client-side errors\n      if (error.error instanceof ErrorEvent) {\n        this.snackBarService.showSnackBar(error.error.message);\n        return;\n      }\n\n      // Handle specific HTTP status codes\n      switch (error.status) {\n        case 401:\n          this.snackBarService.showSnackBar('Session expired. Please login again');\n          this.authService.clearToken();\n          this.router.navigate(['/login']);\n          break;\n\n        case 403:\n          this.snackBarService.showSnackBar('Access denied');\n          break;\n\n        case 404:\n          this.snackBarService.showSnackBar('Resource not found');\n          break;\n\n        case 413:\n          this.snackBarService.showSnackBar('File too large');\n          break;\n\n        case 500:\n          this.snackBarService.showSnackBar('Server error. Please try again later');\n          break;\n\n        default:\n          console.error('An error occurred:', error);\n          const errorMessage = error.error?.message || 'An unexpected error occurred';\n          this.snackBarService.showSnackBar(`Error: ${errorMessage}`);\n      }\n\n      // Log the full error for debugging\n      console.error('Full error details:', {\n        status: error.status,\n        statusText: error.statusText,\n        url: error.url,\n        error: error.error,\n      });\n    } else {\n      // Handle client-side/non-HTTP errors\n      console.error('Client-side error:', error);\n      this.snackBarService.showSnackBar('An unexpected error occurred');\n    }\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { OrderRequest } from '../models/order-request.model';\nimport { OrderConfirmation } from '../models/order-confirmation.model';\nimport { environment } from 'src/environments/environment';\nimport { Order } from '../models/order.model';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderFormService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService\n  ) {}\n\n  private getHeaders(): HttpHeaders {\n    const token = this.authService.getToken();\n    return new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n  }\n\n  getOrderData(customerId: number): Observable<Order> {\n    return this.http.get<Order>(\n      `${this.apiUrl}/customers/${customerId}/profiles`,\n      { headers: this.getHeaders() }\n    );\n  }\n\n  placeOrder(customerId: number, order: OrderRequest): Observable<OrderConfirmation> {\n    const url = `${this.apiUrl}/public/customers/${customerId}/orders`;\n    return this.http.post<OrderConfirmation>(url, order, { headers: this.getHeaders() });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Company } from '../models/company.model';\nimport { Customer } from '../models/customer.model';\nimport { SalesRep } from '../models/sales-rep.model';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderLinksService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService\n  ) {}\n\n  private getHeaders(): HttpHeaders {\n    const token = this.authService.getToken();\n    return new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n  }\n\n  getCompanies(): Observable<Company[]> {\n    return this.http.get<Company[]>(\n      `${this.apiUrl}/companies`,\n      { headers: this.getHeaders() }\n    );\n  }\n\n  getSalesPersons(companyId: number): Observable<SalesRep[]> {\n    return this.http.get<SalesRep[]>(\n      `${this.apiUrl}/companies/${companyId}/sales-reps`,\n      { headers: this.getHeaders() }\n    );\n  }\n\n  getCustomers(companyId: number, salesRepName: string): Observable<Customer[]> {\n    return this.http.get<Customer[]>(\n      `${this.apiUrl}/companies/${companyId}/sales-reps/${salesRepName}/customers`,\n      { headers: this.getHeaders() }\n    );\n  }\n}","import { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { InventoryItem } from '../models/products.model';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService\n  ) {}\n\n  private getHeaders(): HttpHeaders {\n    const token = this.authService.getToken();\n    return new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n  }\n\n  getProductDetails(compItemId: number): Observable<any> {\n    return this.http.get<any>(\n      `${this.apiUrl}/products/${compItemId}`,\n      { headers: this.getHeaders() }\n    );\n  }\n\n  getProducts(\n    page: number,\n    size: number,\n    searchTerm: string,\n  ): Observable<InventoryItem[]> {\n    const params = new HttpParams()\n      .set('page', page.toString())\n      .set('size', size.toString())\n      .set('search', searchTerm);\n\n    console.log('Fetching products with token:', this.authService.getToken()); // Debug log\n\n    return this.http\n      .get<{ content: InventoryItem[] }>(`${this.apiUrl}/products`, {\n        params,\n        headers: this.getHeaders()\n      })\n      .pipe(\n        map((response) =>\n          response.content.map((item) => ({\n            compItemId: item.compItemId,\n            compDescription: item.compDescription,\n            compInstructions: item.compInstructions,\n            origin: item.origin,\n            notes: item.notes,\n            woh: item.woh,\n            unitType: item.unitType,\n            packSize: item.packSize,\n            packLock: item.packLock,\n            compCost: item.compCost,\n            yield: item.yield,\n            laborPackCost: item.laborPackCost,\n            buyer: item.buyer,\n            sixtySales: item.sixtySales,\n            tenSales: item.tenSales,\n            preOrderHours: item.preOrderHours,\n          }))\n        )\n      );\n  }\n}","import { Injectable } from '@angular/core';\nimport { \n  MatSnackBar, \n  MatSnackBarHorizontalPosition, \n  MatSnackBarRef, \n  MatSnackBarVerticalPosition, \n  TextOnlySnackBar \n} from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SnackbarService {\n  private snackBarRef!: MatSnackBarRef<TextOnlySnackBar>;\n  private duration = 10000;\n  private verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n  private horizontalPos: MatSnackBarHorizontalPosition = 'center';\n  private action = 'Hide';\n\n  // Define standard styles\n  private styles = {\n    error: 'error-snackbar',\n    success: 'success-snackbar',\n    warning: 'warning-snackbar',\n    info: 'info-snackbar'\n  };\n\n  constructor(private matSnackBar: MatSnackBar) {}\n\n  showSnackBar(\n    message: string, \n    style?: 'error' | 'success' | 'warning' | 'info',\n    duration: number = this.duration\n  ) {\n    // Close any existing snackbar\n    this.closeSnackBar();\n\n    // Get the appropriate style class\n    const panelClass = style ? this.styles[style] : undefined;\n\n    this.snackBarRef = this.matSnackBar.open(message, this.action, {\n      duration: duration,\n      verticalPosition: this.verticalPosition,\n      horizontalPosition: this.horizontalPos,\n      panelClass: panelClass,\n    });\n\n    this.snackBarRef.onAction().subscribe(() => {\n      this.closeSnackBar();\n    });\n\n    return this.snackBarRef;\n  }\n\n  // Convenience methods for different types of messages\n  showError(message: string, duration?: number) {\n    return this.showSnackBar(message, 'error', duration);\n  }\n\n  showSuccess(message: string, duration?: number) {\n    return this.showSnackBar(message, 'success', duration);\n  }\n\n  showWarning(message: string, duration?: number) {\n    return this.showSnackBar(message, 'warning', duration);\n  }\n\n  showInfo(message: string, duration?: number) {\n    return this.showSnackBar(message, 'info', duration);\n  }\n\n  closeSnackBar() {\n    if (this.snackBarRef) {\n      this.snackBarRef.dismiss();\n    }\n  }\n} ","export const environment = {\n  production: false,\n  apiKey: 'devKey',\n  apiUrl: 'https://uat-pffc.onrender.com/api',\n};\n","\nimport { AppComponent } from './app/app.component';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { provideAnimations } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app/app-routing.module';\nimport { BrowserModule, bootstrapApplication } from '@angular/platform-browser';\nimport { GlobalErrorHandlerService } from './app/services/global-error-handler.service';\nimport { ErrorHandler, importProvidersFrom } from '@angular/core';\nimport { HTTP_INTERCEPTORS, provideHttpClient } from '@angular/common/http';\nimport { HttpLoggingInterceptor } from 'src/app/interceptors/http-logging.interceptor';\nimport { AuthInterceptor } from './app/interceptors/auth.interceptor';\nimport { AuthService } from './app/services/auth.service';\n\nbootstrapApplication(AppComponent, {\n  providers: [\n    importProvidersFrom(\n      BrowserModule,\n      AppRoutingModule,\n      FormsModule,\n      ReactiveFormsModule,\n      CommonModule,\n      MatSlideToggleModule,\n      MatTableModule,\n      MatSidenavModule,\n      MatToolbarModule,\n      MatIconModule,\n      MatListModule,\n      MatMenuModule,\n      MatSnackBarModule,\n      ModalModule.forRoot()\n    ),\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpLoggingInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true,\n    },\n    AuthService,\n    { provide: ErrorHandler, useClass: GlobalErrorHandlerService },\n    provideHttpClient(),\n    provideAnimations(),\n  ],\n}).catch((err) => console.error(err));\n"],"names":["RouterModule","HTTP_INTERCEPTORS","AuthInterceptor","HttpLoggingInterceptor","DriverRouteComponent","HomeComponent","OrderLinksComponent","LoginComponent","LogoutComponent","ProductsComponent","OrderConfirmationComponent","OrderExistsComponent","OrderFormComponent","DataComponent","OrdersComponent","PreOrdersComponent","routes","path","redirectTo","pathMatch","component","title","AppRoutingModule","provide","useClass","multi","imports","forRoot","i1","exports","isDevMode","NavigationEnd","RouterLink","RouterLinkActive","RouterOutlet","CommonModule","MatToolbarModule","MatIconModule","environment","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵpureFunction1","_c0","ctx_r0","showWarning","ɵɵadvance","ɵɵtextInterpolate","apiUrl","AppComponent","constructor","router","isOrderForm","includes","alert","ngOnInit","events","subscribe","event","currentRoute","urlAfterRedirects","ɵɵdirectiveInject","Router","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵtemplate","AppComponent_Conditional_0_Template","ɵɵelement","AppComponent_Conditional_8_Template","ɵɵconditional","i2","NgClass","i3","MatToolbar","i4","MatIcon","styles","changeDetection","http","snackBar","uploadUrl","downloadOrders","url","get","responseType","response","blob","Blob","type","downloadURL","window","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL","error","console","open","duration","onFileSelected","fileInput","target","files","length","file","uploadFile","formData","FormData","append","post","next","HttpClient","MatSnackBar","DataComponent_Template","ɵɵlistener","DataComponent_Template_button_click_1_listener","ɵɵrestoreView","_r1","ɵɵresetView","DataComponent_Template_button_click_3_listener","fileInput_r2","ɵɵreference","DataComponent_Template_input_change_5_listener","$event","SecurityContext","map","tap","HttpEventType","ImageThumbnailComponent","MatTableModule","driverNames_r4","name","i_r5","ɵɵtextInterpolate1","dataSource_r7","indexOf","element_r6","timeDifference","DriverRouteComponent_table_18_td_3_div_2_Template","deliveryAddress1","ctx_r8","getGoogleMapsUrl","element_r8","deliveryAddress2","deliveryAddress3","ɵɵsanitizeUrl","ɵɵtextInterpolate2","ɵɵpropertyInterpolate1","element_r10","customerPhone","DriverRouteComponent_table_18_td_12_div_1_Template_input_change_1_listener","_r11","element_r12","ɵɵnextContext","$implicit","DriverRouteComponent_table_18_td_12_div_1_Template_button_click_3_listener","fileInput_r13","fileUrl","ɵɵpipeBind2","actualArrivalTime","DriverRouteComponent_table_18_td_12_div_1_Template","DriverRouteComponent_table_18_td_12_ng_template_2_Template","ɵɵtemplateRefExtractor","alreadyArrivedBlock_r14","row_r15","ɵɵelementContainerStart","DriverRouteComponent_table_18_th_2_Template","DriverRouteComponent_table_18_td_3_Template","DriverRouteComponent_table_18_th_5_Template","DriverRouteComponent_table_18_td_6_Template","DriverRouteComponent_table_18_th_8_Template","DriverRouteComponent_table_18_td_9_Template","DriverRouteComponent_table_18_th_11_Template","DriverRouteComponent_table_18_td_12_Template","DriverRouteComponent_table_18_tr_13_Template","DriverRouteComponent_table_18_tr_14_Template","displayedColumns","driverRouteService","snackBarService","sanitizer","cdr","maxFileSize","selectedFile","today","formatDate","Date","driverNames$","getDrivers","pipe","data","refreshDeliverRoute","date","month","getMonth","slice","day","getDate","year","getFullYear","driverName","deliveryDate","formattedDate","toISOString","split","deliveryRoute$","getDeliveryRoute","deliveryStops","calculateTimeDifferences","deliveryRoute","input","startsWith","size","showSnackBar","uploadPhoto","id","Response","updatedDeliveryStop","body","Object","assign","closeSnackBar","detectChanges","address2","address3","encodeURIComponent","sanitizedUrl","sanitize","bypassSecurityTrustUrl","i","currentStop","previousStop","currentTime","plannedArrivalTime","getTime","previousTime","timeDifferenceInMinutes","Math","round","undefined","DriverRouteService","SnackbarService","DomSanitizer","ChangeDetectorRef","DriverRouteComponent_Template","DriverRouteComponent_Template_select_change_9_listener","driverName_r2","deliveryDate2_r3","value","DriverRouteComponent_option_11_Template","DriverRouteComponent_table_18_Template","ɵɵpipeBind1","NgForOf","NgIf","AsyncPipe","DatePipe","i5","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","getStatusColor","HomeComponent_tr_35_ng_container_9_Template","HomeComponent_tr_35_ng_container_10_Template","item_r2","description","status","getStatusIcon","ordered","employee_r3","employees","items","sortEmployees","sortItems","sort","a","b","statusOrder","sick","vacation","onsite","none","low","navigateTo","page","navigate","HomeComponent_Template","HomeComponent_tr_35_Template","HomeComponent_tr_47_Template","NgStyle","TitleCasePipe","ImageThumbnailComponent_ng_template_2_Template_button_click_3_listener","_r3","ctx_r3","modalRef","hide","ImageThumbnailComponent_ng_template_2_Template_img_click_7_listener","ImageThumbnailComponent_ng_template_2_Template_img_keyup_7_listener","imageUrl","modalService","openModal","show","class","BsModalService","inputs","ImageThumbnailComponent_Template","ImageThumbnailComponent_Template_div_click_0_listener","imageModal_r2","ImageThumbnailComponent_Template_img_keyup_1_listener","ImageThumbnailComponent_ng_template_2_Template","Validators","MatFormFieldModule","MatInputModule","MatButtonModule","ReactiveFormsModule","errorMessage","formBuilder","authService","loading","loginApiUrl","loginForm","group","username","required","password","onLogin","invalid","loginResponse","saveToken","token","log","loginError","FormBuilder","AuthService","LoginComponent_Template","LoginComponent_Template_form_ngSubmit_7_listener","LoginComponent_span_17_Template","LoginComponent_span_18_Template","LoginComponent_div_19_Template","ɵɵpureFunction0","i6","MatFormField","MatLabel","i7","MatInput","i8","MatButton","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","imageBackgroundColor","imageSrc","LogoComponent","ngOnChanges","companyId","ɵɵNgOnChangesFeature","LogoComponent_Template","LogoComponent_div_0_Template","LogoutComponent_Template","product_r1","profileDescription","unitType","packSize","salesPrice","quantity","ctx_r1","orderData","shipToName","location","history","state","goBack","customerId","Location","OrderConfirmationComponent_Template","OrderConfirmationComponent_tr_21_Template","OrderConfirmationComponent_div_33_Template","OrderConfirmationComponent_Template_button_click_38_listener","customerName","profiles","ɵɵpipeBind3","totalPrice","shipToId","DecimalPipe","CurrencyPipe","profile_r1","route","back","ActivatedRoute","OrderExistsComponent_Template","OrderExistsComponent_tr_21_Template","OrderExistsComponent_div_36_Template","OrderExistsComponent_Template_button_click_37_listener","salesRepName","order","salesRepPhone","shipTo_r3","OrderFormComponent_form_0_div_6_option_5_Template","OrderFormComponent_form_0_div_6_div_6_Template","shipTos","tmp_3_0","orderForm","touched","dirty","errors","OrderFormComponent_form_0_div_7_ng_container_20_tr_1_div_6_Template","i_r6","isQuantityEntered","tmp_9_0","profile_r5","ɵɵpipeBind4","getRowTotalPrice","OrderFormComponent_form_0_div_7_ng_container_20_tr_1_Template","isSpecial","OrderFormComponent_form_0_div_7_ng_container_20_Template","profileControls","controls","OrderFormComponent_form_0_ng_container_27_tr_1_div_6_Template","i_r9","tmp_8_0","profile_r8","OrderFormComponent_form_0_ng_container_27_tr_1_Template","OrderFormComponent_form_0_Template_form_ngSubmit_0_listener","onSubmit","OrderFormComponent_form_0_div_5_Template","OrderFormComponent_form_0_div_6_Template","OrderFormComponent_form_0_div_7_Template","OrderFormComponent_form_0_ng_container_27_Template","OrderFormComponent_form_0_div_28_Template","OrderFormComponent_form_0_div_29_Template","OrderFormComponent_form_0_div_34_Template","OrderFormComponent_form_0_div_45_Template","OrderFormComponent_form_0_div_46_Template","OrderFormComponent_form_0_div_47_Template","OrderFormComponent_form_0_div_48_Template","hasSpecials","submitted","tmp_7_0","hasError","formControls","valid","fb","orderService","paramMap","params","NaN","loadOrderData","getOrderData","localeCompare","some","profile","shipToValidators","dateAfterTomorrowValidator","dateWithinThreeMonthsValidator","dateNotOnSundayValidator","customerPo","array","createProfileGroup","atLeastOneQuantityValidator","markForCheck","at","price","index","profileDid","min","filter","placeOrder","orderConfirmation","errorCode","markAllAsTouched","control","formArray","hasAtLeastOneQuantity","atLeastOneQuantity","dateValue","getDay","dateNotOnSunday","OrderFormService","OrderFormComponent_Template","OrderFormComponent_form_0_Template","NgSelectOption","ɵNgSelectMultipleOption","NumberValueAccessor","SelectControlValueAccessor","FormGroupName","FormArrayName","Observable","switchMap","company_r1","salesperson_r2","OrderLinksComponent_tr_33_Template_a_click_7_listener","customer_r4","ctx_r4","copyLink","OrderLinksComponent_tr_33_Template_a_keyup_7_listener","_c1","snackbarService","orderLinksService","customers","filteredCustomers","form","company","salesPerson","searchText","companies$","getCompanies","companies","defaultCompany","find","setValue","valueChanges","getSalesPersons","salesreps","salesPersons$","observer","complete","salesrep","getCustomers","customer","toLowerCase","generateLink","baseUrl","replace","navigator","clipboard","writeText","then","catch","err","OrderLinksService","OrderLinksComponent_Template","OrderLinksComponent_option_11_Template","OrderLinksComponent_option_17_Template","OrderLinksComponent_tr_33_Template","tmp_2_0","HttpHeaders","profile_r3","profile_r4","profile_r6","OrdersComponent_tr_41_td_13_Template","OrdersComponent_tr_41_td_14_Template","OrdersComponent_tr_41_td_15_Template","OrdersComponent_tr_41_td_16_Template","item_r7","orders","filteredOrders","loadCompaniesAndSetDefaults","setupSalesPersonListener","setupOrdersListener","setupCustomerNameFilterListener","defaultSalesRep","rep","getToken","headers","Authorization","applyFilters","OrdersComponent_Template","OrdersComponent_option_11_Template","OrdersComponent_option_17_Template","OrdersComponent_th_36_Template","OrdersComponent_th_37_Template","OrdersComponent_th_38_Template","OrdersComponent_th_39_Template","OrdersComponent_tr_41_Template","FormsModule","vendor_r1","weightErrors","i_r3","priceErrors","ɵɵtwoWayListener","PreOrdersComponent_tr_38_Template_input_ngModelChange_18_listener","_r2","ɵɵtwoWayBindingSet","weights","PreOrdersComponent_tr_38_Template_input_blur_18_listener","validateWeight","PreOrdersComponent_tr_38_div_19_Template","PreOrdersComponent_tr_38_Template_input_ngModelChange_21_listener","order_r5","PreOrdersComponent_tr_38_Template_input_blur_21_listener","validatePrice","PreOrdersComponent_tr_38_div_22_Template","dispatchDate","sodId","descriptionMemo","entryTime","orderedUnits","getUnitTypeLabel","unitSize","ɵɵtwoWayProperty","preOrders","preOrderHours","webAppPreOrderQ_VendorID","vendor_VendorID","vendorName","filteredPreOrders","uniqueVendors","selectedVendor","Array","fill","getUniqueVendors","Set","filterByVendor","weight","isNaN","submitWeights","forEach","_","PreOrdersComponent_Template","PreOrdersComponent_Template_select_ngModelChange_10_listener","PreOrdersComponent_Template_select_change_10_listener","PreOrdersComponent_option_13_Template","PreOrdersComponent_tr_38_Template","PreOrdersComponent_Template_button_click_39_listener","RequiredValidator","NgModel","MAT_DIALOG_DATA","MatDialogModule","ProductDetailsDialogComponent","dialogRef","close","getUnitType","MatDialogRef","ProductDetailsDialogComponent_Template","compItemId","compDescription","compInstructions","compCost","yield","laborPackCost","tmp_4_0","tmp_5_0","tmp_6_0","origin","notes","woh","tmp_13_0","buyer","sixtySales","tenSales","MatDialogContent","debounceTime","distinctUntilChanged","BehaviorSubject","Subject","InfiniteScrollDirective","origin_r1","unitType_r2","packSize_r3","buyer_r4","ProductsComponent_tr_52_Template_tr_click_0_listener","item_r6","_r5","ctx_r6","onRowClick","productService","dialog","searchTerm","showRelevantItems","originFilter","unitTypeFilter","packSizeFilter","buyerFilter","uniqueOrigins","uniqueUnitTypes","uniquePackSizes","uniqueBuyers","searchSubject","inventoryItemsSubject","inventoryItems$","asObservable","loadData","searchSubscription","trimComparator","getProducts","products","currentData","newData","item","currentItem","filteredData","fullyFilteredData","populateUniqueDropdowns","width","toggleRelevantItemsFilter","onFilterChange","onScroll","onSearchChange","prev","curr","trim","ngOnDestroy","unsubscribe","Boolean","v","ProductService","MatDialog","ProductsComponent_Template","ProductsComponent_Template_div_scrolled_0_listener","ProductsComponent_Template_input_input_8_listener","ProductsComponent_Template_button_click_10_listener","ProductsComponent_Template_select_change_15_listener","ProductsComponent_Template_select_ngModelChange_15_listener","ProductsComponent_option_18_Template","ProductsComponent_Template_select_change_22_listener","ProductsComponent_Template_select_ngModelChange_22_listener","ProductsComponent_option_25_Template","ProductsComponent_Template_select_change_29_listener","ProductsComponent_Template_select_ngModelChange_29_listener","ProductsComponent_option_32_Template","ProductsComponent_Template_select_change_36_listener","ProductsComponent_Template_select_ngModelChange_36_listener","ProductsComponent_option_39_Template","ProductsComponent_tr_52_Template","throwError","catchError","excludedPaths","intercept","request","isExcluded","pathname","skipAuth","has","isExcludedByPath","pattern","clone","setHeaders","handle","warn","ɵɵinject","factory","ɵfac","HttpErrorResponse","handleServerSideError","message","tokenKey","sessionStorage","setItem","localStorage","isExcludedPath","getItem","clearToken","removeItem","isTokenValid","payload","decodeToken","exp","expiryTime","now","isValid","payloadPart","decodedPayload","atob","parsedPayload","JSON","parse","test","providedIn","HttpParams","getHeaders","set","hasArrived","patch","deliveryStopId","reportProgress","observe","GlobalErrorHandlerService","handleError","onLine","ErrorEvent","statusText","getProductDetails","toString","content","packLock","matSnackBar","verticalPosition","horizontalPos","action","success","warning","info","style","panelClass","snackBarRef","horizontalPosition","onAction","showError","showSuccess","showInfo","dismiss","production","apiKey","ModalModule","MatSnackBarModule","MatMenuModule","MatListModule","MatSidenavModule","MatSlideToggleModule","provideAnimations","BrowserModule","bootstrapApplication","ErrorHandler","importProvidersFrom","provideHttpClient","providers"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}