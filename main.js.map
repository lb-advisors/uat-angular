{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AACuD;AACiC;AACvB;AACoB;AACjB;AACG;AACS;AAC0B;AAClB;AACP;;;AAEjF,MAAMU,MAAM,GAAW,CACrB;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE,aAAa;EAAEC,SAAS,EAAE;AAAM,CAAE,EAC1D;EAAEF,IAAI,EAAE,MAAM;EAAEG,SAAS,EAAEZ,0EAAa;EAAEa,KAAK,EAAE;AAAM,CAAE,EACzD;EAAEJ,IAAI,EAAE,QAAQ;EAAEG,SAAS,EAAEb,iGAAoB;EAAEc,KAAK,EAAE;AAAc,CAAE,EAC1E;EAAEJ,IAAI,EAAE,aAAa;EAAEG,SAAS,EAAEX,8FAAmB;EAAEY,KAAK,EAAE;AAAa,CAAE,EAC7E;EAAEJ,IAAI,EAAE,OAAO;EAAEG,SAAS,EAAEV,6EAAc;EAAEW,KAAK,EAAE;AAAO,CAAE,EAC5D;EAAEJ,IAAI,EAAE,QAAQ;EAAEG,SAAS,EAAET,gFAAe;EAAEU,KAAK,EAAE;AAAQ,CAAE,EAC/D;EAAEJ,IAAI,EAAE,WAAW;EAAEG,SAAS,EAAER,yFAAkB;EAAES,KAAK,EAAE;AAAW,CAAE,EACxE;EAAEJ,IAAI,EAAE,iCAAiC;EAAEG,SAAS,EAAEP,mHAA0B;EAAEQ,KAAK,EAAE;AAAoB,CAAE,EAC/G;EAAEJ,IAAI,EAAE,2BAA2B;EAAEG,SAAS,EAAEN,iGAAoB;EAAEO,KAAK,EAAE;AAAc,CAAE,EAC7F;EAAEJ,IAAI,EAAE,yBAAyB;EAAEG,SAAS,EAAEL,0FAAiB;EAAEM,KAAK,EAAE;AAAY,CAAE,CACvF;AAMK,MAAOC,gBAAgB;EAAA,QAAAC,CAAA;qBAAhBD,gBAAgB;EAAA;EAAA,QAAAE,EAAA;UAAhBF;EAAgB;EAAA,QAAAG,EAAA;cAHjBnB,0DAAY,CAACoB,OAAO,CAACV,MAAM,CAAC,EAC5BV,0DAAY;EAAA;;;sHAEXgB,gBAAgB;IAAAK,OAAA,GAAAC,0DAAA;IAAAC,OAAA,GAFjBvB,0DAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;AC1BkB;AACO;AACmD;AAC7C;AACI;AACZ;;;;;;;;;ICFnCiC,4DAHZ,qBAAiF,aAC/C,WAC2C,eACvD;IAAAA,oDAAA,gBAAS;IAAAA,0DAAA,EAAW;IAC9BA,oDAAA,kBACJ;IAAAA,0DAAA,EAAI;IAEAA,4DADJ,WAAuE,eACzD;IAAAA,oDAAA,kBAAW;IAAAA,0DAAA,EAAW;IAChCA,oDAAA,oBACJ;IAAAA,0DAAA,EAAI;IAMAA,4DADJ,YAAkE,gBACpD;IAAAA,oDAAA,sBAAc;IAAAA,0DAAA,EAAW;IACnCA,oDAAA,gBACJ;IAMRA,0DANQ,EAAI,EACF,EAKI;;;;IAvB8BA,wDAAA,YAAAA,6DAAA,IAAAM,GAAA,EAAAC,MAAA,CAAAC,WAAA,EAAoC;;;;;IAqCnDR,4DAAA,aAAsB;IAAAA,oDAAA,sBAAe;IAAAA,0DAAA,EAAM;IAC5DA,4DAAA,aAAsB;IAAAA,oDAAA,GAAU;IAAAA,0DAAA,EAAM;;;;IAAhBA,uDAAA,GAAU;IAAVA,+DAAA,CAAAO,MAAA,CAAAI,MAAA,CAAU;;;ADvBtC,MAAOC,YAAY;EAMvBC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;IAL1B,KAAAvB,SAAS,GAAYA,wDAAS,EAAE;IAChC,KAAAoB,MAAM,GAAGb,qEAAW,CAACa,MAAM;IAC3B,KAAAH,WAAW,GAAG,KAAK;IACnB,KAAAO,WAAW,GAAY,KAAK;IAG1B;IACA,IAAI,IAAI,CAACxB,SAAS,IAAI,IAAI,CAACoB,MAAM,CAACK,QAAQ,CAAC,MAAM,CAAC,EAAE;MAClD,IAAI,CAACR,WAAW,GAAG,IAAI;MACvBS,KAAK,CAAC,iEAAiE,CAAC;IAC1E;EACF;EAEAC,QAAQA,CAAA;IACN;IACA,IAAI,CAACJ,MAAM,CAACK,MAAM,CAACC,SAAS,CAAEC,KAAK,IAAI;MACrC,IAAIA,KAAK,YAAY5B,0DAAa,EAAE;QAClC,MAAM6B,YAAY,GAAGD,KAAK,CAACE,iBAAiB;QAC5C,IAAI,CAACR,WAAW,GAAGO,YAAY,CAACN,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAACM,YAAY,CAACN,QAAQ,CAAC,aAAa,CAAC;MAC7F;IACF,CAAC,CAAC;EACJ;EAAC,QAAAhC,CAAA;qBAtBU4B,YAAY,EAAAZ,+DAAA,CAAAX,mDAAA;EAAA;EAAA,QAAAJ,EAAA;UAAZ2B,YAAY;IAAAc,SAAA;IAAAC,UAAA;IAAAC,QAAA,GAAA5B,iEAAA;IAAA8B,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QChBzBnC,wDAAA,IAAAsC,mCAAA,0BAAoB;QA2BpBtC,uDAAA,aAA6B;QAE7BA,4DAAA,WAAM;QACFA,uDAAA,oBAA+B;QACnCA,0DAAA,EAAO;QAKCA,4DAFR,gBAAqC,aACV,aACY;QAC3BA,oDAAA,iDACA;QAAAA,wDAAA,IAAAwC,mCAAA,OAAiB;QAI7BxC,0DAFQ,EAAM,EACJ,EACD;;;QA1CTA,2DAAA,EAAAoC,GAAA,CAAArB,WAAA,UAyBC;QAaWf,uDAAA,GACuC;QADvCA,2DAAA,CAAAoC,GAAA,CAAA7C,SAAA,UACuC;;;mBD1BvCQ,yDAAY,EAAA2C,oDAAA,EAAE7C,iEAAU,EAAEH,uDAAU,EAAEC,6DAAgB,EAAEH,2DAAO,EAAEI,yDAAY;IAAAgD,MAAA;IAAAC,eAAA;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;AEbsB;AAKrE;AAEW;AACkC;AAC9B;AACV;;;;;;;;;;;;ICCvC7C,4DAAA,iBAA0H;IAAAA,oDAAA,GAAoB;IAAAA,0DAAA,EAAS;;;;;IAAlDA,wDAA3B,UAAAoD,cAAA,CAAAC,IAAA,CAA0B,aAAAC,IAAA,OAAqB;IAACtD,uDAAA,EAAoB;IAApBA,+DAAA,CAAAoD,cAAA,CAAAC,IAAA,CAAoB;;;;;IAahJrD,4DAAA,aAA+D;IAAAA,oDAAA,eAAQ;IAAAA,0DAAA,EAAK;;;;;IAG1EA,4DAAA,cAAmF;IACjFA,uDAAA,YAAiC;IACjCA,4DAAA,eAAoC;IAAAA,oDAAA,GAAwE;IAC9GA,0DAD8G,EAAO,EAC/G;;;;;IADgCA,uDAAA,GAAwE;IAAxEA,gEAAA,MAAAwD,aAAA,CAAAA,aAAA,CAAAC,OAAA,CAAAC,UAAA,OAAAC,cAAA,YAAwE;;;;;IAJhH3D,4DAAA,aAAgE;IAC9DA,oDAAA,GACA;IAAAA,wDAAA,IAAA4D,iDAAA,kBAAmF;IAIrF5D,0DAAA,EAAK;;;;;IALHA,uDAAA,EACA;IADAA,gEAAA,MAAA0D,UAAA,CAAAG,gBAAA,MACA;IAAM7D,uDAAA,EAAmD;IAAnDA,wDAAA,SAAA0D,UAAA,KAAAF,aAAA,CAAAA,aAAA,CAAAM,MAAA,MAAmD;;;;;IAS3D9D,4DAAA,aAAsC;IAAAA,oDAAA,cAAO;IAAAA,0DAAA,EAAK;;;;;IAEhDA,4DADF,aAA8D,YACqC;IAC/FA,oDAAA,GACF;IACFA,0DADE,EAAI,EACD;;;;;IAHAA,uDAAA,EAA6E;IAA7EA,wDAAA,SAAA+D,MAAA,CAAAC,gBAAA,CAAAC,UAAA,CAAAC,gBAAA,EAAAD,UAAA,CAAAE,gBAAA,GAAAnE,2DAAA,CAA6E;IAC9EA,uDAAA,EACF;IADEA,gEAAA,MAAAiE,UAAA,CAAAC,gBAAA,OAAAD,UAAA,CAAAE,gBAAA,MACF;;;;;IAMFnE,4DAAA,aAAmD;IAAAA,oDAAA,qBAAc;IAAAA,0DAAA,EAAK;;;;;IACTA,4DAA7D,aAA6D,YAA2C;IAACA,oDAAA,GAAyB;IAAKA,0DAAL,EAAI,EAAM;;;;IAA5EA,uDAAA,EAAuC;IAAvCA,oEAAA,mBAAAuE,WAAA,CAAAC,aAAA,OAAAxE,2DAAA,CAAuC;IAAEA,uDAAA,EAAyB;IAAzBA,gEAAA,MAAAuE,WAAA,CAAAC,aAAA,KAAyB;;;;;IAKlIxE,4DAAA,aAAsC;IAAAA,oDAAA,cAAO;IAAAA,0DAAA,EAAK;;;;;;IAG9CA,4DADF,cAAgH,mBACM;IAA5EA,wDAAA,oBAAA0E,2EAAAC,MAAA;MAAA3E,2DAAA,CAAA6E,IAAA;MAAA,MAAAC,WAAA,GAAA9E,2DAAA,GAAAgF,SAAA;MAAA,MAAAjB,MAAA,GAAA/D,2DAAA;MAAA,OAAAA,yDAAA,CAAU+D,MAAA,CAAAmB,cAAA,CAAAJ,WAAA,EAAAH,MAAA,CAA+B;IAAA,EAAC;IAAlF3E,0DAAA,EAAoH;IACpHA,4DAAA,iBAAiE;IAA5BA,wDAAA,mBAAAmF,2EAAA;MAAAnF,2DAAA,CAAA6E,IAAA;MAAA,MAAAO,aAAA,GAAApF,yDAAA;MAAA,OAAAA,yDAAA,CAASoF,aAAA,CAAAE,KAAA,EAAiB;IAAA,EAAC;IAACtF,oDAAA,cAAO;IAC1EA,0DAD0E,EAAS,EAC7E;;;;;IAEJA,4DAAA,UAAK;IACHA,uDAAA,8BACwJ;;IAC1JA,0DAAA,EAAM;;;;IAFiBA,uDAAA,EAA4B;IAC/CA,wDADmB,aAAA8E,WAAA,CAAAS,OAAA,CAA4B,UAAAT,WAAA,CAAAZ,gBAAA,SAAAY,WAAA,CAAAX,gBAAA,UAAAnE,yDAAA,OAAA8E,WAAA,CAAAW,iBAAA,kBACgF;;;;;IARvIzF,4DAAA,aAAuC;IAKrCA,wDAJA,IAAA0F,kDAAA,kBAAgH,IAAAC,0DAAA,gCAAA3F,oEAAA,CAI9E;IAMpCA,0DAAA,EAAK;;;;;IAVGA,uDAAA,EAAsD;IAAAA,wDAAtD,UAAA8E,WAAA,CAAAW,iBAAA,KAAAX,WAAA,CAAAS,OAAA,CAAsD,aAAAM,uBAAA,CAAwB;;;;;IAaxF7F,uDAAA,aAA4D;;;;;IAC5DA,uDAAA,aAAqH;;;;IAAxDA,wDAAA,YAAAA,6DAAA,IAAAM,GAAA,EAAAwF,OAAA,CAAAL,iBAAA,EAAkD;;;;;IA/CjHzF,4DAAA,gBAA4I;IAE1IA,qEAAA,OAA8C;IAE5CA,wDADA,IAAAgG,2CAAA,iBAA+D,IAAAC,2CAAA,iBACC;;IAUlEjG,qEAAA,OAAqC;IAEnCA,wDADA,IAAAkG,2CAAA,iBAAsC,IAAAC,2CAAA,iBACwB;;IAQhEnG,qEAAA,OAA2C;IAEzCA,wDADA,IAAAoG,2CAAA,iBAAmD,IAAAC,2CAAA,iBACU;;IAI/DrG,qEAAA,QAA+C;IAE7CA,wDADA,KAAAsG,4CAAA,iBAAsC,KAAAC,4CAAA,iBACC;;IAezCvG,wDADA,KAAAwG,4CAAA,iBAAuD,KAAAC,4CAAA,iBACyD;IAClHzG,0DAAA,EAAQ;;;;;IAhDsDA,wDAAA,eAAAwD,aAAA,CAAyB;IA8CjExD,uDAAA,IAAiC;IAAjCA,wDAAA,oBAAA+D,MAAA,CAAA2C,gBAAA,CAAiC;IACpB1G,uDAAA,EAA0B;IAA1BA,wDAAA,qBAAA+D,MAAA,CAAA2C,gBAAA,CAA0B;;;AD5CzD,MAAO1I,oBAAoB;EAU/B6C,YACU8F,kBAAsC,EACtCC,eAAgC,EAChCC,SAAuB,EACvBC,GAAsB;IAHtB,KAAAH,kBAAkB,GAAlBA,kBAAkB;IAClB,KAAAC,eAAe,GAAfA,eAAe;IACf,KAAAC,SAAS,GAATA,SAAS;IACT,KAAAC,GAAG,GAAHA,GAAG;IAbJ,KAAAC,WAAW,GAAG,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC;IAKxC,KAAAC,YAAY,GAAgB,IAAI;IAEhC,KAAAN,gBAAgB,GAAa,CAAC,kBAAkB,EAAE,SAAS,EAAE,eAAe,EAAE,mBAAmB,CAAC;IAQhG,IAAI,CAACO,KAAK,GAAG,IAAI,CAACC,UAAU,CAAC,IAAIC,IAAI,EAAE,CAAC;EAC1C;EAEAjG,QAAQA,CAAA;IACN,IAAI,CAACkG,YAAY,GAAG,IAAI,CAACT,kBAAkB,CAACU,UAAU,EAAE,CAACC,IAAI,CAC3DtE,mDAAG,CAAEuE,IAAI,IAAI;MACX,IAAIA,IAAI,IAAIA,IAAI,CAACzD,MAAM,GAAG,CAAC,EAAE;QAC3B,IAAI,CAAC0D,mBAAmB,CAACD,IAAI,CAAC,CAAC,CAAC,CAAClE,IAAI,EAAE,IAAI,CAAC4D,KAAK,CAAC;MACpD;IACF,CAAC,CAAC,CACH;EACH;EAEAC,UAAUA,CAACO,IAAU;IACnB,MAAMC,KAAK,GAAG,CAAC,GAAG,IAAID,IAAI,CAACE,QAAQ,EAAE,GAAG,CAAC,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC;IACrD,MAAMC,GAAG,GAAG,CAAC,GAAG,GAAGJ,IAAI,CAACK,OAAO,EAAE,EAAEF,KAAK,CAAC,CAAC,CAAC,CAAC;IAC5C,MAAMG,IAAI,GAAGN,IAAI,CAACO,WAAW,EAAE;IAC/B,OAAO,GAAGN,KAAK,IAAIG,GAAG,IAAIE,IAAI,EAAE;EAClC;EAEAP,mBAAmBA,CAACS,UAAkB,EAAEC,YAAoB;IAC1D,MAAMC,aAAa,GAAG,IAAIhB,IAAI,CAACe,YAAY,CAAC,CAACE,WAAW,EAAE,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1E,IAAI,CAACC,cAAc,GAAG,IAAI,CAAC3B,kBAAkB,CAC1C4B,gBAAgB,CAACN,UAAU,EAAEE,aAAa,CAAC,CAC3Cb,IAAI,CAACvE,mDAAG,CAAEyF,aAAa,IAAK,IAAI,CAACC,wBAAwB,CAACD,aAAa,CAAC,CAAC,CAAC;EAC/E;EAEAtD,cAAcA,CAACwD,aAA2B,EAAErH,KAAY;IACtD,MAAMsH,KAAK,GAAGtH,KAAK,CAACuH,MAA0B;IAC9C,IAAID,KAAK,CAACE,KAAK,IAAIF,KAAK,CAACE,KAAK,CAAC/E,MAAM,GAAG,CAAC,EAAE;MACzC,MAAMgF,IAAI,GAAGH,KAAK,CAACE,KAAK,CAAC,CAAC,CAAC;MAC3B,IAAIC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAACC,UAAU,CAAC,QAAQ,CAAC,EAAE;QAC1C,IAAIF,IAAI,CAACG,IAAI,IAAI,IAAI,CAAClC,WAAW,EAAE;UACjC,IAAI,CAACC,YAAY,GAAG8B,IAAI;UACxB,IAAI,CAACI,UAAU,CAACR,aAAa,EAAEI,IAAI,CAAC;QACtC,CAAC,MAAM;UACL,IAAI,CAAClC,eAAe,CAACuC,YAAY,CAAC,yBAAyB,CAAC;QAC9D;MACF,CAAC,MAAM;QACL,IAAI,CAACvC,eAAe,CAACuC,YAAY,CAAC,6BAA6B,CAAC;QAChE,IAAI,CAACnC,YAAY,GAAG,IAAI;MAC1B;IACF;EACF;EAEAkC,UAAUA,CAACR,aAA2B,EAAEI,IAAU;IAChD,IAAI,CAAClC,eAAe,CAACuC,YAAY,CAAC,6BAA6B,CAAC;IAChE,IAAI,CAACxC,kBAAkB,CAACyC,WAAW,CAACV,aAAa,CAACW,EAAE,EAAEP,IAAI,CAAC,CAAC1H,SAAS,CAAC;MACpEkI,IAAI,EAAGjI,KAAK,IAAI;QACd,QAAQA,KAAK,CAAC0H,IAAI;UAChB,KAAK9F,+DAAa,CAACsG,QAAQ;YAAE;cAC3B,MAAMC,mBAAmB,GAAGnI,KAAK,CAACoI,IAAoB;cACtDC,MAAM,CAACC,MAAM,CAACjB,aAAa,EAAEc,mBAAmB,CAAC;cACjD,IAAI,CAAC5C,eAAe,CAACgD,aAAa,EAAE;cACpC,IAAI,CAAC9C,GAAG,CAAC+C,aAAa,EAAE;YAC1B;QACF;MACF;KACD,CAAC;EACJ;EAEA7F,gBAAgBA,CAAC8F,QAAgB,EAAEC,QAAgB;IACjD,MAAMC,GAAG,GAAG,mDAAmDC,kBAAkB,CAACH,QAAQ,GAAG,GAAG,GAAGC,QAAQ,CAAC,EAAE;IAE9G,MAAMG,YAAY,GAAG,IAAI,CAACrD,SAAS,CAACsD,QAAQ,CAACrH,0DAAe,CAACsH,GAAG,EAAEJ,GAAG,CAAC;IACtE,IAAIE,YAAY,EAAE;MAChB,OAAO,IAAI,CAACrD,SAAS,CAACwD,sBAAsB,CAACH,YAAY,CAAC;IAC5D,CAAC,MAAM;MACL,OAAO,EAAE;IACX;EACF;EAEQzB,wBAAwBA,CAACD,aAA6B;IAC5D,KAAK,IAAI8B,CAAC,GAAG9B,aAAa,CAAC1E,MAAM,GAAG,CAAC,EAAEwG,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MACjD,MAAMC,WAAW,GAAG/B,aAAa,CAAC8B,CAAC,CAAC;MACpC,MAAME,YAAY,GAAGhC,aAAa,CAAC8B,CAAC,GAAG,CAAC,CAAC;MAEzC,MAAMG,WAAW,GAAG,IAAItD,IAAI,CAACoD,WAAW,CAACG,kBAAkB,CAAC,CAACC,OAAO,EAAE;MACtE,MAAMC,YAAY,GAAG,IAAIzD,IAAI,CAACqD,YAAY,CAACE,kBAAkB,CAAC,CAACC,OAAO,EAAE;MAExE,MAAME,uBAAuB,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACN,WAAW,GAAGG,YAAY,IAAI,KAAK,CAAC;MAChFL,WAAW,CAAC5G,cAAc,GAAGkH,uBAAuB;IACtD;IAEA,IAAIrC,aAAa,CAAC1E,MAAM,GAAG,CAAC,EAAE;MAC5B0E,aAAa,CAAC,CAAC,CAAC,CAAC7E,cAAc,GAAGqH,SAAS,CAAC,CAAC;IAC/C;IACA,OAAOxC,aAAa;EACtB;EAAC,QAAAxJ,CAAA;qBAxGUhB,oBAAoB,EAAAgC,+DAAA,CAAAX,8EAAA,GAAAW,+DAAA,CAAA0C,8EAAA,GAAA1C,+DAAA,CAAAmL,mEAAA,GAAAnL,+DAAA,CAAAA,4DAAA;EAAA;EAAA,QAAAf,EAAA;UAApBjB,oBAAoB;IAAA0D,SAAA;IAAAC,UAAA;IAAAC,QAAA,GAAA5B,iEAAA;IAAA8B,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAqJ,8BAAAnJ,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;QCvB/BnC,4DADF,aAAuB,aACQ;QAC3BA,uDAAA,aAA8C;QAChDA,0DAAA,EAAM;QAENA,4DAAA,YAAgC;QAAAA,oDAAA,oBAAa;QAAAA,0DAAA,EAAK;QAI9CA,4DAFJ,aAAqB,aACQ,gBACA;QAAAA,oDAAA,mBAAY;QAAAA,0DAAA,EAAQ;QAC7CA,4DAAA,oBAA2G;QAAtEA,wDAAA,oBAAAuL,uDAAA;UAAAvL,2DAAA,CAAAwL,GAAA;UAAA,MAAAC,aAAA,GAAAzL,yDAAA;UAAA,MAAA0L,gBAAA,GAAA1L,yDAAA;UAAA,OAAAA,yDAAA,CAAUoC,GAAA,CAAAoF,mBAAA,CAAAiE,aAAA,CAAAE,KAAA,EAAAD,gBAAA,CAAAC,KAAA,CAA0D;QAAA,EAAC;QACxG3L,wDAAA,KAAA4L,uCAAA,qBAA0H;;QAE9H5L,0DADE,EAAS,EACL;QAGJA,4DADF,eAAkC,iBACL;QAAAA,oDAAA,sBAAc;QAAAA,0DAAA,EAAQ;QACjDA,uDAAA,oBAA0G;QAE9GA,0DADE,EAAM,EACF;QAENA,wDAAA,KAAA6L,sCAAA,qBAA4I;;QAiD9I7L,0DAAA,EAAM;;;QA3DkCA,uDAAA,IAA2B;QAA3BA,wDAAA,YAAAA,yDAAA,QAAAoC,GAAA,CAAAgF,YAAA,EAA2B;QAMRpH,uDAAA,GAAe;QAAfA,wDAAA,UAAAoC,GAAA,CAAA6E,KAAA,CAAe;QAItDjH,uDAAA,GAA6B;QAA7BA,wDAAA,SAAAA,yDAAA,QAAAoC,GAAA,CAAAkG,cAAA,EAA6B;;;mBDArCvI,yDAAY,EAAAgM,oDAAA,EAAAA,oDAAA,EAAAA,iDAAA,EAAAA,sDAAA,EAAAA,qDAAA,EAAE5I,mEAAc,EAAAiJ,6DAAA,EAAAA,qEAAA,EAAAA,oEAAA,EAAAA,iEAAA,EAAAA,+DAAA,EAAAA,8DAAA,EAAAA,kEAAA,EAAAA,4DAAA,EAAAA,iEAAA,EAAAA,2DAAA,EAAElJ,+FAAuB;IAAAN,MAAA;IAAAC,eAAA;EAAA;;;;;;;;;;;;;;;;;;AEnBlB;;;;;;;;;ICqCnB7C,qEAAA,GAAmC;IAC/BA,4DAAA,mBAA+E;IAAAA,oDAAA,aAAM;IAAAA,0DAAA,EAAW;IAChGA,oDAAA,gBACJ;;;;;IAFkCA,uDAAA,EAAgD;IAAhDA,wDAAA,YAAAA,6DAAA,IAAAM,GAAA,EAAAC,MAAA,CAAAwM,cAAA,aAAgD;;;;;IAGlF/M,qEAAA,GAAoC;IAEhCA,oDAAA,eACJ;;;;;;IAbJA,4DADJ,SAA+B,SACvB;IAAAA,oDAAA,GAAsB;IAAAA,0DAAA,EAAK;IAE3BA,4DADJ,aAAwB,mBAC6D;IAAAA,oDAAA,GAAgC;IAAAA,0DAAA,EAAW;IAC5HA,oDAAA,GACJ;;IAAAA,0DAAA,EAAK;IACLA,4DAAA,aAAyB;IAKrBA,wDAJA,IAAAgN,2CAAA,2BAAmC,KAAAC,4CAAA,2BAIC;IAK5CjN,0DADI,EAAK,EACJ;;;;;IAfGA,uDAAA,GAAsB;IAAtBA,+DAAA,CAAAkN,OAAA,CAAAC,WAAA,CAAsB;IAEQnN,uDAAA,GAAkD;IAAlDA,wDAAA,YAAAA,6DAAA,IAAAM,GAAA,EAAAC,MAAA,CAAAwM,cAAA,CAAAG,OAAA,CAAAE,MAAA,GAAkD;IAACpN,uDAAA,EAAgC;IAAhCA,+DAAA,CAAAO,MAAA,CAAA8M,aAAA,CAAAH,OAAA,CAAAE,MAAA,EAAgC;IACjHpN,uDAAA,EACJ;IADIA,gEAAA,MAAAA,yDAAA,OAAAkN,OAAA,CAAAE,MAAA,OACJ;IAEmBpN,uDAAA,GAAkB;IAAlBA,wDAAA,SAAAkN,OAAA,CAAAI,OAAA,CAAkB;IAIlBtN,uDAAA,EAAmB;IAAnBA,wDAAA,UAAAkN,OAAA,CAAAI,OAAA,CAAmB;;;;;IAqBtCtN,4DADJ,SAAuC,SAC/B;IAAAA,oDAAA,GAAmB;IAAAA,0DAAA,EAAK;IAExBA,4DADJ,aAAwB,mBACiE;IAAAA,oDAAA,GAAoC;IAAAA,0DAAA,EAAW;IACpIA,oDAAA,GACJ;;IACJA,0DADI,EAAK,EACJ;;;;;IALGA,uDAAA,GAAmB;IAAnBA,+DAAA,CAAAuN,WAAA,CAAAlK,IAAA,CAAmB;IAEWrD,uDAAA,GAAsD;IAAtDA,wDAAA,YAAAA,6DAAA,IAAAM,GAAA,EAAAC,MAAA,CAAAwM,cAAA,CAAAQ,WAAA,CAAAH,MAAA,GAAsD;IAACpN,uDAAA,EAAoC;IAApCA,+DAAA,CAAAO,MAAA,CAAA8M,aAAA,CAAAE,WAAA,CAAAH,MAAA,EAAoC;IACzHpN,uDAAA,EACJ;IADIA,gEAAA,MAAAA,yDAAA,OAAAuN,WAAA,CAAAH,MAAA,OACJ;;;AD7ClB,MAAOnP,aAAa;EA4BxB4C,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;IA3B1B,KAAAmG,KAAK,GAAS,IAAIE,IAAI,EAAE;IACxB,KAAAqG,SAAS,GAAe,CACtB;MAAEnK,IAAI,EAAE,kBAAkB;MAAE+J,MAAM,EAAE;IAAQ,CAAE,EAC9C;MAAE/J,IAAI,EAAE,aAAa;MAAE+J,MAAM,EAAE;IAAM,CAAE,EACvC;MAAE/J,IAAI,EAAE,iBAAiB;MAAE+J,MAAM,EAAE;IAAU,CAAE,EAC/C;MAAE/J,IAAI,EAAE,gBAAgB;MAAE+J,MAAM,EAAE;IAAQ,CAAE,EAC5C;MAAE/J,IAAI,EAAE,iBAAiB;MAAE+J,MAAM,EAAE;IAAQ,CAAE,EAC7C;MAAE/J,IAAI,EAAE,iBAAiB;MAAE+J,MAAM,EAAE;IAAQ,CAAE,EAC7C;MAAE/J,IAAI,EAAE,qBAAqB;MAAE+J,MAAM,EAAE;IAAQ,CAAE,EACjD;MAAE/J,IAAI,EAAE,mBAAmB;MAAE+J,MAAM,EAAE;IAAQ,CAAE,EAC/C;MAAE/J,IAAI,EAAE,mBAAmB;MAAE+J,MAAM,EAAE;IAAM,CAAE,EAC7C;MAAE/J,IAAI,EAAE,iBAAiB;MAAE+J,MAAM,EAAE;IAAU,CAAE,CAChD;IAED,KAAAK,KAAK,GAAW,CACd;MAAEN,WAAW,EAAE,gCAAgC;MAAEC,MAAM,EAAE,MAAM;MAAEE,OAAO,EAAE;IAAI,CAAE,EAChF;MAAEH,WAAW,EAAE,sCAAsC;MAAEC,MAAM,EAAE,MAAM;MAAEE,OAAO,EAAE;IAAI,CAAE,EACtF;MAAEH,WAAW,EAAE,0BAA0B;MAAEC,MAAM,EAAE,MAAM;MAAEE,OAAO,EAAE;IAAI,CAAE,EAC1E;MAAEH,WAAW,EAAE,kCAAkC;MAAEC,MAAM,EAAE,MAAM;MAAEE,OAAO,EAAE;IAAI,CAAE,EAClF;MAAEH,WAAW,EAAE,+BAA+B;MAAEC,MAAM,EAAE,MAAM;MAAEE,OAAO,EAAE;IAAI,CAAE,EAC/E;MAAEH,WAAW,EAAE,0DAA0D;MAAEC,MAAM,EAAE,MAAM;MAAEE,OAAO,EAAE;IAAK,CAAE,EAC3G;MAAEH,WAAW,EAAE,4BAA4B;MAAEC,MAAM,EAAE,KAAK;MAAEE,OAAO,EAAE;IAAK,CAAE,EAC5E;MAAEH,WAAW,EAAE,yCAAyC;MAAEC,MAAM,EAAE,KAAK;MAAEE,OAAO,EAAE;IAAK,CAAE,EACzF;MAAEH,WAAW,EAAE,yBAAyB;MAAEC,MAAM,EAAE,KAAK;MAAEE,OAAO,EAAE;IAAK,CAAE,EACzE;MAAEH,WAAW,EAAE,uDAAuD;MAAEC,MAAM,EAAE,KAAK;MAAEE,OAAO,EAAE;IAAK,CAAE,CACxG;EAEoC;EAErCpM,QAAQA,CAAA;IACN,IAAI,CAACwM,aAAa,EAAE;IACpB,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAD,aAAaA,CAAA;IACX,IAAI,CAACF,SAAS,CAACI,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAI;MAC3B,MAAMC,WAAW,GAAG;QAAEC,IAAI,EAAE,CAAC;QAAEC,QAAQ,EAAE,CAAC;QAAEC,MAAM,EAAE;MAAC,CAAE;MACvD,OAAOH,WAAW,CAACF,CAAC,CAACT,MAAM,CAAC,GAAGW,WAAW,CAACD,CAAC,CAACV,MAAM,CAAC;IACtD,CAAC,CAAC;EACJ;EAEAO,SAASA,CAAA;IACP,IAAI,CAACF,KAAK,CAACG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAI;MACvB,MAAMC,WAAW,GAAG;QAAEI,IAAI,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAC,CAAE;MACvC,OAAOL,WAAW,CAACF,CAAC,CAACT,MAAM,CAAC,GAAGW,WAAW,CAACD,CAAC,CAACV,MAAM,CAAC;IACtD,CAAC,CAAC;EACJ;EAEAC,aAAaA,CAACD,MAAc;IAC1B,QAAQA,MAAM;MACZ,KAAK,MAAM;MACX,KAAK,UAAU;MACf,KAAK,QAAQ;MACb,KAAK,KAAK;MACV,KAAK,MAAM;QACT,OAAO,QAAQ;MACjB;QACE,OAAO,EAAE;IACb;EACF;EAEAL,cAAcA,CAACK,MAAc;IAC3B,QAAQA,MAAM;MACZ,KAAK,MAAM;QACT,OAAO,KAAK;MACd,KAAK,UAAU;MACf,KAAK,KAAK;QACR,OAAO,QAAQ;MACjB,KAAK,QAAQ;MACb,KAAK,SAAS;QACZ,OAAO,OAAO;MAChB,KAAK,MAAM;QACT,OAAO,KAAK;MACd;QACE,OAAO,EAAE;IACb;EACF;EAEAiB,UAAUA,CAACC,IAAY;IACrB,IAAI,CAACxN,MAAM,CAACyN,QAAQ,CAAC,CAAC,IAAID,IAAI,EAAE,CAAC,CAAC;EACpC;EAAC,QAAAtP,CAAA;qBAjFUf,aAAa,EAAA+B,+DAAA,CAAAX,mDAAA;EAAA;EAAA,QAAAJ,EAAA;UAAbhB,aAAa;IAAAyD,SAAA;IAAAC,UAAA;IAAAC,QAAA,GAAA5B,iEAAA;IAAA8B,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAuM,uBAAArM,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCrBlBnC,4DAFR,aAAuB,aACW,YACT;QAAAA,oDAAA,GAA6B;;QAClDA,0DADkD,EAAK,EACjD;QAIEA,4DAFR,aAA2B,aACN,SACT;QAAAA,oDAAA,oBAAa;QAAAA,0DAAA,EAAK;QACtBA,4DAAA,QAAG;QAAAA,oDAAA,UAAE;QACTA,0DADS,EAAI,EACP;QAEFA,4DADJ,cAAiB,UACT;QAAAA,oDAAA,kBAAU;QAAAA,0DAAA,EAAK;QACnBA,4DAAA,SAAG;QAAAA,oDAAA,aAAK;QACZA,0DADY,EAAI,EACV;QAEFA,4DADJ,cAAiB,UACT;QAAAA,oDAAA,oCAA4B;QAAAA,0DAAA,EAAK;QACrCA,4DAAA,SAAG;QAAAA,oDAAA,WAAG;QAEdA,0DAFc,EAAI,EACR,EACJ;QAIEA,4DAFR,cAA4B,cACN,UACV;QAAAA,oDAAA,aAAK;QAAAA,0DAAA,EAAK;QAIFA,4DAHZ,gBAAyB,aACd,UACC,UACI;QAAAA,oDAAA,mBAAW;QAAAA,0DAAA,EAAK;QACpBA,4DAAA,UAAI;QAAAA,oDAAA,cAAM;QAAAA,0DAAA,EAAK;QACfA,4DAAA,UAAI;QAAAA,oDAAA,eAAO;QAEnBA,0DAFmB,EAAK,EACf,EACD;QACRA,4DAAA,aAAO;QACHA,wDAAA,KAAAyO,4BAAA,kBAA+B;QAmB3CzO,0DAFQ,EAAQ,EACJ,EACN;QAGFA,4DADJ,cAAkB,UACV;QAAAA,oDAAA,iBAAS;QAAAA,0DAAA,EAAK;QAINA,4DAHZ,gBAA6B,aAClB,UACC,UACI;QAAAA,oDAAA,YAAI;QAAAA,0DAAA,EAAK;QACbA,4DAAA,UAAI;QAAAA,oDAAA,cAAM;QAElBA,0DAFkB,EAAK,EACd,EACD;QACRA,4DAAA,aAAO;QACHA,wDAAA,KAAA0O,4BAAA,gBAAuC;QAW3D1O,0DAJgB,EAAQ,EACJ,EACN,EACJ,EACJ;;;QAxEmBA,uDAAA,GAA6B;QAA7BA,+DAAA,CAAAA,yDAAA,OAAAoC,GAAA,CAAA6E,KAAA,cAA6B;QA8BbjH,uDAAA,IAAQ;QAARA,wDAAA,YAAAoC,GAAA,CAAAqL,KAAA,CAAQ;QA+BJzN,uDAAA,IAAY;QAAZA,wDAAA,YAAAoC,GAAA,CAAAoL,SAAA,CAAY;;;mBD3C7CzN,yDAAY,EAAA2C,oDAAA,EAAAA,iDAAA,EAAAA,oDAAA,EAAAA,0DAAA,EAAAA,qDAAA;IAAAE,MAAA;IAAAC,eAAA;EAAA;;;;;;;;;;;;;;;;;;;;;;IGZhB7C,4DADJ,aAA2B,YACC;IAAAA,oDAAA,GAAS;IAAAA,0DAAA,EAAK;IACtCA,4DAAA,gBAAiF;IAA1BA,wDAAA,mBAAA6O,uEAAA;MAAA7O,2DAAA,CAAA8O,GAAA;MAAA,MAAAC,MAAA,GAAA/O,2DAAA;MAAA,OAAAA,yDAAA,CAAS+O,MAAA,CAAAC,QAAA,CAAAC,IAAA,EAAe;IAAA,EAAC;IAC5EjP,4DAAA,cAAyB;IAAAA,oDAAA,aAAO;IAExCA,0DAFwC,EAAO,EAClC,EACP;IAEFA,4DADJ,aAAoC,aAC8E;IAA1BA,wDAA1B,mBAAAkP,oEAAA;MAAAlP,2DAAA,CAAA8O,GAAA;MAAA,MAAAC,MAAA,GAAA/O,2DAAA;MAAA,OAAAA,yDAAA,CAAS+O,MAAA,CAAAC,QAAA,CAAAC,IAAA,EAAe;IAAA,EAAC,mBAAAE,oEAAA;MAAAnP,2DAAA,CAAA8O,GAAA;MAAA,MAAAC,MAAA,GAAA/O,2DAAA;MAAA,OAAAA,yDAAA,CAAU+O,MAAA,CAAAC,QAAA,CAAAC,IAAA,EAAe;IAAA,EAAC;IACjHjP,0DADI,EAA8G,EAC5G;;;;IAPsBA,uDAAA,GAAS;IAATA,+DAAA,CAAA+O,MAAA,CAAAjQ,KAAA,CAAS;IAM5BkB,uDAAA,GAAgB;IAAhBA,wDAAA,QAAA+O,MAAA,CAAAK,QAAA,EAAApP,2DAAA,CAAgB;;;ADJvB,MAAOkD,uBAAuB;EAMlCrC,YAAoBwO,YAA4B;IAA5B,KAAAA,YAAY,GAAZA,YAAY;IALvB,KAAAD,QAAQ,GAAW,EAAE;IACrB,KAAAtQ,KAAK,GAAkB,GAAG;EAIgB;EAEnDwQ,SAASA,CAACrN,QAAuC;IAC/C,IAAI,CAAC+M,QAAQ,GAAG,IAAI,CAACK,YAAY,CAACE,IAAI,CAACtN,QAAQ,EAAEyH,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE;MAAE6F,KAAK,EAAE;IAAU,CAAE,CAAC,CAAC;EAC5F;EAAC,QAAAxQ,CAAA;qBAVUkE,uBAAuB,EAAAlD,+DAAA,CAAAX,+DAAA;EAAA;EAAA,QAAAJ,EAAA;UAAvBiE,uBAAuB;IAAAxB,SAAA;IAAAgO,MAAA;MAAAN,QAAA;MAAAtQ,KAAA;IAAA;IAAA6C,UAAA;IAAAC,QAAA,GAAA5B,iEAAA;IAAA8B,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAA0N,iCAAAxN,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;QCRpCnC,4DAAA,aAAqC;QAAhCA,wDAAA,mBAAA4P,sDAAA;UAAA5P,2DAAA,CAAAwL,GAAA;UAAA,MAAAqE,aAAA,GAAA7P,yDAAA;UAAA,OAAAA,yDAAA,CAASoC,GAAA,CAAAkN,SAAA,CAAAO,aAAA,CAAqB;QAAA,EAAC;QAChC7P,4DAAA,aAAiH;QAA1BA,wDAAA,mBAAA8P,sDAAA;UAAA9P,2DAAA,CAAAwL,GAAA;UAAA,OAAAxL,yDAAA,CAASoC,GAAA,CAAA4M,QAAA,CAAAC,IAAA,EAAe;QAAA,EAAC;QACpHjP,0DADI,EAAiH,EAC/G;QAENA,wDAAA,IAAA+P,8CAAA,gCAAA/P,oEAAA,CAAyB;;;QAHhBA,uDAAA,EAAgB;QAAhBA,wDAAA,QAAAoC,GAAA,CAAAgN,QAAA,EAAApP,2DAAA,CAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACD2C;AAEN;AACA;AACf;;;;;;ICiB3BA,4DADJ,SAAiD,SACzC;IAAAA,oDAAA,GAAa;IAAAA,0DAAA,EAAK;IACtBA,4DAAA,aAAgC;IAAAA,oDAAA,GAA0B;IAAAA,0DAAA,EAAK;IAC/DA,4DAAA,SAAI;IAAAA,oDAAA,GAAmB;IAAAA,0DAAA,EAAK;IAC5BA,4DAAA,SAAI;IAAAA,oDAAA,GAAmB;IAAAA,0DAAA,EAAK;IAC5BA,4DAAA,SAAI;IAAAA,oDAAA,IAAwD;;IAAAA,0DAAA,EAAK;IACjEA,4DAAA,UAAI;IAAAA,oDAAA,IAAc;IACtBA,0DADsB,EAAK,EACtB;;;;IANGA,uDAAA,GAAa;IAAbA,+DAAA,CAAAqQ,OAAA,CAAAhH,EAAA,CAAa;IACerJ,uDAAA,GAA0B;IAA1BA,+DAAA,CAAAqQ,OAAA,CAAAC,eAAA,CAA0B;IACtDtQ,uDAAA,GAAmB;IAAnBA,+DAAA,CAAAqQ,OAAA,CAAAE,QAAA,CAAmB;IACnBvQ,uDAAA,GAAmB;IAAnBA,+DAAA,CAAAqQ,OAAA,CAAAG,QAAA,CAAmB;IACnBxQ,uDAAA,GAAwD;IAAxDA,+DAAA,CAAAA,yDAAA,QAAAqQ,OAAA,CAAAK,WAAA,4BAAwD;IACxD1Q,uDAAA,GAAc;IAAdA,+DAAA,CAAAqQ,OAAA,CAAAM,GAAA,CAAc;;;ADZhC,MAAOtS,kBAAkB;EAU7BwC,YAAoB+P,gBAAkC;IAAlC,KAAAA,gBAAgB,GAAhBA,gBAAgB;IATpC,KAAAtC,IAAI,GAAG,CAAC;IACR,KAAArF,IAAI,GAAG,EAAE;IACT,KAAA4H,UAAU,GAAG,EAAE;IACP,KAAAC,aAAa,GAAoB,IAAIX,yCAAO,EAAU;IAGtD,KAAAY,qBAAqB,GAAG,IAAIb,iDAAe,CAAkB,EAAE,CAAC;IACxE,KAAAc,eAAe,GAAG,IAAI,CAACD,qBAAqB,CAACE,YAAY,EAAE;EAEF;EAEzD/P,QAAQA,CAAA;IACN,IAAI,CAACgQ,QAAQ,EAAE;IAEf,IAAI,CAACC,kBAAkB,GAAG,IAAI,CAACL,aAAa,CACzCxJ,IAAI,CACH2I,oEAAoB,CAAC,IAAI,CAACmB,cAAc,CAAC;IAAE;IAC3CpB,4DAAY,CAAC,GAAG,CAAC,CAClB,CACA5O,SAAS,CAAEyP,UAAU,IAAI;MACxB,IAAI,CAACA,UAAU,GAAGA,UAAU;MAC5B,IAAI,CAACE,qBAAqB,CAACzH,IAAI,CAAC,EAAE,CAAC;MACnC,IAAI,CAAC4H,QAAQ,EAAE;IACjB,CAAC,CAAC;EACN;EAEAA,QAAQA,CAAA;IACNG,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACvB,IAAI,CAACV,gBAAgB,CAACW,iBAAiB,CAAC,IAAI,CAACjD,IAAI,EAAE,IAAI,CAACrF,IAAI,EAAE,IAAI,CAAC4H,UAAU,CAAC,CAACzP,SAAS,CAAC;MACvFkI,IAAI,EAAGkI,cAA+B,IAAI;QACxC,MAAMC,WAAW,GAAG,IAAI,CAACV,qBAAqB,CAACpF,KAAK;QACpD,MAAM+F,OAAO,GAAGF,cAAc,CAACG,MAAM,CAAEC,IAAI,IAAK,CAACH,WAAW,CAACI,IAAI,CAAEC,WAAW,IAAKA,WAAW,CAACzI,EAAE,KAAKuI,IAAI,CAACvI,EAAE,CAAC,CAAC;QAC/G,IAAI,CAAC0H,qBAAqB,CAACzH,IAAI,CAAC,CAAC,GAAGmI,WAAW,EAAE,GAAGC,OAAO,CAAC,CAAC,CAAC,CAAC;MACjE;KACD,CAAC;EACJ;EAEAK,QAAQA,CAAA;IACN,IAAI,CAACzD,IAAI,EAAE;IACX,IAAI,CAAC4C,QAAQ,EAAE;EACjB;EAEAc,cAAcA,CAAC3Q,KAAY;IACzB,MAAMwP,UAAU,GAAIxP,KAAK,CAACuH,MAA2B,CAAC+C,KAAK;IAC3D,IAAI,CAAC2C,IAAI,GAAG,CAAC,CAAC,CAAC;IACf,IAAI,CAACwC,aAAa,CAACxH,IAAI,CAACuH,UAAU,CAAC;EACrC;EAEQO,cAAcA,CAACa,IAAY,EAAEC,IAAY;IAC/C,OAAOD,IAAI,CAACE,IAAI,EAAE,KAAKD,IAAI,CAACC,IAAI,EAAE;EACpC;EAEAC,WAAWA,CAAA;IACT,IAAI,IAAI,CAACjB,kBAAkB,EAAE;MAC3B,IAAI,CAACA,kBAAkB,CAACkB,WAAW,EAAE;IACvC;EACF;EAAC,QAAArT,CAAA;qBAzDUX,kBAAkB,EAAA2B,+DAAA,CAAAX,yEAAA;EAAA;EAAA,QAAAJ,EAAA;UAAlBZ,kBAAkB;IAAAqD,SAAA;IAAAC,UAAA;IAAAC,QAAA,GAAA5B,iEAAA;IAAA8B,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAsQ,4BAAApQ,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QChB/BnC,4DAAA,aAAuH;QAAxBA,wDAAA,sBAAAwS,oDAAA;UAAA,OAAYpQ,GAAA,CAAA2P,QAAA,EAAU;QAAA,EAAC;QAG9G/R,4DADJ,aAAuB,aACU;QACzBA,uDAAA,aAA8C;QAClDA,0DAAA,EAAM;QACNA,4DAAA,YAA4B;QAAAA,oDAAA,gBAAS;QAAAA,0DAAA,EAAK;QAEtCA,4DADJ,aAAqB,eACkE;QAAjCA,wDAAA,mBAAAyS,mDAAA9N,MAAA;UAAA,OAASvC,GAAA,CAAA4P,cAAA,CAAArN,MAAA,CAAsB;QAAA,EAAC;QACtF3E,0DADI,EAAmF,EACjF;QAIMA,4DAHZ,eAA8B,YACnB,UACC,aAC8B;QAAAA,oDAAA,UAAE;QAAAA,0DAAA,EAAK;QACrCA,4DAAA,aAA6C;QAAAA,oDAAA,eAAO;QAAAA,0DAAA,EAAK;QACzDA,4DAAA,aAA8B;QAAAA,oDAAA,YAAI;QAAAA,0DAAA,EAAK;QACvCA,4DAAA,aAA8B;QAAAA,oDAAA,YAAI;QAAAA,uDAAA,UAAI;QAAAA,oDAAA,YAAI;QAAAA,0DAAA,EAAK;QAC/CA,4DAAA,aAA8B;QAAAA,oDAAA,aAAK;QAAAA,0DAAA,EAAK;QACxCA,4DAAA,aAA8B;QAAAA,oDAAA,SAAC;QAAAA,uDAAA,UAAI;QAAAA,oDAAA,SAAC;QAAAA,uDAAA,UAAI;QAAAA,oDAAA,SAAC;QAEjDA,0DAFiD,EAAK,EAC7C,EACD;QACRA,4DAAA,aAAO;QACHA,wDAAA,KAAA0S,iCAAA,mBAAiD;;QAWjE1S,0DAHY,EAAQ,EACJ,EACN,EACJ;;;QAjC2DA,wDAA7B,6BAA4B,8BAA8B;QAsBzDA,uDAAA,IAA0B;QAA1BA,wDAAA,YAAAA,yDAAA,QAAAoC,GAAA,CAAA4O,eAAA,EAA0B;;;mBDTnDjR,yDAAY,EAAA2C,oDAAA,EAAAA,sDAAA,EAAAA,yDAAA,EAAE0N,wEAAuB;IAAAxN,MAAA;IAAAC,eAAA;EAAA;;;;;;;;;;;;;;;;;AEJ3C,MAAO1E,cAAc;EAAA,QAAAa,CAAA;qBAAdb,cAAc;EAAA;EAAA,QAAAc,EAAA;UAAdd,cAAc;IAAAuD,SAAA;IAAAC,UAAA;IAAAC,QAAA,GAAA5B,iEAAA;IAAA8B,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAA2Q,wBAAAzQ,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCTfnC,uDAAZ,SAAM,SAAM,SAAM;QAElBA,4DAAA,YAAiC;QAAAA,oDAAA,iBAAU;QAAAA,0DAAA,EAAK;QAEwEA,uDAAxH,SAAM,SAAM,SAAM,SAAM,SAAM,UAAM,UAAM,UAAM,UAAM,UAAM,UAAM,UAAM,UAAM,UAAM,UAAM,UAAM,UAAM,UAAM,UAAM,UAAM,UAAM;;;;;;;;;;;;;;;;;;;;;;ACJ/E;;;;;;;;ICA/CA,4DAAA,aAAsG;IAClGA,uDAAA,aAAyC;IAC7CA,0DAAA,EAAM;;;;IAFyCA,wDAAA,YAAAA,6DAAA,IAAAM,GAAA,EAAAC,MAAA,CAAAsS,oBAAA,EAAsD;IAC5F7S,uDAAA,EAAgB;IAAhBA,wDAAA,QAAAO,MAAA,CAAAuS,QAAA,EAAA9S,2DAAA,CAAgB;;;ADSnB,MAAO+S,aAAa;EAP1BlS,YAAA;IAUE,KAAAiS,QAAQ,GAAG,qBAAqB;IAChC,KAAAD,oBAAoB,GAAG,SAAS;;EAEhCG,WAAWA,CAAA;IACT,IAAI,IAAI,CAACC,SAAS,KAAK,CAAC,EAAE;MACxB,IAAI,CAACH,QAAQ,GAAG,qBAAqB;MACrC,IAAI,CAACD,oBAAoB,GAAG,SAAS,CAAC,CAAC;IACzC,CAAC,MAAM;MACL,IAAI,CAACC,QAAQ,GAAG,iBAAiB;MACjC,IAAI,CAACD,oBAAoB,GAAG,oBAAoB,CAAC,CAAC;IACpD;EACF;EAAC,QAAA7T,CAAA;qBAdU+T,aAAa;EAAA;EAAA,QAAA9T,EAAA;UAAb8T,aAAa;IAAArR,SAAA;IAAAgO,MAAA;MAAAuD,SAAA;IAAA;IAAAtR,UAAA;IAAAC,QAAA,GAAA5B,kEAAA,EAAAA,iEAAA;IAAA8B,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAkR,uBAAAhR,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV1BnC,wDAAA,IAAAoT,4BAAA,iBAAsG;;;QAAhGpT,wDAAA,SAAAoC,GAAA,CAAA6Q,SAAA,CAAe;;;mBDMTlT,yDAAY,EAAAV,iDAAA,EAAAA,oDAAA;IAAAuD,MAAA;EAAA;;;;;;;;;;;;;;;;;AEGlB,MAAOxE,eAAe;EAAA,QAAAY,CAAA;qBAAfZ,eAAe;EAAA;EAAA,QAAAa,EAAA;UAAfb,eAAe;IAAAsD,SAAA;IAAAC,UAAA;IAAAC,QAAA,GAAA5B,iEAAA;IAAA8B,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAoR,yBAAAlR,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCThBnC,uDAAZ,SAAM,SAAM,SAAM;QAElBA,4DAAA,YAAiC;QAAAA,oDAAA,kBAAW;QAAAA,0DAAA,EAAK;QAEuEA,uDAAxH,SAAM,SAAM,SAAM,SAAM,SAAM,UAAM,UAAM,UAAM,UAAM,UAAM,UAAM,UAAM,UAAM,UAAM,UAAM,UAAM,UAAM,UAAM,UAAM,UAAM,UAAM;;;;;;;;;;;;;;;;;;;;;;;;ACFrE;AACF;;;;;;ICgB/CA,4DADF,SAA+C,SACzC;IAAAA,oDAAA,GAAgC;IAAAA,0DAAA,EAAK;IACzCA,4DAAA,SAAI;IAAAA,oDAAA,GAAsB;IAAAA,0DAAA,EAAK;IAC/BA,4DAAA,SAAI;IAAAA,oDAAA,GAAsB;IAAAA,0DAAA,EAAK;IAC/BA,4DAAA,YAAkB;IAAAA,oDAAA,GAAyC;;IAAAA,0DAAA,EAAK;IAChEA,4DAAA,UAAI;IAAAA,oDAAA,IAAsB;IAC5BA,0DAD4B,EAAK,EAC5B;;;;IALCA,uDAAA,GAAgC;IAAhCA,+DAAA,CAAAsT,UAAA,CAAAC,kBAAA,CAAgC;IAChCvT,uDAAA,GAAsB;IAAtBA,+DAAA,CAAAsT,UAAA,CAAA/C,QAAA,CAAsB;IACtBvQ,uDAAA,GAAsB;IAAtBA,+DAAA,CAAAsT,UAAA,CAAA9C,QAAA,CAAsB;IACRxQ,uDAAA,GAAyC;IAAzCA,+DAAA,CAAAA,yDAAA,OAAAsT,UAAA,CAAAE,UAAA,WAAyC;IACvDxT,uDAAA,GAAsB;IAAtBA,+DAAA,CAAAsT,UAAA,CAAAG,QAAA,CAAsB;;;;;IAe9BzT,4DADF,UAAgC,QAC3B;IAAAA,oDAAA,GAA2C;IAChDA,0DADgD,EAAI,EAC9C;;;;IADDA,uDAAA,GAA2C;IAA3CA,gEAAA,wBAAA0T,MAAA,CAAAC,SAAA,CAAAC,UAAA,KAA2C;;;ADxB5C,MAAOtV,0BAA0B;EAIrCuC,YAAoBC,MAAc,EAAU+S,QAAkB;IAA1C,KAAA/S,MAAM,GAANA,MAAM;IAAkB,KAAA+S,QAAQ,GAARA,QAAQ;EAAa;EAEjE3S,QAAQA,CAAA;IACN,IAAI,CAACyS,SAAS,GAAGG,OAAO,CAACC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;IACzC,IAAI,CAACd,SAAS,GAAGa,OAAO,CAACC,KAAK,CAAC,WAAW,CAAC;EAC7C;EAEAC,MAAMA,CAAA;IACJ,IAAI,CAAClT,MAAM,CAACyN,QAAQ,CAAC,CAAC,aAAa,IAAI,CAACoF,SAAS,CAACM,UAAU,aAAa,CAAC,CAAC;EAC7E;EAAC,QAAAjV,CAAA;qBAbUV,0BAA0B,EAAA0B,+DAAA,CAAAX,mDAAA,GAAAW,+DAAA,CAAA0C,qDAAA;EAAA;EAAA,QAAAzD,EAAA;UAA1BX,0BAA0B;IAAAoD,SAAA;IAAAC,UAAA;IAAAC,QAAA,GAAA5B,iEAAA;IAAA8B,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAkS,oCAAAhS,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCdvCnC,4DAAA,aAAuB;QAEnBA,uDAAA,kBAA6C;QAE/CA,4DAAA,SAAI;QAAAA,oDAAA,GAAmC;QAAAA,0DAAA,EAAK;QAC5CA,4DAAA,QAAG;QAAAA,oDAAA,oEAA6D;QAAAA,0DAAA,EAAI;QACpEA,uDAAA,SAAI;QAIEA,4DAHN,eAA0C,YACjC,SACD,UACE;QAAAA,oDAAA,mBAAW;QAAAA,0DAAA,EAAK;QACpBA,4DAAA,UAAI;QAAAA,oDAAA,iBAAS;QAAAA,0DAAA,EAAK;QAClBA,4DAAA,UAAI;QAAAA,oDAAA,iBAAS;QAAAA,0DAAA,EAAK;QAClBA,4DAAA,UAAI;QAAAA,oDAAA,aAAK;QAAAA,0DAAA,EAAK;QACdA,4DAAA,UAAI;QAAAA,oDAAA,WAAG;QAEXA,0DAFW,EAAK,EACT,EACC;QACRA,4DAAA,aAAO;QACLA,wDAAA,KAAAoU,yCAAA,iBAA+C;QAQnDpU,0DADE,EAAQ,EACF;QAGaA,4DADrB,WAAK,cACgB,cAAQ;QAAAA,oDAAA,eAAO;QAAAA,0DAAA,EAAS;QACzCA,4DAAA,eAAwB;QAAAA,oDAAA,IAA+C;;QAE3EA,0DAF2E,EAAO,EAC1E,EACF;QAGJA,4DADF,WAAK,SACA;QAAAA,oDAAA,IAA8D;;QACnEA,0DADmE,EAAI,EACjE;QACNA,wDAAA,KAAAqU,0CAAA,iBAAgC;QAKhCrU,4DAAA,SAAG;QAAAA,oDAAA,kBAAU;QAAAA,uDAAA,UAAI;QAAAA,oDAAA,uBAAe;QAAAA,0DAAA,EAAI;QACpCA,4DAAA,iBAA0C;QAAnBA,wDAAA,mBAAAsU,6DAAA;UAAA,OAASlS,GAAA,CAAA4R,MAAA,EAAQ;QAAA,EAAC;QAAChU,oDAAA,YAAI;QAChDA,0DADgD,EAAS,EACnD;;;QA1CQA,uDAAA,EAAuB;QAAvBA,wDAAA,cAAAoC,GAAA,CAAA6Q,SAAA,CAAuB;QAE/BjT,uDAAA,GAAmC;QAAnCA,gEAAA,WAAAoC,GAAA,CAAAuR,SAAA,CAAAY,YAAA,MAAmC;QAcXvU,uDAAA,IAAqB;QAArBA,wDAAA,YAAAoC,GAAA,CAAAuR,SAAA,CAAAa,QAAA,CAAqB;QAYrBxU,uDAAA,GAA+C;QAA/CA,+DAAA,CAAAA,yDAAA,QAAAoC,GAAA,CAAAuR,SAAA,CAAAe,UAAA,eAA+C;QAKtE1U,uDAAA,GAA8D;QAA9DA,gEAAA,oBAAAA,yDAAA,SAAAoC,GAAA,CAAAuR,SAAA,CAAAzL,YAAA,oBAA8D;QAE7DlI,uDAAA,GAAwB;QAAxBA,wDAAA,SAAAoC,GAAA,CAAAuR,SAAA,CAAAgB,QAAA,CAAwB;;;mBD1BpB5U,yDAAY,EAAA2C,oDAAA,EAAAA,iDAAA,EAAAA,wDAAA,EAAAA,yDAAA,EAAAA,qDAAA,EAAEqQ,+DAAa;IAAAnQ,MAAA;IAAAC,eAAA;EAAA;;;;;;;;;;;;;;;;;;;AETQ;AACQ;;;;;;ICiB/C7C,4DADF,SAA+C,SACzC;IAAAA,oDAAA,GAAgC;IAAAA,0DAAA,EAAK;IACzCA,4DAAA,SAAI;IAAAA,oDAAA,GAAsB;IAAAA,0DAAA,EAAK;IAC/BA,4DAAA,SAAI;IAAAA,oDAAA,GAAsB;IAAAA,0DAAA,EAAK;IAC/BA,4DAAA,YAAkB;IAAAA,oDAAA,GAA6C;;IAAAA,0DAAA,EAAK;IACpEA,4DAAA,UAAI;IAAAA,oDAAA,IAAsB;IAC5BA,0DAD4B,EAAK,EAC5B;;;;IALCA,uDAAA,GAAgC;IAAhCA,+DAAA,CAAA6U,UAAA,CAAAtB,kBAAA,CAAgC;IAChCvT,uDAAA,GAAsB;IAAtBA,+DAAA,CAAA6U,UAAA,CAAAtE,QAAA,CAAsB;IACtBvQ,uDAAA,GAAsB;IAAtBA,+DAAA,CAAA6U,UAAA,CAAArE,QAAA,CAAsB;IACRxQ,uDAAA,GAA6C;IAA7CA,+DAAA,CAAAA,yDAAA,OAAA6U,UAAA,CAAArB,UAAA,eAA6C;IAC3DxT,uDAAA,GAAsB;IAAtBA,+DAAA,CAAA6U,UAAA,CAAApB,QAAA,CAAsB;;;;;IAkB9BzT,4DADF,UAAgC,QAC3B;IAAAA,oDAAA,GAA2C;IAChDA,0DADgD,EAAI,EAC9C;;;;IADDA,uDAAA,GAA2C;IAA3CA,gEAAA,wBAAA0T,MAAA,CAAAC,SAAA,CAAAC,UAAA,KAA2C;;;AD5B5C,MAAOrV,oBAAoB;EAI/BsC,YAAoBiU,KAAqB;IAArB,KAAAA,KAAK,GAALA,KAAK;EAAmB;EAE5C5T,QAAQA,CAAA;IACN,IAAI,CAACyS,SAAS,GAAGG,OAAO,CAACC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;IACzC,IAAI,CAACd,SAAS,GAAGa,OAAO,CAACC,KAAK,CAAC,WAAW,CAAC;EAC7C;EAEAC,MAAMA,CAAA;IACJe,MAAM,CAACjB,OAAO,CAACkB,IAAI,EAAE;EACvB;EAAC,QAAAhW,CAAA;qBAbUT,oBAAoB,EAAAyB,+DAAA,CAAAX,2DAAA;EAAA;EAAA,QAAAJ,EAAA;UAApBV,oBAAoB;IAAAmD,SAAA;IAAAC,UAAA;IAAAC,QAAA,GAAA5B,iEAAA;IAAA8B,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAiT,8BAAA/S,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCdjCnC,4DAAA,aAAuB;QACrBA,uDAAA,kBAA6C;QAE7CA,4DAAA,SAAI;QAAAA,oDAAA,qBAAc;QAAAA,0DAAA,EAAK;QACvBA,4DAAA,aAA+C;QAC7CA,oDAAA,mIACF;QAAAA,0DAAA,EAAM;QACNA,uDAAA,SAAI;QAIEA,4DAHN,eAA0C,YACjC,SACD,UACE;QAAAA,oDAAA,2BAAmB;QAAAA,0DAAA,EAAK;QAC5BA,4DAAA,UAAI;QAAAA,oDAAA,iBAAS;QAAAA,0DAAA,EAAK;QAClBA,4DAAA,UAAI;QAAAA,oDAAA,iBAAS;QAAAA,0DAAA,EAAK;QAClBA,4DAAA,UAAI;QAAAA,oDAAA,aAAK;QAAAA,0DAAA,EAAK;QACdA,4DAAA,UAAI;QAAAA,oDAAA,WAAG;QAEXA,0DAFW,EAAK,EACT,EACC;QACRA,4DAAA,aAAO;QACLA,wDAAA,KAAAmV,mCAAA,iBAA+C;QAQnDnV,0DADE,EAAQ,EACF;QAGaA,4DADrB,WAAK,cACgB,cAAQ;QAAAA,oDAAA,eAAO;QAAAA,0DAAA,EAAS;QACzCA,4DAAA,eAAwB;QAAAA,oDAAA,IAA+C;;QAE3EA,0DAF2E,EAAO,EAC1E,EACF;QAGJA,4DADF,WAAK,SACA;QAAAA,oDAAA,IAAqC;QAC1CA,0DAD0C,EAAI,EACxC;QAEJA,4DADF,WAAK,SACA;QAAAA,oDAAA,IAA8D;;QACnEA,0DADmE,EAAI,EACjE;QACNA,wDAAA,KAAAoV,oCAAA,iBAAgC;QAMhCpV,4DAAA,iBAA0C;QAAnBA,wDAAA,mBAAAqV,uDAAA;UAAA,OAASjT,GAAA,CAAA4R,MAAA,EAAQ;QAAA,EAAC;QAAChU,oDAAA,YAAI;QAChDA,0DADgD,EAAS,EACnD;;;QA/CMA,uDAAA,EAAuB;QAAvBA,wDAAA,cAAAoC,GAAA,CAAA6Q,SAAA,CAAuB;QAkBLjT,uDAAA,IAAqB;QAArBA,wDAAA,YAAAoC,GAAA,CAAAuR,SAAA,CAAAa,QAAA,CAAqB;QAYrBxU,uDAAA,GAA+C;QAA/CA,+DAAA,CAAAA,yDAAA,QAAAoC,GAAA,CAAAuR,SAAA,CAAAe,UAAA,eAA+C;QAKtE1U,uDAAA,GAAqC;QAArCA,gEAAA,gBAAAoC,GAAA,CAAAuR,SAAA,CAAA2B,YAAA,KAAqC;QAGrCtV,uDAAA,GAA8D;QAA9DA,gEAAA,oBAAAA,yDAAA,SAAAoC,GAAA,CAAAuR,SAAA,CAAAzL,YAAA,oBAA8D;QAE7DlI,uDAAA,GAAwB;QAAxBA,wDAAA,SAAAoC,GAAA,CAAAuR,SAAA,CAAAgB,QAAA,CAAwB;;;mBD9BpB5U,yDAAY,EAAA2C,oDAAA,EAAAA,iDAAA,EAAAA,yDAAA,EAAAA,qDAAA,EAAEqQ,+DAAa;IAAAnQ,MAAA;IAAAC,eAAA;EAAA;;;;;;;;;;;;;;;;;;;;;;;;AEXQ;AAGwF;AAC5E;AAGJ;;;;;;;;;;;;;ICAxC7C,4DADP,cAAkF,QAC3E,aAAQ;IAAAA,oDAAA,gBAAS;IAAAA,0DAAA,EAAS;IAACA,uDAAA,SAAI;IAC9BA,oDAAA,GAAwB;IAAAA,0DAAA,EAAI;IAE5BA,4DADJ,cAA4B,aAChB;IAAAA,oDAAA,iBAAU;IAAAA,0DAAA,EAAS;IAACA,uDAAA,SAAI;IAChCA,oDAAA,IACA;IAAAA,uDAAA,UAAI;IAAAA,4DAAA,aAAyC;IAAAA,oDAAA,IAAyB;IAE9EA,0DAF8E,EAAI,EACxE,EACJ;;;;IANEA,uDAAA,GAAwB;IAAxBA,gEAAA,MAAA0T,MAAA,CAAA+B,KAAA,CAAAlB,YAAA,KAAwB;IAGxBvU,uDAAA,GACA;IADAA,gEAAA,MAAA0T,MAAA,CAAA+B,KAAA,CAAAH,YAAA,MACA;IAAOtV,uDAAA,GAAqC;IAArCA,wDAAA,kBAAA0T,MAAA,CAAA+B,KAAA,CAAAC,aAAA,EAAA1V,2DAAA,CAAqC;IAACA,uDAAA,EAAyB;IAAzBA,+DAAA,CAAA0T,MAAA,CAAA+B,KAAA,CAAAC,aAAA,CAAyB;;;;;IAQtE1V,4DAAA,iBAAiE;IAAAA,oDAAA,GAAuB;IAAAA,0DAAA,EAAS;;;;IAApDA,wDAAA,UAAA2V,SAAA,CAAAtM,EAAA,CAAmB;IAACrJ,uDAAA,EAAuB;IAAvBA,+DAAA,CAAA2V,SAAA,CAAA/B,UAAA,CAAuB;;;;;IAE5F5T,4DAAA,cAAuJ;IACnJA,oDAAA,6BACJ;IAAAA,0DAAA,EAAM;;;;;IANeA,4DADzB,aAA6B,gBACJ,aAAQ;IAAAA,oDAAA,eAAQ;IAASA,0DAAT,EAAS,EAAQ;IACtDA,4DAAA,iBAAqE;IACjEA,wDAAA,IAAA4V,+DAAA,qBAAiE;IACrE5V,0DAAA,EAAS;IACTA,wDAAA,IAAA6V,4DAAA,kBAAuJ;IAG3J7V,0DAAA,EAAM;;;;;IAL6BA,uDAAA,GAAgB;IAAhBA,wDAAA,YAAA0T,MAAA,CAAA+B,KAAA,CAAAK,OAAA,CAAgB;IAEzC9V,uDAAA,EAAiI;IAAjIA,wDAAA,YAAA+V,OAAA,GAAArC,MAAA,CAAAsC,SAAA,CAAAC,GAAA,+BAAAF,OAAA,CAAAG,OAAA,OAAAH,OAAA,GAAArC,MAAA,CAAAsC,SAAA,CAAAC,GAAA,+BAAAF,OAAA,CAAAI,KAAA,QAAAJ,OAAA,GAAArC,MAAA,CAAAsC,SAAA,CAAAC,GAAA,+BAAAF,OAAA,CAAAK,MAAA,kBAAAL,OAAA,CAAAK,MAAA,cAAiI;;;;;IA0BnHpW,4DAAA,cAAoE;IAAAA,oDAAA,4CAAqC;IAAAA,0DAAA,EAAM;;;;;IAJvHA,4DAAA,aAA2I;IACvIA,uDAAA,gBAAiF;IACjFA,4DAAA,SAAI;IAAAA,oDAAA,GAA0C;IAAAA,0DAAA,EAAK;IACnDA,4DAAA,SAAI;IAAAA,uDAAA,gBAAqE;IACrEA,wDAAA,IAAAqW,iFAAA,kBAAoE;IACxErW,0DAAA,EAAK;IACLA,4DAAA,SAAI;IAAAA,oDAAA,GAAgC;IAAAA,0DAAA,EAAK;IACzCA,4DAAA,SAAI;IAAAA,oDAAA,IAAgC;IAAAA,0DAAA,EAAK;IACzCA,4DAAA,UAAI;IAAAA,oDAAA,IAAmE;;IAAAA,0DAAA,EAAK;IAC5EA,4DAAA,UAAI;IAAAA,oDAAA,IAA2D;;IACnEA,0DADmE,EAAK,EACnE;;;;;;;;IAVuDA,wDAApB,kBAAAsW,IAAA,CAAmB,YAAAtW,6DAAA,KAAAM,GAAA,EAAAoT,MAAA,CAAA6C,iBAAA,CAAAD,IAAA,2BAA+E;IAElItW,uDAAA,GAA0C;IAA1CA,+DAAA,CAAA0T,MAAA,CAAA+B,KAAA,CAAAjB,QAAA,CAAA8B,IAAA,EAAA/C,kBAAA,CAA0C;IAEpCvT,uDAAA,GAA8C;IAA9CA,wDAAA,UAAAwW,OAAA,GAAAC,UAAA,CAAAR,GAAA,+BAAAO,OAAA,CAAAJ,MAAA,kBAAAI,OAAA,CAAAJ,MAAA,QAA8C;IAEpDpW,uDAAA,GAAgC;IAAhCA,+DAAA,CAAA0T,MAAA,CAAA+B,KAAA,CAAAjB,QAAA,CAAA8B,IAAA,EAAA/F,QAAA,CAAgC;IAChCvQ,uDAAA,GAAgC;IAAhCA,+DAAA,CAAA0T,MAAA,CAAA+B,KAAA,CAAAjB,QAAA,CAAA8B,IAAA,EAAA9F,QAAA,CAAgC;IAChCxQ,uDAAA,GAAmE;IAAnEA,+DAAA,CAAAA,yDAAA,QAAA0T,MAAA,CAAA+B,KAAA,CAAAjB,QAAA,CAAA8B,IAAA,EAAA9C,UAAA,4BAAmE;IACnExT,uDAAA,GAA2D;IAA3DA,+DAAA,CAAAA,yDAAA,SAAA0T,MAAA,CAAAgD,gBAAA,CAAAJ,IAAA,6BAA2D;;;;;IAVvEtW,qEAAA,GAA8E;IAC1EA,wDAAA,IAAA2W,2EAAA,mBAA2I;;;;;;IAAtI3W,uDAAA,EAAiC;IAAjCA,wDAAA,SAAA0T,MAAA,CAAA+B,KAAA,CAAAjB,QAAA,CAAA8B,IAAA,EAAAM,SAAA,CAAiC;;;;;IAftD5W,4DAAA,YAA0B;IAAAA,oDAAA,eAAQ;IAAAA,0DAAA,EAAK;IAKvBA,4DAJhB,aAA+C,eACtB,YACV,SACC,SACI;IAAAA,oDAAA,kBAAW;IAAAA,0DAAA,EAAK;IACpBA,4DAAA,SAAI;IAAAA,oDAAA,UAAG;IAAAA,0DAAA,EAAK;IACZA,4DAAA,UAAI;IAAAA,oDAAA,iBAAS;IAAAA,0DAAA,EAAK;IAClBA,4DAAA,UAAI;IAAAA,oDAAA,iBAAS;IAAAA,0DAAA,EAAK;IAClBA,4DAAA,UAAI;IAAAA,oDAAA,aAAK;IAAAA,0DAAA,EAAK;IACdA,4DAAA,UAAI;IAAAA,oDAAA,aAAK;IAEjBA,0DAFiB,EAAK,EACb,EACD;IACRA,4DAAA,aAAO;IACHA,wDAAA,KAAA6W,sEAAA,2BAA8E;IAe1F7W,0DAFQ,EAAQ,EACJ,EACN;;;;IAfwCA,uDAAA,IAA6B;IAA7BA,wDAAA,YAAA0T,MAAA,CAAAoD,eAAA,CAAAC,QAAA,CAA6B;;;;;IAqCnD/W,4DAAA,cAAoE;IAAAA,oDAAA,4CAAqC;IAAAA,0DAAA,EAAM;;;;;IAJvHA,4DAAA,aAA4I;IACxIA,uDAAA,gBAAiF;IACjFA,4DAAA,SAAI;IAAAA,oDAAA,GAA0C;IAAAA,0DAAA,EAAK;IACnDA,4DAAA,SAAI;IAAAA,uDAAA,gBAAqE;IACrEA,wDAAA,IAAAgX,mEAAA,kBAAoE;IACxEhX,0DAAA,EAAK;IACLA,4DAAA,SAAI;IAAAA,oDAAA,GAAgC;IAAAA,0DAAA,EAAK;IACzCA,4DAAA,SAAI;IAAAA,oDAAA,IAAgC;IAAAA,0DAAA,EAAK;IACzCA,4DAAA,UAAI;IAAAA,oDAAA,IAAmE;;IAAAA,0DAAA,EAAK;IAC5EA,4DAAA,UAAI;IAAAA,oDAAA,IAA2D;;IACnEA,0DADmE,EAAK,EACnE;;;;;;;;IAVwDA,wDAApB,kBAAAiX,IAAA,CAAmB,YAAAjX,6DAAA,KAAAM,GAAA,EAAAoT,MAAA,CAAA6C,iBAAA,CAAAU,IAAA,2BAA+E;IAEnIjX,uDAAA,GAA0C;IAA1CA,+DAAA,CAAA0T,MAAA,CAAA+B,KAAA,CAAAjB,QAAA,CAAAyC,IAAA,EAAA1D,kBAAA,CAA0C;IAEpCvT,uDAAA,GAA8C;IAA9CA,wDAAA,UAAAkX,OAAA,GAAAC,UAAA,CAAAlB,GAAA,+BAAAiB,OAAA,CAAAd,MAAA,kBAAAc,OAAA,CAAAd,MAAA,QAA8C;IAEpDpW,uDAAA,GAAgC;IAAhCA,+DAAA,CAAA0T,MAAA,CAAA+B,KAAA,CAAAjB,QAAA,CAAAyC,IAAA,EAAA1G,QAAA,CAAgC;IAChCvQ,uDAAA,GAAgC;IAAhCA,+DAAA,CAAA0T,MAAA,CAAA+B,KAAA,CAAAjB,QAAA,CAAAyC,IAAA,EAAAzG,QAAA,CAAgC;IAChCxQ,uDAAA,GAAmE;IAAnEA,+DAAA,CAAAA,yDAAA,QAAA0T,MAAA,CAAA+B,KAAA,CAAAjB,QAAA,CAAAyC,IAAA,EAAAzD,UAAA,4BAAmE;IACnExT,uDAAA,GAA2D;IAA3DA,+DAAA,CAAAA,yDAAA,SAAA0T,MAAA,CAAAgD,gBAAA,CAAAO,IAAA,6BAA2D;;;;;IAVvEjX,qEAAA,GAA8E;IAC1EA,wDAAA,IAAAoX,6DAAA,mBAA4I;;;;;;IAAvIpX,uDAAA,EAAkC;IAAlCA,wDAAA,UAAA0T,MAAA,CAAA+B,KAAA,CAAAjB,QAAA,CAAAyC,IAAA,EAAAL,SAAA,CAAkC;;;;;IAcnD5W,4DAAA,cAAkG;IAC9FA,oDAAA,0CACJ;IAAAA,0DAAA,EAAM;;;;;IAGVA,4DAAA,cAAqG;IACjGA,oDAAA,oCACJ;IAAAA,0DAAA,EAAM;;;;;IAIFA,4DAAA,cAA8C;IAAAA,oDAAA,4CAAqC;IAAAA,0DAAA,EAAM;;;;;IAWzFA,4DAAA,cAAqH;IACjHA,oDAAA,mCACJ;IAAAA,0DAAA,EAAM;;;;;IACNA,4DAAA,cAA4H;IACxHA,oDAAA,2CACJ;IAAAA,0DAAA,EAAM;;;;;IACNA,4DAAA,cAAgI;IAC5HA,oDAAA,+CACJ;IAAAA,0DAAA,EAAM;;;;;IACNA,4DAAA,cAA0H;IACtHA,oDAAA,2CACJ;IAAAA,0DAAA,EAAM;;;;;;IA1HlBA,4DAAA,cAAyE;IAA3CA,wDAAA,sBAAAqX,kEAAA;MAAArX,2DAAA,CAAAwL,GAAA;MAAA,MAAAkI,MAAA,GAAA1T,2DAAA;MAAA,OAAAA,yDAAA,CAAY0T,MAAA,CAAA4D,QAAA,EAAU;IAAA,EAAC;IACjDtX,4DAAA,aAAuB;IACnBA,uDAAA,kBAAmD;IACnDA,4DAAA,YAAuB;IAAAA,oDAAA,iBAAU;IAAAA,0DAAA,EAAK;IAwBtCA,wDAtBA,IAAAuX,8CAAA,kBAAkF,IAAAC,sDAAA,iBAU7D,IAAAC,sDAAA,QAYF;IAiCnBzX,4DAAA,YAA0B;IAAAA,oDAAA,eAAQ;IAAAA,0DAAA,EAAK;IAKvBA,4DAJhB,cAA+C,gBACtB,aACV,UACC,UACI;IAAAA,oDAAA,mBAAW;IAAAA,0DAAA,EAAK;IACpBA,4DAAA,UAAI;IAAAA,oDAAA,WAAG;IAAAA,0DAAA,EAAK;IACZA,4DAAA,UAAI;IAAAA,oDAAA,iBAAS;IAAAA,0DAAA,EAAK;IAClBA,4DAAA,UAAI;IAAAA,oDAAA,iBAAS;IAAAA,0DAAA,EAAK;IAClBA,4DAAA,UAAI;IAAAA,oDAAA,aAAK;IAAAA,0DAAA,EAAK;IACdA,4DAAA,UAAI;IAAAA,oDAAA,aAAK;IAEjBA,0DAFiB,EAAK,EACb,EACD;IACRA,4DAAA,aAAO;IACHA,wDAAA,KAAA0X,wDAAA,2BAA8E;IActF1X,0DADI,EAAQ,EACJ;IACRA,wDAAA,KAAA2X,+CAAA,kBAAkG;IAGtG3X,0DAAA,EAAM;IAENA,wDAAA,KAAA4X,+CAAA,kBAAqG;IAIrG5X,4DAAA,eAAyB;IACrBA,uDAAA,UAAI;IAAAA,oDAAA,IACJ;;IAAAA,wDAAA,KAAA6X,+CAAA,kBAA8C;IAClD7X,0DAAA,EAAM;IAGuBA,4DAD7B,WAAK,iBACwB,cAAQ;IAAAA,oDAAA,qBAAa;IAASA,0DAAT,EAAS,EAAQ;IAC/DA,uDAAA,iBAAqF;IACzFA,0DAAA,EAAM;IAGyBA,4DAD/B,eAA2B,iBACI,cAAQ;IAAAA,oDAAA,sBAAc;IAASA,0DAAT,EAAS,EAAQ;IAClEA,uDAAA,iBAAwF;IAUxFA,wDATA,KAAA8X,+CAAA,kBAAqH,KAAAC,+CAAA,kBAGO,KAAAC,+CAAA,kBAGI,KAAAC,+CAAA,kBAGN;IAG9HjY,0DAAA,EAAM;IAENA,uDAAA,UAAI;IAAAA,4DAAA,kBAAuE;IAAAA,oDAAA,cAAM;IAEzFA,0DAFyF,EAAS,EACxF,EACH;;;;;IA/HDA,wDAAA,cAAA0T,MAAA,CAAAsC,SAAA,CAAuB;IAEXhW,uDAAA,GAA6B;IAA7BA,wDAAA,cAAA0T,MAAA,CAAA+B,KAAA,CAAAxC,SAAA,CAA6B;IAGjCjT,uDAAA,GAA8C;IAA9CA,wDAAA,SAAA0T,MAAA,CAAA+B,KAAA,CAAAlB,YAAA,IAAAb,MAAA,CAAA+B,KAAA,CAAAH,YAAA,CAA8C;IAUpDtV,uDAAA,EAUC;IAVDA,2DAAA,CAAA0T,MAAA,CAAA+B,KAAA,CAAAK,OAAA,UAUC;IAED9V,uDAAA,EA+BC;IA/BDA,2DAAA,CAAA0T,MAAA,CAAAwE,WAAA,UA+BC;IAgB6ClY,uDAAA,IAA6B;IAA7BA,wDAAA,YAAA0T,MAAA,CAAAoD,eAAA,CAAAC,QAAA,CAA6B;IAejE/W,uDAAA,EAA4E;IAA5EA,wDAAA,SAAA0T,MAAA,CAAAyE,SAAA,MAAAC,OAAA,GAAA1E,MAAA,CAAAsC,SAAA,CAAAC,GAAA,+BAAAmC,OAAA,CAAAC,QAAA,wBAA4E;IAKhFrY,uDAAA,EAA+E;IAA/EA,wDAAA,SAAA0T,MAAA,CAAAoD,eAAA,CAAAZ,OAAA,KAAAxC,MAAA,CAAAoD,eAAA,CAAAV,MAAA,kBAAA1C,MAAA,CAAAoD,eAAA,CAAAV,MAAA,wBAA+E;IAK7EpW,uDAAA,GACJ;IADIA,gEAAA,kBAAAA,yDAAA,SAAA0T,MAAA,CAAAgB,UAAA,iCACJ;IAAM1U,uDAAA,GAAwB;IAAxBA,wDAAA,SAAA0T,MAAA,CAAAgB,UAAA,SAAwB;IAWxB1U,uDAAA,IAA+F;IAA/FA,wDAAA,SAAA0T,MAAA,CAAA4E,YAAA,iBAAApC,OAAA,KAAAxC,MAAA,CAAA4E,YAAA,iBAAAlC,MAAA,kBAAA1C,MAAA,CAAA4E,YAAA,iBAAAlC,MAAA,cAA+F;IAG/FpW,uDAAA,EAAsG;IAAtGA,wDAAA,SAAA0T,MAAA,CAAA4E,YAAA,iBAAAnC,KAAA,KAAAzC,MAAA,CAAA4E,YAAA,iBAAAlC,MAAA,kBAAA1C,MAAA,CAAA4E,YAAA,iBAAAlC,MAAA,uBAAsG;IAGtGpW,uDAAA,EAA0G;IAA1GA,wDAAA,SAAA0T,MAAA,CAAA4E,YAAA,iBAAAnC,KAAA,KAAAzC,MAAA,CAAA4E,YAAA,iBAAAlC,MAAA,kBAAA1C,MAAA,CAAA4E,YAAA,iBAAAlC,MAAA,2BAA0G;IAG1GpW,uDAAA,EAAoG;IAApGA,wDAAA,SAAA0T,MAAA,CAAA4E,YAAA,iBAAAnC,KAAA,KAAAzC,MAAA,CAAA4E,YAAA,iBAAAlC,MAAA,kBAAA1C,MAAA,CAAA4E,YAAA,iBAAAlC,MAAA,qBAAoG;IAKpFpW,uDAAA,GAA6B;IAA7BA,wDAAA,cAAA0T,MAAA,CAAAsC,SAAA,CAAAuC,KAAA,CAA6B;;;ADxGzD,MAAO/Z,iBAAiB;EAQ5BqC,YACU2X,IAAgB,EAChBC,EAAe,EACf3X,MAAc,EACd8F,eAAgC,EAChC8R,YAA8B,EAC9B5D,KAAqB,EACrBhO,GAAsB;IANtB,KAAA0R,IAAI,GAAJA,IAAI;IACJ,KAAAC,EAAE,GAAFA,EAAE;IACF,KAAA3X,MAAM,GAANA,MAAM;IACN,KAAA8F,eAAe,GAAfA,eAAe;IACf,KAAA8R,YAAY,GAAZA,YAAY;IACZ,KAAA5D,KAAK,GAALA,KAAK;IACL,KAAAhO,GAAG,GAAHA,GAAG;IAdL,KAAAnG,MAAM,GAAGb,qEAAW,CAACa,MAAM;IAEnC,KAAAuX,WAAW,GAAG,KAAK;IAEnB,KAAAC,SAAS,GAAY,KAAK;EAWvB;EAEHjX,QAAQA,CAAA;IACN;IACA,IAAI,CAAC4T,KAAK,CAAC6D,QAAQ,CAACvX,SAAS,CAAEwX,MAAM,IAAI;MACvC,MAAMvP,EAAE,GAAGuP,MAAM,CAAC3C,GAAG,CAAC,IAAI,CAAC;MAC3B,IAAI,CAAChC,UAAU,GAAG5K,EAAE,GAAG,CAACA,EAAE,GAAGwP,GAAG;MAChC,IAAI,CAACC,aAAa,CAAC,IAAI,CAAC7E,UAAU,CAAC;IACrC,CAAC,CAAC;EACJ;EAEA6E,aAAaA,CAAC7E,UAAkB;IAC9B,IAAI,CAACyE,YAAY,CAACK,YAAY,CAAC9E,UAAU,CAAC,CAAC7S,SAAS,CAAC;MACnDkI,IAAI,EAAGmM,KAAY,IAAI;QACrB,IAAI,CAACA,KAAK,GAAGA,KAAK;QAClB,IAAI,CAACyC,WAAW,GAAG,IAAI,CAACzC,KAAK,CAACjB,QAAQ,CAAC3C,IAAI,CAAEmH,OAAO,IAAKA,OAAO,CAACpC,SAAS,CAAC;QAC3E,MAAMqC,gBAAgB,GAAGxD,KAAK,CAACK,OAAO,EAAEhS,MAAM,GAAG,CAAC0R,sDAAU,CAAC0D,QAAQ,CAAC,GAAG,EAAE;QAC3E,IAAI,CAAClD,SAAS,GAAG,IAAI,CAACyC,EAAE,CAACU,KAAK,CAAC;UAC7BlF,UAAU,EAAE,CAACwB,KAAK,CAACxB,UAAU,CAAC;UAC9B/L,YAAY,EAAE,CAAC,EAAE,EAAE,CAACsN,sDAAU,CAAC0D,QAAQ,EAAE,IAAI,CAACE,0BAA0B,EAAE,IAAI,CAACC,8BAA8B,EAAE,IAAI,CAACC,wBAAwB,CAAC,CAAC;UAC9I3E,QAAQ,EAAE,CAAC,EAAE,EAAEsE,gBAAgB,CAAC;UAChCM,UAAU,EAAE,CAAC,EAAE,CAAC;UAChB7E,UAAU,EAAE,CAAC,CAAC,CAAC;UAAE;UACjBF,QAAQ,EAAE,IAAI,CAACiE,EAAE,CAACe,KAAK,CACrB,IAAI,CAAC/D,KAAK,CAACjB,QAAQ,CAACzR,GAAG,CAAEiW,OAAO,IAAK,IAAI,CAACS,kBAAkB,CAACT,OAAO,CAAC,CAAC,EACtE,CAAC,IAAI,CAACU,2BAA2B,CAAC;SAErC,CAAC;QACF,IAAI,CAAC5S,GAAG,CAAC6S,YAAY,EAAE;MACzB;KACD,CAAC;EACJ;EAEA,IAAIrB,YAAYA,CAAA;IACd,OAAO,IAAI,CAACtC,SAAS,CAACe,QAAQ;EAChC;EAEA,IAAID,eAAeA,CAAA;IACjB,OAAO,IAAI,CAACd,SAAS,CAACC,GAAG,CAAC,UAAU,CAAc;EACpD;EAEA,IAAIvB,UAAUA,CAAA;IACZ,IAAIA,UAAU,GAAG,CAAC;IAClB,KAAK,IAAIpK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACmL,KAAK,CAACjB,QAAQ,CAAC1Q,MAAM,EAAEwG,CAAC,EAAE,EAAE;MACnD,MAAMmJ,QAAQ,GAAG,IAAI,CAACqD,eAAe,CAAC8C,EAAE,CAACtP,CAAC,CAAC,CAAC2L,GAAG,CAAC,UAAU,CAAC,EAAEtK,KAAK,IAAI,CAAC;MACvE,MAAM6E,QAAQ,GAAG,IAAI,CAACiF,KAAK,CAACjB,QAAQ,CAAClK,CAAC,CAAC,CAACkG,QAAQ,IAAI,CAAC,CAAC,CAAC;MACvD,MAAMqJ,KAAK,GAAG,IAAI,CAACpE,KAAK,CAACjB,QAAQ,CAAClK,CAAC,CAAC,CAACkJ,UAAU,IAAI,CAAC,CAAC,CAAC;MACtDkB,UAAU,IAAIjB,QAAQ,GAAGjD,QAAQ,GAAGqJ,KAAK;IAC3C;IACA,OAAOnF,UAAU;EACnB;EAEAgC,gBAAgBA,CAACoD,KAAa;IAC5B,MAAMrG,QAAQ,GAAG,IAAI,CAACqD,eAAe,CAAC8C,EAAE,CAACE,KAAK,CAAC,CAAC7D,GAAG,CAAC,UAAU,CAAC,EAAEtK,KAAK,IAAI,CAAC;IAC3E,MAAM6E,QAAQ,GAAG,IAAI,CAACiF,KAAK,CAACjB,QAAQ,CAACsF,KAAK,CAAC,CAACtJ,QAAQ,IAAI,CAAC,CAAC,CAAC;IAC3D,MAAMqJ,KAAK,GAAG,IAAI,CAACpE,KAAK,CAACjB,QAAQ,CAACsF,KAAK,CAAC,CAACtG,UAAU,IAAI,CAAC,CAAC,CAAC;IAC1D,OAAOC,QAAQ,GAAGjD,QAAQ,GAAGqJ,KAAK;EACpC;EAGAJ,kBAAkBA,CAACT,OAAgB;IACjC,OAAO,IAAI,CAACP,EAAE,CAACU,KAAK,CAAC;MACnBY,UAAU,EAAE,CAACf,OAAO,CAAC3P,EAAE,CAAC;MAAE;MAC1BoK,QAAQ,EAAE,CAAC,EAAE,EAAE+B,sDAAU,CAACwE,GAAG,CAAC,CAAC,CAAC;KACjC,CAAC;EACJ;EAEA1C,QAAQA,CAAA;IACN,IAAI,CAAC1Q,eAAe,CAACuC,YAAY,CAAC,qBAAqB,CAAC;IAExD,IAAI,IAAI,CAAC6M,SAAS,CAACuC,KAAK,EAAE;MACxBlH,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC0E,SAAS,CAACrK,KAAK,CAAC;MACnD,MAAM8J,KAAK,GAAiB,IAAI,CAACO,SAAS,CAACrK,KAAK;MAChD8J,KAAK,CAACjB,QAAQ,GAAGiB,KAAK,CAACjB,QAAQ,CAAC7C,MAAM,CAAEqH,OAAuB,IAAKA,OAAO,CAACvF,QAAQ,GAAG,CAAC,CAAC;MACzFgC,KAAK,CAACf,UAAU,GAAG,IAAI,CAACA,UAAU,CAAC,CAAC;MAEpC;MACA,IAAI,CAACgE,YAAY,CAACuB,UAAU,CAAC,IAAI,CAAChG,UAAU,EAAEwB,KAAK,CAAC,CAACrU,SAAS,CAAC;QAC7DkI,IAAI,EAAG4Q,iBAAiB,IAAI;UAC1B7I,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAE4I,iBAAiB,CAAC;UAC9D,IAAI,CAACpZ,MAAM,CAACyN,QAAQ,CAAC,CAAC,WAAW,EAAE,IAAI,CAAC0F,UAAU,EAAE,oBAAoB,CAAC,EAAE;YAAEF,KAAK,EAAE;cAAE0B,KAAK,EAAEyE,iBAAiB;cAAEjH,SAAS,EAAE,IAAI,CAACwC,KAAK,CAACxC;YAAS;UAAE,CAAE,CAAC;UACpJ,IAAI,CAACrM,eAAe,CAACuC,YAAY,CAAC,8BAA8B,CAAC;QACnE,CAAC;QACDgR,KAAK,EAAGA,KAAK,IAAI;UACf,MAAMC,SAAS,GAAGD,KAAK,CAAC/M,MAAM;UAC9B,MAAMiN,YAAY,GAAGD,SAAS,IAAI,GAAG,GAAG,sCAAsC,GAAG,wBAAwB;UACzG,IAAIA,SAAS,IAAI,GAAG,EAAE;YACpB,IAAI,CAACtZ,MAAM,CAACyN,QAAQ,CAAC,CAAC,WAAW,EAAE,IAAI,CAAC0F,UAAU,EAAE,cAAc,CAAC,EAAE;cAAEF,KAAK,EAAE;gBAAE0B,KAAK,EAAE0E,KAAK,CAACA,KAAK;gBAAElH,SAAS,EAAE,IAAI,CAACwC,KAAK,CAACxC;cAAS;YAAE,CAAE,CAAC;UAC1I;UACA,IAAI,CAACrM,eAAe,CAACuC,YAAY,CAACkR,YAAY,CAAC;UAE/ChJ,OAAO,CAAC8I,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAChD;OACD,CAAC;MAEF,IAAI,CAAChC,SAAS,GAAG,IAAI;IACvB,CAAC,MAAM;MACL,IAAI,CAACnC,SAAS,CAACsE,gBAAgB,EAAE,CAAC,CAAC;IACrC;EACF;EAEA,IAAIC,iBAAiBA,CAAA;IACnB,MAAMhT,IAAI,GAAG,IAAI,CAACyO,SAAS,CAACrK,KAAK;IACjCpE,IAAI,CAACiN,QAAQ,GAAGjN,IAAI,CAACiN,QAAQ,CAAC7C,MAAM,CAAEqH,OAA6B,IAAKA,OAAO,CAACvF,QAAQ,GAAG,CAAC,CAAC;IAC7F,OAAOlM,IAAI;EACb;EAEAiT,iBAAiBA,CAACV,KAAa;IAC7B,OAAO,IAAI,CAAChD,eAAe,CAAC8C,EAAE,CAACE,KAAK,CAAC,CAAC7D,GAAG,CAAC,UAAU,CAAC,EAAEwE,OAAO,IAAI,KAAK;EACzE;EAEAlE,iBAAiBA,CAACuD,KAAa;IAC7B,OAAO,OAAO,IAAI,CAAChD,eAAe,CAAC8C,EAAE,CAACE,KAAK,CAAC,CAAC7D,GAAG,CAAC,UAAU,CAAC,EAAEtK,KAAK,KAAK,QAAQ;EAClF;EAEA;EACAyN,0BAA0BA,CAACsB,OAAwB;IACjD,MAAMC,SAAS,GAAG,IAAIxT,IAAI,CAACuT,OAAO,CAAC/O,KAAK,CAAC;IACzC,MAAM1E,KAAK,GAAG,IAAIE,IAAI,EAAE;IACxB,OAAOwT,SAAS,GAAG1T,KAAK,GAAG,IAAI,GAAG;MAAE2T,iBAAiB,EAAE;IAAI,CAAE;EAC/D;EAEA;EACAlB,2BAA2BA,CAACgB,OAAwB;IAClD,MAAMG,SAAS,GAAGH,OAAoB;IACtC,MAAMI,qBAAqB,GAAGD,SAAS,CAAC9D,QAAQ,CAAClF,IAAI,CAAEsH,KAAK,IAAKA,KAAK,CAAClD,GAAG,CAAC,UAAU,CAAC,EAAEtK,KAAK,GAAG,CAAC,CAAC;IAClG,OAAOmP,qBAAqB,GAAG,IAAI,GAAG;MAAEC,kBAAkB,EAAE;IAAI,CAAE;EACpE;EAEA;EACA1B,8BAA8BA,CAACqB,OAAwB;IACrD,MAAMC,SAAS,GAAG,IAAIxT,IAAI,CAACuT,OAAO,CAAC/O,KAAK,CAAC;IACzC,MAAMqP,kBAAkB,GAAG,IAAI7T,IAAI,EAAE;IACrC6T,kBAAkB,CAACC,QAAQ,CAACD,kBAAkB,CAACrT,QAAQ,EAAE,GAAG,CAAC,CAAC;IAC9DqT,kBAAkB,CAACE,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAEvC,OAAOP,SAAS,IAAIK,kBAAkB,GAAG,IAAI,GAAG;MAAEG,qBAAqB,EAAE;IAAI,CAAE;EACjF;EAEA;EACA7B,wBAAwBA,CAACoB,OAAwB;IAC/C,MAAMC,SAAS,GAAG,IAAIxT,IAAI,CAACuT,OAAO,CAAC/O,KAAK,CAAC;IACzC,OAAOgP,SAAS,CAACS,MAAM,EAAE,IAAI,CAAC,GAAG,IAAI,GAAG;MAAEC,eAAe,EAAE;IAAI,CAAE;EACnE;EAAC,QAAArc,CAAA;qBA/JUR,iBAAiB,EAAAwB,+DAAA,CAAAX,4DAAA,GAAAW,+DAAA,CAAA0C,uDAAA,GAAA1C,+DAAA,CAAAmL,mDAAA,GAAAnL,+DAAA,CAAA+L,8EAAA,GAAA/L,+DAAA,CAAAoM,iFAAA,GAAApM,+DAAA,CAAAmL,2DAAA,GAAAnL,+DAAA,CAAAA,4DAAA;EAAA;EAAA,QAAAf,EAAA;UAAjBT,iBAAiB;IAAAkD,SAAA;IAAAC,UAAA;IAAAC,QAAA,GAAA5B,iEAAA;IAAA8B,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAwZ,2BAAAtZ,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCtB9BnC,wDAAA,IAAA0b,wCAAA,oBAAa;;;QAAb1b,2DAAA,CAAAoC,GAAA,CAAAqT,KAAA,UAiIC;;;mBD9GW1V,yDAAY,EAAA4b,oDAAA,EAAAA,iDAAA,EAAAA,oDAAA,EAAAA,yDAAA,EAAEpG,+DAAmB,EAAA7S,4DAAA,EAAAA,0DAAA,EAAAA,sEAAA,EAAAA,gEAAA,EAAAA,+DAAA,EAAAA,sEAAA,EAAAA,2DAAA,EAAAA,gEAAA,EAAAA,8DAAA,EAAAA,2DAAA,EAAAA,yDAAA,EAAAA,yDAAA,EAAEqQ,+DAAa;IAAAnQ,MAAA;IAAAC,eAAA;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AEjBV;AAC2B;AAC9B;AAMA;AACQ;;;;;;;;;;;ICD7C7C,4DAAA,iBAAuE;IAAAA,oDAAA,GAAkB;IAAAA,0DAAA,EAAS;;;;IAA/CA,wDAAA,YAAA0c,UAAA,CAAmB;IAAC1c,uDAAA,EAAkB;IAAlBA,+DAAA,CAAA0c,UAAA,CAAArZ,IAAA,CAAkB;;;;;IAOzFrD,4DAAA,iBAAkF;IAAAA,oDAAA,GAAsB;IAAAA,0DAAA,EAAS;;;;IAAvDA,wDAAA,YAAA2c,cAAA,CAAuB;IAAC3c,uDAAA,EAAsB;IAAtBA,+DAAA,CAAA2c,cAAA,CAAAtZ,IAAA,CAAsB;;;;;;IAoBxGrD,4DADF,SAAgD,SAC1C;IAAAA,oDAAA,GAAmB;IAAAA,0DAAA,EAAK;IACxBA,4DAAJ,SAAI,YAA2E;IAAAA,oDAAA,iBAAU;IAAIA,0DAAJ,EAAI,EAAK;IAC9FA,4DAAJ,SAAI,YAA6F;IAAhCA,wDAAhC,mBAAA4c,sDAAA;MAAA,MAAAC,WAAA,GAAA7c,2DAAA,CAAA8O,GAAA,EAAA9J,SAAA;MAAA,MAAA8X,MAAA,GAAA9c,2DAAA;MAAA,OAAAA,yDAAA,CAAS8c,MAAA,CAAAC,QAAA,CAAAF,WAAA,CAAAxT,EAAA,CAAqB;IAAA,EAAC,mBAAA2T,sDAAA;MAAA,MAAAH,WAAA,GAAA7c,2DAAA,CAAA8O,GAAA,EAAA9J,SAAA;MAAA,MAAA8X,MAAA,GAAA9c,2DAAA;MAAA,OAAAA,yDAAA,CAAU8c,MAAA,CAAAC,QAAA,CAAAF,WAAA,CAAAxT,EAAA,CAAqB;IAAA,EAAC;IAACrJ,oDAAA,gBAAS;IAC5GA,0DAD4G,EAAI,EAAK,EAChH;;;;IAHCA,uDAAA,GAAmB;IAAnBA,+DAAA,CAAA6c,WAAA,CAAAxZ,IAAA,CAAmB;IAChBrD,uDAAA,GAAuD;IAAvDA,wDAAA,eAAAA,6DAAA,IAAAM,GAAA,EAAAuc,WAAA,CAAAxT,EAAA,EAAuD;;;ADjBlE,MAAOnL,mBAAmB;EAO9B2C,YACU2X,IAAgB,EAChBC,EAAe,EACf3R,GAAsB,EACtBmW,eAAgC,EAChCC,iBAAoC;IAJpC,KAAA1E,IAAI,GAAJA,IAAI;IACJ,KAAAC,EAAE,GAAFA,EAAE;IACF,KAAA3R,GAAG,GAAHA,GAAG;IACH,KAAAmW,eAAe,GAAfA,eAAe;IACf,KAAAC,iBAAiB,GAAjBA,iBAAiB;IAR3B,KAAAC,SAAS,GAAe,EAAE;IAC1B,KAAAC,iBAAiB,GAAe,EAAE;EAQ/B;EAEHlc,QAAQA,CAAA;IACN,IAAI,CAACmc,IAAI,GAAG,IAAI,CAAC5E,EAAE,CAACU,KAAK,CAAC;MACxBmE,OAAO,EAAE,EAAE;MACXC,WAAW,EAAE,EAAE;MACfC,UAAU,EAAE;KACb,CAAC;IAEF,IAAI,CAACC,UAAU,GAAG,IAAI,CAACP,iBAAiB,CAACQ,YAAY,EAAE,CAACpW,IAAI,CAC1DtE,yCAAG,CAAE2a,SAAS,IAAI;MAChB,MAAMC,cAAc,GAAGD,SAAS,CAACE,IAAI,CAAEP,OAAO,IAAKA,OAAO,CAACja,IAAI,KAAK,KAAK,CAAC;MAC1E,IAAIua,cAAc,EAAE;QAClB,IAAI,CAACP,IAAI,CAACpH,GAAG,CAAC,SAAS,CAAE,CAAC6H,QAAQ,CAACF,cAAc,CAAC;MACpD;IACF,CAAC,CAAC,CACH;IAED,IAAI,CAACP,IAAI,CACNpH,GAAG,CAAC,SAAS,CAAE,CACf8H,YAAY,CAACzW,IAAI,CAChBmV,+CAAS,CAAEa,OAAO,IAChB,IAAI,CAACJ,iBAAiB,CAACc,eAAe,CAACV,OAAO,CAACjU,EAAE,CAAC,CAAC/B,IAAI,CACrDtE,yCAAG,CAAEib,SAAS,IAAI;MAChBA,SAAS,CAACrQ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACxK,IAAI,CAAC6a,aAAa,CAACpQ,CAAC,CAACzK,IAAI,CAAC,CAAC;MACtD,IAAI,CAAC8a,aAAa,GAAG,IAAI3B,4CAAU,CAAc4B,QAAQ,IAAI;QAC3DA,QAAQ,CAAC9U,IAAI,CAAC2U,SAAS,CAAC;QACxBG,QAAQ,CAACC,QAAQ,EAAE;MACrB,CAAC,CAAC;MACF,IAAIJ,SAAS,CAACna,MAAM,GAAG,CAAC,EAAE;QACxB,IAAI,CAACuZ,IAAI,CAACpH,GAAG,CAAC,aAAa,CAAE,CAAC6H,QAAQ,CAACG,SAAS,CAAC,CAAC,CAAC,CAAC;MACtD;IACF,CAAC,CAAC,CACH,CACF,CACF,CACA7c,SAAS,EAAE;IAEd,IAAI,CAACic,IAAI,CACNpH,GAAG,CAAC,aAAa,CAAE,CACnB8H,YAAY,CAACzW,IAAI,CAChBmV,+CAAS,CAAE6B,QAAQ,IAAI;MACrB,MAAMhB,OAAO,GAAG,IAAI,CAACD,IAAI,CAACpH,GAAG,CAAC,SAAS,CAAE,CAACtK,KAAK;MAC/C,OAAO,IAAI,CAACuR,iBAAiB,CAACqB,YAAY,CAACjB,OAAO,CAACjU,EAAE,EAAEiV,QAAQ,CAACjb,IAAI,CAAC;IACvE,CAAC,CAAC,CACH,CACAjC,SAAS,CAAC;MACTkI,IAAI,EAAG6T,SAAS,IAAI;QAClB,IAAI,CAACA,SAAS,GAAG,CAAC,GAAGA,SAAS,CAAC;QAC/B,IAAI,CAACA,SAAS,CAACvP,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACxK,IAAI,CAAC6a,aAAa,CAACpQ,CAAC,CAACzK,IAAI,CAAC,CAAC;QAC3D,IAAI,CAAC+Z,iBAAiB,GAAG,CAAC,GAAG,IAAI,CAACD,SAAS,CAAC;QAC5C,IAAI,CAACrW,GAAG,CAAC6S,YAAY,EAAE;MACzB;KACD,CAAC;IAEJ,IAAI,CAAC0D,IAAI,CAACpH,GAAG,CAAC,YAAY,CAAE,CAAC8H,YAAY,CAAC3c,SAAS,CAAEoc,UAAkB,IAAI;MACzE,IAAI,CAACJ,iBAAiB,GAAG,IAAI,CAACD,SAAS,CAACxL,MAAM,CAAE6M,QAAQ,IAAKA,QAAQ,CAACnb,IAAI,CAACob,WAAW,EAAE,CAACzd,QAAQ,CAACwc,UAAU,CAACiB,WAAW,EAAE,CAAC,CAAC;IAC9H,CAAC,CAAC;EACJ;EAEAC,YAAYA,CAACzK,UAAkB;IAC7B,MAAM0K,OAAO,GAAG5J,MAAM,CAAClB,QAAQ,CAAC+K,IAAI,CAACC,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC;IAChE,OAAO,GAAGF,OAAO,aAAa1K,UAAU,aAAa;EACvD;EAEA8I,QAAQA,CAAC9I,UAAkB;IACzB,MAAM6K,IAAI,GAAG,IAAI,CAACJ,YAAY,CAACzK,UAAU,CAAC;IAC1C8K,SAAS,CAACC,SAAS,CAChBC,SAAS,CAACH,IAAI,CAAC,CACfI,IAAI,CAAC,MAAK;MACT,IAAI,CAACjC,eAAe,CAAC9T,YAAY,CAAC,2BAA2B,CAAC;IAChE,CAAC,CAAC,CACDgW,KAAK,CAAEC,GAAG,IAAI;MACb/N,OAAO,CAAC8I,KAAK,CAAC,uBAAuB,EAAEiF,GAAG,CAAC;IAC7C,CAAC,CAAC;EACN;EAAC,QAAApgB,CAAA;qBAxFUd,mBAAmB,EAAA8B,+DAAA,CAAAX,4DAAA,GAAAW,+DAAA,CAAA0C,uDAAA,GAAA1C,+DAAA,CAAAA,4DAAA,GAAAA,+DAAA,CAAAmL,8EAAA,GAAAnL,+DAAA,CAAA+L,mFAAA;EAAA;EAAA,QAAA9M,EAAA;UAAnBf,mBAAmB;IAAAwD,SAAA;IAAAC,UAAA;IAAAC,QAAA,GAAA5B,iEAAA;IAAA8B,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAqd,6BAAAnd,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCpB9BnC,4DADF,cAAyB,aACA;QACrBA,uDAAA,kBAAkE;QAElEA,4DAAA,YAAuB;QAAAA,oDAAA,gBAAS;QAAAA,0DAAA,EAAK;QAIjCA,4DAFJ,aAAqB,aACO,eACyB;QAAAA,oDAAA,eAAQ;QAAAA,0DAAA,EAAQ;QACjEA,4DAAA,gBAAsD;QACpDA,wDAAA,KAAAuf,sCAAA,oBAAuE;;QAE3Evf,0DADE,EAAS,EACL;QAGJA,4DADF,cAA0B,gBAC2B;QAAAA,oDAAA,kBAAU;QAAAA,0DAAA,EAAQ;QACrEA,4DAAA,kBAA4D;QAC1DA,wDAAA,KAAAwf,sCAAA,oBAAkF;;QAEtFxf,0DADE,EAAS,EACL;QAGJA,4DADF,cAA0B,iBAC0B;QAAAA,oDAAA,iBAAS;QAAAA,0DAAA,EAAQ;QACnEA,uDAAA,iBAAsG;QAE1GA,0DADE,EAAM,EACF;QAKAA,4DAHN,iBAA0B,aACjB,UACD,UACE;QAAAA,oDAAA,qBAAa;QAAAA,0DAAA,EAAK;QACtBA,4DAAA,UAAI;QAAAA,oDAAA,kBAAU;QAAAA,0DAAA,EAAK;QACnBA,4DAAA,UAAI;QAAAA,oDAAA,iBAAS;QAEjBA,0DAFiB,EAAK,EACf,EACC;QACRA,4DAAA,aAAO;QACLA,wDAAA,KAAAyf,kCAAA,iBAAgD;QAQxDzf,0DAHM,EAAQ,EACF,EACJ,EACD;;;;QA5CDA,wDAAA,cAAAoC,GAAA,CAAAib,IAAA,CAAkB;QAEVrd,uDAAA,GAA4C;QAA5CA,wDAAA,eAAA0f,OAAA,GAAAtd,GAAA,CAAAib,IAAA,CAAApH,GAAA,8BAAAyJ,OAAA,CAAA/T,KAAA,kBAAA+T,OAAA,CAAA/T,KAAA,CAAAtC,EAAA,CAA4C;QAQpBrJ,uDAAA,GAAqB;QAArBA,wDAAA,YAAAA,yDAAA,QAAAoC,GAAA,CAAAqb,UAAA,EAAqB;QAOjBzd,uDAAA,GAAwB;QAAxBA,wDAAA,YAAAA,yDAAA,QAAAoC,GAAA,CAAA+b,aAAA,EAAwB;QAmBjCne,uDAAA,IAAqB;QAArBA,wDAAA,YAAAoC,GAAA,CAAAgb,iBAAA,CAAqB;;;mBDlB1Crd,yDAAY,EAAAqM,oDAAA,EAAAA,sDAAA,EAAEmJ,+DAAmB,EAAA7S,4DAAA,EAAAA,0DAAA,EAAAA,sEAAA,EAAAA,gEAAA,EAAAA,sEAAA,EAAAA,2DAAA,EAAAA,gEAAA,EAAAA,8DAAA,EAAAA,2DAAA,EAAE3E,0DAAY,EAAA4d,wDAAA,EAAE5I,+DAAa;IAAAnQ,MAAA;IAAAC,eAAA;EAAA;;;;;;;;;;;;;;;;;;;;AEX5C;AAC4B;;;AAIpD,MAAOid,sBAAsB;EACjCjf,YAAoB+F,eAAgC;IAAhC,KAAAA,eAAe,GAAfA,eAAe;EAAoB;EAEvDmZ,SAASA,CACPC,OAA6B,EAC7B1W,IAAiB;IAEjB,MAAM2W,SAAS,GAAG,sBAAsB;IAExC;IACA,MAAMC,OAAO,GAAGF,OAAO,CAACG,KAAK,CAAC;MAC5BC,UAAU,EAAE;QACV,cAAc,EAAEH;;KAEnB,CAAC;IAEF;IACA,OAAO3W,IAAI,CAAC+W,MAAM,CAACH,OAAO,CAAC,CAAC5Y,IAAI,CAC9BsY,gDAAU,CAAER,GAAY,IAAI;MAC1B,IAAIA,GAAG,YAAYO,mEAAiB,EAAE;QACpC,IAAI,CAACW,qBAAqB,CAAClB,GAAG,CAAC;MACjC,CAAC,MAAM;QACL,IAAI,CAACxY,eAAe,CAACuC,YAAY,CAAC,qBAAqB,CAAC;MAC1D;MAEA;MACA;MACA;MACA,OAAO0W,gDAAU,CAAC,MAAMT,GAAG,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,CACH;EACH;EAEQkB,qBAAqBA,CAACnG,KAAwB;IACpD9I,OAAO,CAAC8I,KAAK,CAACA,KAAK,CAACA,KAAK,CAACoG,OAAO,CAAC;IAClC,QAAQpG,KAAK,CAAC/M,MAAM;MAClB,KAAK,GAAG;QAAE;QACR,IAAI,CAACxG,eAAe,CAACuC,YAAY,CAC/B,uCAAuC,CACxC;QACD;MACF,KAAK,GAAG;QAAE;QACR,IAAI,CAACvC,eAAe,CAACuC,YAAY,CAC/B,uCAAuC,CACxC;QACD;MACF,KAAK,GAAG;QAAE;QACR,IAAI,CAACvC,eAAe,CAACuC,YAAY,CAAC,4BAA4B,CAAC;QAC/D;MACF,KAAK,GAAG;QAAE;QACRkI,OAAO,CAACC,GAAG,CAAC6I,KAAK,CAAC;QAClB,IAAI,CAACvT,eAAe,CAACuC,YAAY,CAC/B,gDAAgD,CACjD;QACD;MACF;QACE,IAAI,CAACvC,eAAe,CAACuC,YAAY,CAC/B,8CAA8C,CAC/C;QACD;IACJ;EACF;EAAC,QAAAnK,CAAA;qBA7DU8gB,sBAAsB,EAAA9f,sDAAA,CAAAX,8EAAA;EAAA;EAAA,QAAAJ,EAAA;WAAtB6gB,sBAAsB;IAAAW,OAAA,EAAtBX,sBAAsB,CAAAY;EAAA;;;;;;;;;;;;;;;;;;ACZsC;AAId;;;AASrD,MAAOzV,kBAAkB;EAG7BpK,YAAoB2X,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAA7X,MAAM,GAAGb,qEAAW,CAACa,MAAM;EAEI;EAEvC0G,UAAUA,CAAA;IACR,OAAO,IAAI,CAACmR,IAAI,CAACvC,GAAG,CAAW,GAAG,IAAI,CAACtV,MAAM,UAAU,CAAC;EAC1D;EAEA4H,gBAAgBA,CACdN,UAAkB,EAClBC,YAAoB;IAEpB,MAAM0Q,MAAM,GAAG,IAAI+H,4DAAU,EAAE,CAC5BC,GAAG,CAAC,YAAY,EAAE3Y,UAAU,CAAC,CAC7B2Y,GAAG,CAAC,cAAc,EAAE1Y,YAAY,CAAC;IACpC,OAAO,IAAI,CAACsQ,IAAI,CAACvC,GAAG,CAAiB,GAAG,IAAI,CAACtV,MAAM,iBAAiB,EAAE;MACpEiY;KACD,CAAC;EACJ;EAEAiI,UAAUA,CAACxX,EAAU;IACnB,OAAO,IAAI,CAACmP,IAAI,CAACsI,KAAK,CAAe,GAAG,IAAI,CAACngB,MAAM,mBAAmB0I,EAAE,EAAE,EAAE,EAAE,CAAC;EACjF;EAEAD,WAAWA,CACT2X,cAAsB,EACtBjY,IAAU;IAEV,MAAMkY,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEpY,IAAI,CAAC;IAE7B,OAAO,IAAI,CAAC0P,IAAI,CAAC2I,IAAI,CACnB,GAAG,IAAI,CAACxgB,MAAM,mBAAmBogB,cAAc,SAAS,EACxDC,QAAQ,EACR;MACEI,cAAc,EAAE,IAAI;MACpBC,OAAO,EAAE;KACV,CACF;EACH;EAAC,QAAAriB,CAAA;qBAxCUiM,kBAAkB,EAAAjL,sDAAA,CAAAX,4DAAA;EAAA;EAAA,QAAAJ,EAAA;WAAlBgM,kBAAkB;IAAAwV,OAAA,EAAlBxV,kBAAkB,CAAAyV,IAAA;IAAAY,UAAA,EAFjB;EAAM;;;;;;;;;;;;;;;;;;ACTqC;;;AAKnD,MAAOC,yBAAyB;EACpC1gB,YAAoB+F,eAAgC;IAAhC,KAAAA,eAAe,GAAfA,eAAe;EAAoB;EAEvD4a,WAAWA,CAACrH,KAAU;IACpB,IAAIA,KAAK,YAAYwF,mEAAiB,EAAE;MACtC;MACA,IAAI,CAACZ,SAAS,CAAC0C,MAAM,EAAE;QACrB,IAAI,CAAC7a,eAAe,CAACuC,YAAY,CAAC,wBAAwB,CAAC;QAC3D;MACF;MACA,IAAIgR,KAAK,CAACA,KAAK,YAAYuH,UAAU,EAAE;QACrC,IAAI,CAAC9a,eAAe,CAACuC,YAAY,CAACgR,KAAK,CAACA,KAAK,CAACoG,OAAO,CAAC;QACtD;MACF;MAEA,IAAIpG,KAAK,CAAC/M,MAAM,KAAK,GAAG,EAAE;QACxB,IAAI,CAACxG,eAAe,CAACuC,YAAY,CAAC,gBAAgB,CAAC;QACnD;MACF;MAEAkI,OAAO,CAAC8I,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C9I,OAAO,CAACC,GAAG,CAACqQ,IAAI,CAACC,SAAS,CAACzH,KAAK,CAACA,KAAK,CAAC,CAAC;MAExC,IAAI,CAACvT,eAAe,CAACuC,YAAY,CAAC,wBAAwB,GAAGgR,KAAK,CAACA,KAAK,CAACoG,OAAO,CAAC;IACnF,CAAC,MAAM;MACL;MACAlP,OAAO,CAAC8I,KAAK,CAACA,KAAK,CAAC;IACtB;EACF;EAAC,QAAAnb,CAAA;qBA5BUuiB,yBAAyB,EAAAvhB,sDAAA,CAAAX,8DAAA;EAAA;EAAA,QAAAJ,EAAA;WAAzBsiB,yBAAyB;IAAAd,OAAA,EAAzBc,yBAAyB,CAAAb,IAAA;IAAAY,UAAA,EAFxB;EAAM;;;;;;;;;;;;;;;;;;;ACL0C;AAGzB;AACsB;;;AAMrD,MAAOhP,gBAAgB;EAG3BzR,YAAoB2X,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAA7X,MAAM,GAAGb,qEAAW,CAACa,MAAM;EAEI;EAEvC4Q,iBAAiBA,CACfjD,IAAY,EACZrF,IAAY,EACZ4H,UAAkB;IAElB,MAAM+H,MAAM,GAAG,IAAI+H,4DAAU,EAAE,CAC5BC,GAAG,CAAC,MAAM,EAAEtS,IAAI,CAACuT,QAAQ,EAAE,CAAC,CAC5BjB,GAAG,CAAC,MAAM,EAAE3X,IAAI,CAAC4Y,QAAQ,EAAE,CAAC,CAC5BjB,GAAG,CAAC,QAAQ,EAAE/P,UAAU,CAAC;IAC5B,OAAO,IAAI,CAAC2H,IAAI,CACbvC,GAAG,CAA+B,GAAG,IAAI,CAACtV,MAAM,YAAY,EAAE;MAC7DiY;KACD,CAAC,CACDtR,IAAI,CAACvE,mDAAG,CAAE+e,QAAQ,IAAKA,QAAQ,CAACC,OAAO,CAAC,CAAC;EAC9C;EAAC,QAAA/iB,CAAA;qBAnBUsT,gBAAgB,EAAAtS,sDAAA,CAAAX,4DAAA;EAAA;EAAA,QAAAJ,EAAA;WAAhBqT,gBAAgB;IAAAmO,OAAA,EAAhBnO,gBAAgB,CAAAoO,IAAA;IAAAY,UAAA,EAFf;EAAM;;;;;;;;;;;;;;;;;;ACHuC;;;AAMrD,MAAO9F,gBAAgB;EAG3B3a,YAAoB2X,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAA7X,MAAM,GAAGb,qEAAW,CAACa,MAAM;EAEI;EAEvCoY,YAAYA,CAAC9E,UAAkB;IAC7B,OAAO,IAAI,CAACuE,IAAI,CAACvC,GAAG,CAAQ,GAAG,IAAI,CAACtV,MAAM,cAAcsT,UAAU,WAAW,CAAC;EAChF;EAEAgG,UAAUA,CAAChG,UAAkB,EAAEN,SAAuB;IACpD,OAAO,IAAI,CAAC6E,IAAI,CAAC2I,IAAI,CAAoB,GAAG,IAAI,CAACxgB,MAAM,cAAcsT,UAAU,SAAS,EAAEN,SAAS,CAAC;EACtG;EAAC,QAAA3U,CAAA;qBAXUwc,gBAAgB,EAAAxb,sDAAA,CAAAX,4DAAA;EAAA;EAAA,QAAAJ,EAAA;WAAhBuc,gBAAgB;IAAAiF,OAAA,EAAhBjF,gBAAgB,CAAAkF,IAAA;IAAAY,UAAA,EAFf;EAAM;;;;;;;;;;;;;;;;;;ACFuC;;;AAKrD,MAAOjC,iBAAiB;EAG5Bxe,YAAoB2X,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAA7X,MAAM,GAAGb,qEAAW,CAACa,MAAM;EAEI;EAEvC+c,YAAYA,CAAA;IACV,OAAO,IAAI,CAAClF,IAAI,CAACvC,GAAG,CAAY,GAAG,IAAI,CAACtV,MAAM,YAAY,CAAC;EAC7D;EAEAqd,eAAeA,CAAC/K,SAAiB;IAC/B,OAAO,IAAI,CAACuF,IAAI,CAACvC,GAAG,CAClB,GAAG,IAAI,CAACtV,MAAM,cAAcsS,SAAS,aAAa,CACnD;EACH;EAEAsL,YAAYA,CAACtL,SAAiB,EAAEqC,YAAoB;IAClD,OAAO,IAAI,CAACkD,IAAI,CAACvC,GAAG,CAClB,GAAG,IAAI,CAACtV,MAAM,cAAcsS,SAAS,eAAeqC,YAAY,YAAY,CAC7E;EACH;EAAC,QAAAtW,CAAA;qBAnBUqgB,iBAAiB,EAAArf,sDAAA,CAAAX,4DAAA;EAAA;EAAA,QAAAJ,EAAA;WAAjBogB,iBAAiB;IAAAoB,OAAA,EAAjBpB,iBAAiB,CAAAqB,IAAA;IAAAY,UAAA,EAFhB;EAAM;;;;;;;;;;;;;;;;;;;ACJd,MAAOpW,eAAe;EAO1BrK,YAAoBmhB,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IALvB,KAAAC,QAAQ,GAAG,KAAK;IAChB,KAAAC,gBAAgB,GAAgC,QAAQ;IACxD,KAAAC,aAAa,GAAkC,QAAQ;IACvD,KAAAC,MAAM,GAAG,MAAM;EAEwB;EAE/CjZ,YAAYA,CAACoX,OAAe,EAAE8B,KAAc;IAC1C,IAAI,CAACC,WAAW,GAAG,IAAI,CAACN,WAAW,CAACO,IAAI,CAAChC,OAAO,EAAE,IAAI,CAAC6B,MAAM,EAAE;MAC7DH,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvBC,gBAAgB,EAAE,IAAI,CAACA,gBAAgB;MACvCM,kBAAkB,EAAE,IAAI,CAACL,aAAa;MACtCM,UAAU,EAAEJ;KACb,CAAC;IACF,IAAI,CAACC,WAAW,CAACI,QAAQ,EAAE,CAACthB,SAAS,CAAC,MAAK;MACzC,IAAI,CAACwI,aAAa,EAAE;IACtB,CAAC,CAAC;EACJ;EAEAA,aAAaA,CAAA;IACX,IAAI,IAAI,CAAC0Y,WAAW,EAAE;MACpB,IAAI,CAACA,WAAW,CAACK,OAAO,EAAE;IAC5B;EACF;EAAC,QAAA3jB,CAAA;qBAzBUkM,eAAe,EAAAlL,sDAAA,CAAAX,oEAAA;EAAA;EAAA,QAAAJ,EAAA;WAAfiM,eAAe;IAAAuV,OAAA,EAAfvV,eAAe,CAAAwV,IAAA;IAAAY,UAAA,EAFd;EAAM;;;;;;;;;;;;;;;ACJb,MAAMxhB,WAAW,GAAG;EACzB+iB,UAAU,EAAE,KAAK;EACjBC,MAAM,EAAE,QAAQ;EAChBniB,MAAM,EAAE;CACT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJkD;AACD;AACY;AACE;AACT;AACA;AACA;AACM;AACA;AACJ;AACa;AACvB;AACmB;AACO;AACb;AACoB;AACQ;AACtB;AACwB;AACd;AAE5E+iB,+EAAoB,CAAC9iB,4DAAY,EAAE;EACjCmjB,SAAS,EAAE,CACTH,kEAAmB,CACjBH,oEAAa,EACb1kB,qEAAgB,EAChBwkB,uDAAW,EACXhO,+DAAmB,EACnBxV,yDAAY,EACZujB,gFAAoB,EACpBngB,mEAAc,EACdkgB,wEAAgB,EAChBD,wEAAgB,EAChBD,kEAAa,EACbD,kEAAa,EACbD,kEAAa,EACbD,2EAAiB,EACjB5S,yEAAuB,EACvB2S,6DAAW,CAAC5jB,OAAO,EAAE,CACtB,EACD;IACE6kB,OAAO,EAAEH,oEAAiB;IAC1BI,QAAQ,EAAEnE,mGAAsB;IAChCoE,KAAK,EAAE;GACR,EACD;IAAEF,OAAO,EAAEL,uDAAY;IAAEM,QAAQ,EAAE1C,iGAAyBA;EAAA,CAAE,EAC9DuC,wEAAiB,EAAE,EACnBN,wFAAiB,EAAE;CAEtB,CAAC,CAACrE,KAAK,CAAEC,GAAG,IAAK/N,OAAO,CAAC8I,KAAK,CAACiF,GAAG,CAAC,CAAC","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/driver-route/driver-route.component.ts","./src/app/components/driver-route/driver-route.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/image-thumbnail/image-thumbnail.component.ts","./src/app/components/image-thumbnail/image-thumbnail.component.html","./src/app/components/inventory/inventory.component.ts","./src/app/components/inventory/inventory.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/logo/logo.component.ts","./src/app/components/logo/logo.component.html","./src/app/components/logout/logout.component.ts","./src/app/components/logout/logout.component.html","./src/app/components/order-confirmation/order-confirmation.component.ts","./src/app/components/order-confirmation/order-confirmation.component.html","./src/app/components/order-exists/order-exists.component.ts","./src/app/components/order-exists/order-exists.component.html","./src/app/components/order-form/order-form.component.ts","./src/app/components/order-form/order-form.component.html","./src/app/components/order-links/order-links.component.ts","./src/app/components/order-links/order-links.component.html","./src/app/core/interceptors/http-logging.interceptor.ts","./src/app/services/driver-route.service.ts","./src/app/services/global-error-handler.service.ts","./src/app/services/inventory.service.ts","./src/app/services/order-form.service.ts","./src/app/services/order-links.service.ts","./src/app/services/snackbar.service.ts","./src/environments/environment.development.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DriverRouteComponent } from './components/driver-route/driver-route.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { OrderLinksComponent } from './components/order-links/order-links.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { LogoutComponent } from './components/logout/logout.component';\nimport { InventoryComponent } from './components/inventory/inventory.component';\nimport { OrderConfirmationComponent } from './components/order-confirmation/order-confirmation.component';\nimport { OrderExistsComponent } from './components/order-exists/order-exists.component';\nimport { OrderNewComponent } from './components/order-form/order-form.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'order-links', pathMatch: 'full' },\n  { path: 'home', component: HomeComponent, title: 'Home' },\n  { path: 'driver', component: DriverRouteComponent, title: 'Driver Route' },\n  { path: 'order-links', component: OrderLinksComponent, title: 'Order Links' },\n  { path: 'login', component: LoginComponent, title: 'Login' },\n  { path: 'logout', component: LogoutComponent, title: 'Logout' },\n  { path: 'inventory', component: InventoryComponent, title: 'Inventory' },\n  { path: 'customer/:id/order-confirmation', component: OrderConfirmationComponent, title: 'Order Confirmation' },\n  { path: 'customer/:id/order-exists', component: OrderExistsComponent, title: 'Order Exists' },\n  { path: 'customer/:id/order-form', component: OrderNewComponent, title: 'Order Form' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { isDevMode } from '@angular/core';\nimport { MatIcon } from '@angular/material/icon';\nimport { NavigationEnd, Router, RouterLink, RouterLinkActive, RouterOutlet } from '@angular/router';\nimport { MatToolbar } from '@angular/material/toolbar';\nimport { environment } from 'src/environments/environment';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  standalone: true,\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  imports: [CommonModule, MatToolbar, RouterLink, RouterLinkActive, MatIcon, RouterOutlet],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent implements OnInit {\n  isDevMode: boolean = isDevMode();\n  apiUrl = environment.apiUrl;\n  showWarning = false;\n  isOrderForm: boolean = false;\n\n  constructor(private router: Router) {\n    // check that UAT is not using the prod backend\n    if (this.isDevMode && this.apiUrl.includes('prod')) {\n      this.showWarning = true;\n      alert('WARNING: Angular is in Dev mode but connected to production !!!');\n    }\n  }\n\n  ngOnInit(): void {\n    // check if we are on the order form\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        const currentRoute = event.urlAfterRedirects;\n        this.isOrderForm = currentRoute.includes('order-') && !currentRoute.includes('order-links');\n      }\n    });\n  }\n}\n","@if (!isOrderForm) {\n<mat-toolbar color=\"primary\" class=\"header\" [ngClass]=\"{'warning': showWarning}\">\n    <div class=\"nav-links-center\">\n        <a mat-button routerLink=\"/inventory\" routerLinkActive=\"active-link\">\n            <mat-icon>inventory</mat-icon>\n            Inventory\n        </a>\n        <a mat-button routerLink=\"/order-links\" routerLinkActive=\"active-link\">\n            <mat-icon>description</mat-icon>\n            Order Links\n        </a>\n        <!--a mat-button routerLink=\"/order-form\" routerLinkActive=\"active-link\">\n            <mat-icon>add_shopping_cart</mat-icon>\n            New Order\n        </a-->\n        <a mat-button routerLink=\"/driver\" routerLinkActive=\"active-link\">\n            <mat-icon>local_shipping</mat-icon>\n            Routes\n        </a>\n    </div>\n\n  <!--  <a routerLink=\"/home\" class=\"logo\">\n        <img src=\"assets/gs.png\" alt=\"GS Logo\" class=\"gs-logo\">\n    </a> -->\n</mat-toolbar>\n}\n\n<div class=\"underline\"></div> <!-- Thinner black line underlining the nav bar -->\n\n<main>\n    <router-outlet></router-outlet>\n</main>\n\n<!-- Footer with Navigation and Social Icons-->\n<footer class=\"mat-drawer-container\">\n    <div class=\"container\">\n        <div class=\"text-align-center\">\n            © 2024 - Pacific Fresh Fish Company\n            @if (isDevMode) {<div class=\"dev-mode\">UAT ENVIRONMENT</div>\n            <div class=\"dev-mode\">{{apiUrl}}</div>}\n        </div>\n    </div>\n</footer>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, SecurityContext } from '@angular/core';\nimport { DriverRouteService } from '../../services/driver-route.service';\nimport { Observable } from 'rxjs';\nimport { DeliveryStop } from 'src/app/models/delivery-stop.model';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { map, tap } from 'rxjs/operators';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { HttpEventType } from '@angular/common/http';\nimport { ImageThumbnailComponent } from '../image-thumbnail/image-thumbnail.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { CommonModule } from '@angular/common';\n\ninterface Driver {\n  name: string;\n}\n\n@Component({\n  standalone: true,\n  selector: 'app-driver-route',\n  templateUrl: './driver-route.component.html',\n  styleUrls: ['./driver-route.component.css'],\n  imports: [CommonModule, MatTableModule, ImageThumbnailComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DriverRouteComponent implements OnInit {\n  readonly maxFileSize = 4 * 1024 * 1024; // 4 MB\n\n  driverNames$!: Observable<Driver[]>;\n  deliveryRoute$: Observable<DeliveryStop[]> | undefined;\n  today: string;\n  selectedFile: File | null = null;\n\n  displayedColumns: string[] = ['deliveryAddress1', 'address', 'customerPhone', 'actualArrivalTime'];\n\n  constructor(\n    private driverRouteService: DriverRouteService,\n    private snackBarService: SnackbarService,\n    private sanitizer: DomSanitizer,\n    private cdr: ChangeDetectorRef,\n  ) {\n    this.today = this.formatDate(new Date());\n  }\n\n  ngOnInit(): void {\n    this.driverNames$ = this.driverRouteService.getDrivers().pipe(\n      tap((data) => {\n        if (data && data.length > 0) {\n          this.refreshDeliverRoute(data[0].name, this.today);\n        }\n      }),\n    );\n  }\n\n  formatDate(date: Date): string {\n    const month = ('0' + (date.getMonth() + 1)).slice(-2);\n    const day = ('0' + date.getDate()).slice(-2);\n    const year = date.getFullYear();\n    return `${month}/${day}/${year}`;\n  }\n\n  refreshDeliverRoute(driverName: string, deliveryDate: string): void {\n    const formattedDate = new Date(deliveryDate).toISOString().split('T')[0]; // Ensure date is formatted as YYYY-MM-DD\n    this.deliveryRoute$ = this.driverRouteService\n      .getDeliveryRoute(driverName, formattedDate)\n      .pipe(map((deliveryStops) => this.calculateTimeDifferences(deliveryStops)));\n  }\n\n  onFileSelected(deliveryRoute: DeliveryStop, event: Event) {\n    const input = event.target as HTMLInputElement;\n    if (input.files && input.files.length > 0) {\n      const file = input.files[0];\n      if (file && file.type.startsWith('image/')) {\n        if (file.size <= this.maxFileSize) {\n          this.selectedFile = file;\n          this.uploadFile(deliveryRoute, file);\n        } else {\n          this.snackBarService.showSnackBar('File size exceeds 4 MB.');\n        }\n      } else {\n        this.snackBarService.showSnackBar('Please select an image file');\n        this.selectedFile = null;\n      }\n    }\n  }\n\n  uploadFile(deliveryRoute: DeliveryStop, file: File) {\n    this.snackBarService.showSnackBar('Your file is being uploaded');\n    this.driverRouteService.uploadPhoto(deliveryRoute.id, file).subscribe({\n      next: (event) => {\n        switch (event.type) {\n          case HttpEventType.Response: {\n            const updatedDeliveryStop = event.body as DeliveryStop;\n            Object.assign(deliveryRoute, updatedDeliveryStop);\n            this.snackBarService.closeSnackBar();\n            this.cdr.detectChanges();\n          }\n        }\n      },\n    });\n  }\n\n  getGoogleMapsUrl(address2: string, address3: string): SafeUrl {\n    const url = `https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(address2 + ' ' + address3)}`;\n\n    const sanitizedUrl = this.sanitizer.sanitize(SecurityContext.URL, url);\n    if (sanitizedUrl) {\n      return this.sanitizer.bypassSecurityTrustUrl(sanitizedUrl);\n    } else {\n      return '';\n    }\n  }\n\n  private calculateTimeDifferences(deliveryStops: DeliveryStop[]): DeliveryStop[] {\n    for (let i = deliveryStops.length - 1; i > 0; i--) {\n      const currentStop = deliveryStops[i];\n      const previousStop = deliveryStops[i - 1];\n\n      const currentTime = new Date(currentStop.plannedArrivalTime).getTime();\n      const previousTime = new Date(previousStop.plannedArrivalTime).getTime();\n\n      const timeDifferenceInMinutes = Math.round((currentTime - previousTime) / 60000);\n      currentStop.timeDifference = timeDifferenceInMinutes;\n    }\n\n    if (deliveryStops.length > 0) {\n      deliveryStops[0].timeDifference = undefined; // First row will have no time difference\n    }\n    return deliveryStops;\n  }\n}\n","<div class=\"container\">\n  <div class=\"image-container\">\n    <img src=\"assets/logo.png\" alt=\"Company Logo\">\n  </div>\n\n  <h2 class=\"driver-routes-title\">Driver Routes</h2>\n\n  <div class=\"filters\">\n    <div class=\"driver-filter\">\n      <label for=\"driver-name\">Driver Name:</label>\n      <select id=\"driver-name\" #driverName (change)=\"refreshDeliverRoute(driverName.value, deliveryDate2.value)\">\n        <option *ngFor=\"let driverNames of (driverNames$ | async); let i = index\" [value]=\"driverNames.name\" [selected]=\"i === 0\">{{driverNames.name}}</option>\n      </select>\n    </div>\n\n    <div class=\"delivery-date-filter\">\n      <label for=\"delivery-date\">Delivery Date:</label>\n      <input type=\"text\" id=\"delivery-date\" #deliveryDate2 [value]=\"today\" readonly class=\"delivery-date-input\">\n    </div>\n  </div>\n\n  <table mat-table *ngIf=\"deliveryRoute$ | async as dataSource\" [dataSource]=\"dataSource\" class=\"mat-elevation-z8 driver-routes-grid\" matSort>\n    <!-- Customer Column -->\n    <ng-container matColumnDef=\"deliveryAddress1\">\n      <th mat-header-cell *matHeaderCellDef class=\"no-bottom-border\">Customer</th>\n      <td mat-cell *matCellDef=\"let element\" class=\"no-bottom-border\">\n        {{element.deliveryAddress1}}\n        <div *ngIf=\"element !== dataSource[dataSource.length - 1]\" class=\"arrow-container\">\n          <i class=\"fas fa-arrow-down\"></i>\n          <span class=\"time-difference-arrow\">+{{ dataSource[dataSource.indexOf(element) + 1].timeDifference + ' m' }}</span>\n        </div>\n      </td>\n    </ng-container>\n\n    <!-- Address Column (Concatenation of Delivery Address 2 and 3) -->\n    <ng-container matColumnDef=\"address\">\n      <th mat-header-cell *matHeaderCellDef>Address</th>\n      <td mat-cell *matCellDef=\"let element\" class=\"address-column\">\n        <a [href]=\"getGoogleMapsUrl(element.deliveryAddress2, element.deliveryAddress3)\" target=\"_blank\">\n          {{element.deliveryAddress2}} {{element.deliveryAddress3}}\n        </a>\n      </td>\n    </ng-container>\n\n    <!-- Customer Phone Column -->\n    <ng-container matColumnDef=\"customerPhone\">\n      <th mat-header-cell *matHeaderCellDef class=\"wrap\">Customer Phone</th>\n      <td mat-cell *matCellDef=\"let element\" class=\"customerPhone\"><a href=\"tel:+1{{element.customerPhone}} \"> {{element.customerPhone}}</a> </td>\n    </ng-container>\n\n    <!-- Actual Arrival Time Column -->\n    <ng-container matColumnDef=\"actualArrivalTime\">\n      <th mat-header-cell *matHeaderCellDef>Arrival</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <div *ngIf=\"!element.actualArrivalTime || !element.fileUrl; else alreadyArrivedBlock\" class=\"custom-file-input\">\n          <input type=\"file\" id=\"file\" #fileInput (change)=\"onFileSelected(element, $event)\" accept=\"image/*\" required hidden>\n          <button type=\"button\" class=\"button\" (click)=\"fileInput.click()\">Arrived</button>\n        </div>\n        <ng-template #alreadyArrivedBlock>\n          <div>\n            <app-image-thumbnail [imageUrl]=\"element.fileUrl\"\n              [title]=\"element.deliveryAddress2 + ' ' + element.deliveryAddress3 + ' (' + (element.actualArrivalTime | date: 'medium') + ')'\"></app-image-thumbnail>\n          </div>\n        </ng-template>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" [ngClass]=\"{'arrived-row': row.actualArrivalTime}\"></tr>\n  </table>\n</div>","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\ninterface Employee {\n  name: string;\n  status: 'sick' | 'vacation' | 'onsite';\n}\n\ninterface Item {\n  description: string;\n  status: 'low' | 'none';\n  ordered: boolean;\n}\n\n@Component({\n  standalone: true,\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n  imports: [CommonModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HomeComponent implements OnInit {\n  today: Date = new Date();\n  employees: Employee[] = [\n    { name: 'Miguel Rodriguez', status: 'onsite' },\n    { name: 'Maria Lopez', status: 'sick' },\n    { name: 'Michael Johnson', status: 'vacation' },\n    { name: 'Arev Sarkisian', status: 'onsite' },\n    { name: 'Narek Petrosian', status: 'onsite' },\n    { name: 'Lilit Avetisyan', status: 'onsite' },\n    { name: 'Anahit Hovhannisyan', status: 'onsite' },\n    { name: 'David Martirosyan', status: 'onsite' },\n    { name: 'Armen Harutyunyan', status: 'sick' },\n    { name: 'Karen Avanesyan', status: 'vacation' },\n  ];\n\n  items: Item[] = [\n    { description: 'Marinated Anchovies Fresh 2.2#', status: 'none', ordered: true },\n    { description: 'Octopus Spanish 6-8 Whole Raw Frozen', status: 'none', ordered: true },\n    { description: 'Clam Whole Cooked Frozen', status: 'none', ordered: true },\n    { description: 'PRODUCE KAIWARE (RADISH-SPROUTS)', status: 'none', ordered: true },\n    { description: 'PRODUCE OHBA (PERILLA-LEAVES)', status: 'none', ordered: true },\n    { description: 'Cold-Smoked Salmon Fillet Sliced With-Skin Deluxe *NOIR*', status: 'none', ordered: false },\n    { description: 'ALBACORE SUSHI LOIN FROZEN', status: 'low', ordered: false },\n    { description: 'LOBSTER MEAT CK (CLAW / KNUCKLE) FROZEN', status: 'low', ordered: false },\n    { description: 'OYSTER FAT BASTARD LIVE', status: 'low', ordered: false },\n    { description: 'Salmon Atlantic Fillet Fresh 2-3 E-Trim Skin-Off 10lb', status: 'low', ordered: false },\n  ];\n\n  constructor(private router: Router) {}\n\n  ngOnInit(): void {\n    this.sortEmployees();\n    this.sortItems();\n  }\n\n  sortEmployees(): void {\n    this.employees.sort((a, b) => {\n      const statusOrder = { sick: 0, vacation: 1, onsite: 2 };\n      return statusOrder[a.status] - statusOrder[b.status];\n    });\n  }\n\n  sortItems(): void {\n    this.items.sort((a, b) => {\n      const statusOrder = { none: 0, low: 1 };\n      return statusOrder[a.status] - statusOrder[b.status];\n    });\n  }\n\n  getStatusIcon(status: string): string {\n    switch (status) {\n      case 'sick':\n      case 'vacation':\n      case 'onsite':\n      case 'low':\n      case 'none':\n        return 'circle';\n      default:\n        return '';\n    }\n  }\n\n  getStatusColor(status: string): string {\n    switch (status) {\n      case 'sick':\n        return 'red';\n      case 'vacation':\n      case 'low':\n        return 'orange';\n      case 'onsite':\n      case 'ordered':\n        return 'green';\n      case 'none':\n        return 'red';\n      default:\n        return '';\n    }\n  }\n\n  navigateTo(page: string): void {\n    this.router.navigate([`/${page}`]);\n  }\n}\n","<div class=\"container\">\n    <div class=\"header-container\">\n        <h1 class=\"date\">{{ today | date:'fullDate' }}</h1>\n    </div>\n\n    <div class=\"kpi-container\">\n        <div class=\"kpi\">\n            <h2>Online Orders</h2>\n            <p>42</p>\n        </div>\n        <div class=\"kpi\">\n            <h2>Deliveries</h2>\n            <p>12/20</p>\n        </div>\n        <div class=\"kpi\">\n            <h2>Deliveries Ahead of Schedule</h2>\n            <p>67%</p>\n        </div>\n    </div>\n\n    <div class=\"grid-container\">\n        <div class=\"grid\">\n            <h2>Items</h2>\n            <table class=\"item-grid\">\n                <thead>\n                    <tr>\n                        <th>Description</th>\n                        <th>Status</th>\n                        <th>Ordered</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let item of items\">\n                        <td>{{ item.description }}</td>\n                        <td class=\"status-cell\">\n                            <mat-icon class=\"status-icon\" [ngStyle]=\"{'color': getStatusColor(item.status)}\">{{ getStatusIcon(item.status) }}</mat-icon>\n                            {{ item.status | titlecase }}\n                        </td>\n                        <td class=\"ordered-cell\">\n                            <ng-container *ngIf=\"item.ordered\">\n                                <mat-icon class=\"status-icon\" [ngStyle]=\"{'color': getStatusColor('ordered')}\">circle</mat-icon>\n                                Ordered\n                            </ng-container>\n                            <ng-container *ngIf=\"!item.ordered\">\n                                <!-- Empty cell content for unordered items -->\n                                &nbsp;\n                            </ng-container>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n\n        <div class=\"grid\">\n            <h2>Employees</h2>\n            <table class=\"employee-grid\">\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Status</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let employee of employees\">\n                        <td>{{ employee.name }}</td>\n                        <td class=\"status-cell\">\n                            <mat-icon class=\"status-icon\" [ngStyle]=\"{'color': getStatusColor(employee.status)}\">{{ getStatusIcon(employee.status) }}</mat-icon>\n                            {{ employee.status | titlecase }}\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n","import { ChangeDetectionStrategy, Component, Input, TemplateRef } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\n\n@Component({\n  standalone: true,\n  selector: 'app-image-thumbnail',\n  templateUrl: './image-thumbnail.component.html',\n  styleUrl: './image-thumbnail.component.css',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ImageThumbnailComponent {\n  @Input() imageUrl: string = '';\n  @Input() title: string | null = ' ';\n\n  modalRef!: BsModalRef;\n\n  constructor(private modalService: BsModalService) {}\n\n  openModal(template: string | TemplateRef<unknown>) {\n    this.modalRef = this.modalService.show(template, Object.assign({}, { class: 'modal-lg' }));\n  }\n}\n","<!-- eslint-disable @angular-eslint/template/click-events-have-key-events -->\n<!-- eslint-disable @angular-eslint/template/interactive-supports-focus -->\n<div (click)=\"openModal(imageModal)\">\n    <img [src]=\"imageUrl\" alt=\"Image Thumbnail\" title=\"Click to enlarge\" class=\"thumbnail\" (keyup)=\"modalRef.hide()\">\n</div>\n\n<ng-template #imageModal>\n    <div class=\" modal-header\">\n        <h4 class=\"modal-title\">{{title}}</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body text-center\">\n        <img [src]=\"imageUrl\" alt=\"Full Image\" class=\"full-image\" (click)=\"modalRef.hide()\" (keyup)=\"modalRef.hide()\">\n    </div>\n</ng-template>","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { InventoryService } from '../../services/inventory.service';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { InventoryItem } from 'src/app/models/inventoty-item.model';\nimport { BehaviorSubject, Subject, Subscription } from 'rxjs';\nimport { InfiniteScrollDirective } from 'ngx-infinite-scroll';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  standalone: true,\n  selector: 'app-inventory',\n  templateUrl: './inventory.component.html',\n  styleUrls: ['./inventory.component.css'],\n  imports: [CommonModule, InfiniteScrollDirective],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class InventoryComponent implements OnInit, OnDestroy {\n  page = 0;\n  size = 50;\n  searchTerm = '';\n  private searchSubject: Subject<string> = new Subject<string>();\n  private searchSubscription!: Subscription;\n\n  private inventoryItemsSubject = new BehaviorSubject<InventoryItem[]>([]);\n  inventoryItems$ = this.inventoryItemsSubject.asObservable();\n\n  constructor(private inventoryService: InventoryService) {}\n\n  ngOnInit(): void {\n    this.loadData();\n\n    this.searchSubscription = this.searchSubject\n      .pipe(\n        distinctUntilChanged(this.trimComparator), // Only emit if value is different from the last value\n        debounceTime(200), // Wait 200ms after the last event before emitting last event\n      )\n      .subscribe((searchTerm) => {\n        this.searchTerm = searchTerm;\n        this.inventoryItemsSubject.next([]);\n        this.loadData();\n      });\n  }\n\n  loadData(): void {\n    console.log('loadData');\n    this.inventoryService.getInventoryItems(this.page, this.size, this.searchTerm).subscribe({\n      next: (inventoryItems: InventoryItem[]) => {\n        const currentData = this.inventoryItemsSubject.value;\n        const newData = inventoryItems.filter((item) => !currentData.some((currentItem) => currentItem.id === item.id));\n        this.inventoryItemsSubject.next([...currentData, ...newData]); // needed for the scroll\n      },\n    });\n  }\n\n  onScroll(): void {\n    this.page++;\n    this.loadData();\n  }\n\n  onSearchChange(event: Event) {\n    const searchTerm = (event.target as HTMLInputElement).value;\n    this.page = 0; // Reset page when searching\n    this.searchSubject.next(searchTerm);\n  }\n\n  private trimComparator(prev: string, curr: string): boolean {\n    return prev.trim() === curr.trim();\n  }\n\n  ngOnDestroy(): void {\n    if (this.searchSubscription) {\n      this.searchSubscription.unsubscribe();\n    }\n  }\n}\n","<div class=\"content\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"50\" (scrolled)=\"onScroll()\">\n\n    <div class=\"container\">\n        <div class=\"image-container\">\n            <img src=\"assets/logo.png\" alt=\"Company Logo\">\n        </div>\n        <h2 class=\"inventory-title\">Inventory</h2>\n        <div class=\"filters\">\n            <input type=\"text\" placeholder=\"Search Inventory\" (input)=\"onSearchChange($event)\">\n        </div>\n        <table class=\"inventory-grid\">\n            <thead>\n                <tr>\n                    <th class=\"shrinkable-header\">ID</th>\n                    <th class=\"shrinkable-header product-header\">Product</th>\n                    <th class=\"shrinkable-header\">Unit</th>\n                    <th class=\"shrinkable-header\">Pack<br>Size</th>\n                    <th class=\"shrinkable-header\">Price</th>\n                    <th class=\"shrinkable-header\">W<br>O<br>H</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let item of inventoryItems$ | async\">\n                    <td>{{ item.id }}</td>\n                    <td class=\"wrap product-column\">{{ item.compDescription }}</td>\n                    <td>{{ item.unitType }}</td>\n                    <td>{{ item.packSize }}</td>\n                    <td>{{ item.activePrice | currency:'USD':'symbol':'1.2-2' }}</td>\n                    <td>{{ item.woh }}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n})\nexport class LoginComponent {}\n","<br /><br /><br />\n\n<h1 style=\"padding-left: 200px;\">Login page</h1>\n\n<br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />","import { CommonModule } from '@angular/common';\nimport { Component, Input, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-logo',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './logo.component.html',\n  styleUrls: ['./logo.component.css'],\n})\nexport class LogoComponent implements OnChanges {\n  @Input() companyId!: number;\n\n  imageSrc = 'assets/fogriver.png';\n  imageBackgroundColor = '#000000';\n\n  ngOnChanges(): void {\n    if (this.companyId === 3) {\n      this.imageSrc = 'assets/fogriver.png';\n      this.imageBackgroundColor = '#000000'; // Black background\n    } else {\n      this.imageSrc = 'assets/logo.png';\n      this.imageBackgroundColor = 'rgba(0, 16, 46, 1)'; // Dark blue background\n    }\n  }\n}\n","<div *ngIf=\"companyId\" class=\"image-container\" [ngStyle]=\"{'background-color': imageBackgroundColor}\">\n    <img [src]=\"imageSrc\" alt=\"Company Logo\">\n</div>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n    selector: 'app-logout',\n    templateUrl: './logout.component.html',\n    styleUrls: ['./logout.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone: true,\n})\nexport class LogoutComponent {}\n","<br /><br /><br />\n\n<h1 style=\"padding-left: 200px;\">Logout page</h1>\n\n<br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Location, CommonModule } from '@angular/common';\nimport { LogoComponent } from '../logo/logo.component';\nimport { OrderConfirmation } from 'src/app/models/order-confirmation.model';\n\n@Component({\n  standalone: true,\n  selector: 'app-order-confirmation',\n  templateUrl: './order-confirmation.component.html',\n  styleUrls: ['./order-confirmation.component.css'],\n  imports: [CommonModule, LogoComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationComponent implements OnInit {\n  orderData!: OrderConfirmation;\n  companyId!: number;\n\n  constructor(private router: Router, private location: Location) {}\n\n  ngOnInit(): void {\n    this.orderData = history.state['order']; // Access the passed data here'\n    this.companyId = history.state['companyId'];\n  }\n\n  goBack(): void {\n    this.router.navigate([`/customer/${this.orderData.customerId}/order-form`]);\n  }\n}\n","<div class=\"container\">\n \n    <app-logo [companyId]=\"companyId\"></app-logo>\n  \n  <h2>Hello {{ orderData.customerName }},</h2>\n  <p>Thank you for your order. Here are the details of your order:</p>\n  <br>\n  <table class=\"order-grid\" id=\"order-grid\">\n    <thead>\n      <tr>\n        <th>Description</th>\n        <th>Unit Type</th>\n        <th>Pack Size</th>\n        <th>Price</th>\n        <th>Qty</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let product of orderData.profiles\">\n        <td>{{ product.profileDescription }}</td>\n        <td>{{ product.unitType }}</td>\n        <td>{{ product.packSize }}</td>\n        <td class=\"price\">{{ product.salesPrice | number:'1.2-2' }}</td>\n        <td>{{ product.quantity }}</td>\n      </tr>\n    </tbody>\n  </table>\n\n  <div>\n    <div class=\"total\"><strong>Total: </strong>\n      <span id=\"total-amount\">{{ orderData.totalPrice| currency:'USD':true }}</span>\n    </div>\n  </div>\n\n  <div>\n    <p>Delivery date: {{orderData.deliveryDate | date: 'MM/dd/yyyy'}}</p>\n  </div>\n  <div *ngIf=\"orderData.shipToId\">\n    <p>Delivery location: {{orderData.shipToName}}</p>\n  </div>\n\n\n  <p>Thank you,<br>Your Sales Team</p>\n  <button class=\"button\" (click)=\"goBack()\">Back</button>\n</div>\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { LogoComponent } from '../logo/logo.component';\nimport { OrderConfirmation } from 'src/app/models/order-confirmation.model';\n\n@Component({\n  standalone: true,\n  selector: 'app-order-exists',\n  templateUrl: './order-exists.component.html',\n  styleUrls: ['./order-exists.component.css'],\n  imports: [CommonModule, LogoComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderExistsComponent implements OnInit {\n  orderData!: OrderConfirmation;\n  companyId!: number;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.orderData = history.state['order']; // Access the passed data here\n    this.companyId = history.state['companyId'];\n  }\n\n  goBack(): void {\n    window.history.back();\n  }\n}\n","<div class=\"container\">\n  <app-logo [companyId]=\"companyId\"></app-logo>\n\n  <h2>Existing Order</h2>\n  <div class=\"error-message\" style=\"color: red;\">\n    We already have an order for you placed on this delivery date. If you would like it changed please contact your sales rep.\n  </div>\n  <br>\n  <table class=\"order-grid\" id=\"order-grid\">\n    <thead>\n      <tr>\n        <th>Product Description</th>\n        <th>Unit Type</th>\n        <th>Pack Size</th>\n        <th>Price</th>\n        <th>Qty</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let profile of orderData.profiles\">\n        <td>{{ profile.profileDescription }}</td>\n        <td>{{ profile.unitType }}</td>\n        <td>{{ profile.packSize }}</td>\n        <td class=\"price\">{{ profile.salesPrice| currency:'USD':true }}</td>\n        <td>{{ profile.quantity }}</td>\n      </tr>\n    </tbody>\n  </table>\n\n  <div>\n    <div class=\"total\"><strong>Total: </strong>\n      <span id=\"total-amount\">{{ orderData.totalPrice| currency:'USD':true }}</span>\n    </div>\n  </div>\n\n  <div>\n    <p>Sales rep: {{orderData.salesRepName}}</p>\n  </div>\n  <div>\n    <p>Delivery date: {{orderData.deliveryDate | date: 'MM/dd/yyyy'}}</p>\n  </div>\n  <div *ngIf=\"orderData.shipToId\">\n    <p>Delivery location: {{orderData.shipToName}}</p>\n  </div>\n\n\n\n  <button class=\"button\" (click)=\"goBack()\">Back</button>\n</div>","import { CommonModule } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormGroup, ReactiveFormsModule, ValidationErrors, Validators } from '@angular/forms';\nimport { environment } from 'src/environments/environment';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LogoComponent } from '../logo/logo.component';\nimport { Profile } from 'src/app/models/profile-model';\nimport { Order } from 'src/app/models/order.model';\nimport { OrderRequest } from 'src/app/models/order-request.model';\nimport { ProfileRequest } from 'src/app/models/profile-request.model';\nimport { OrderFormService } from 'src/app/services/order-form.service';\n\n@Component({\n  standalone: true,\n  selector: 'app-order-form',\n  templateUrl: './order-form.component.html',\n  styleUrls: ['./order-form.component.css'],\n  imports: [CommonModule, ReactiveFormsModule, LogoComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderNewComponent implements OnInit {\n  private apiUrl = environment.apiUrl;\n  order!: Order;\n  hasSpecials = false;\n  orderForm!: FormGroup;\n  submitted: boolean = false;\n  customerId!: number;\n\n  constructor(\n    private http: HttpClient,\n    private fb: FormBuilder,\n    private router: Router,\n    private snackBarService: SnackbarService,\n    private orderService: OrderFormService,\n    private route: ActivatedRoute,\n    private cdr: ChangeDetectorRef,\n  ) {}\n\n  ngOnInit(): void {\n    // Get customerId from route parameters\n    this.route.paramMap.subscribe((params) => {\n      const id = params.get('id');\n      this.customerId = id ? +id : NaN;\n      this.loadOrderData(this.customerId);\n    });\n  }\n\n  loadOrderData(customerId: number): void {\n    this.orderService.getOrderData(customerId).subscribe({\n      next: (order: Order) => {\n        this.order = order;\n        this.hasSpecials = this.order.profiles.some((profile) => profile.isSpecial);\n        const shipToValidators = order.shipTos?.length ? [Validators.required] : [];\n        this.orderForm = this.fb.group({\n          customerId: [order.customerId],\n          deliveryDate: ['', [Validators.required, this.dateAfterTomorrowValidator, this.dateWithinThreeMonthsValidator, this.dateNotOnSundayValidator]],\n          shipToId: ['', shipToValidators],\n          customerPo: [''],\n          totalPrice: [0], // Initialize totalPrice\n          profiles: this.fb.array(\n            this.order.profiles.map((profile) => this.createProfileGroup(profile)),\n            [this.atLeastOneQuantityValidator],\n          ),\n        });\n        this.cdr.markForCheck();\n      },\n    });\n  }\n\n  get formControls() {\n    return this.orderForm.controls;\n  }\n\n  get profileControls(): FormArray {\n    return this.orderForm.get('profiles') as FormArray;\n  }\n\n  get totalPrice(): number {\n    let totalPrice = 0;\n    for (let i = 0; i < this.order.profiles.length; i++) {\n      const quantity = this.profileControls.at(i).get('quantity')?.value || 0;\n      const packSize = this.order.profiles[i].packSize || 0; // Assuming 'packSize' is a property of 'profile'\n      const price = this.order.profiles[i].salesPrice || 0; // Assuming 'salesPrice' is the price per unit\n      totalPrice += quantity * packSize * price;\n    }\n    return totalPrice;\n  }\n  \n  getRowTotalPrice(index: number): number {\n    const quantity = this.profileControls.at(index).get('quantity')?.value || 0;\n    const packSize = this.order.profiles[index].packSize || 0; // Assuming 'packSize' is a property of 'profile'\n    const price = this.order.profiles[index].salesPrice || 0; // Assuming 'salesPrice' is the price per unit\n    return quantity * packSize * price;\n  }\n  \n\n  createProfileGroup(profile: Profile): FormGroup {\n    return this.fb.group({\n      profileDid: [profile.id], // Use id from the API response as profileDid\n      quantity: ['', Validators.min(1)],\n    });\n  }\n\n  onSubmit() {\n    this.snackBarService.showSnackBar('Submitting Order...');\n\n    if (this.orderForm.valid) {\n      console.log('Form Submitted', this.orderForm.value);\n      const order: OrderRequest = this.orderForm.value;\n      order.profiles = order.profiles.filter((profile: ProfileRequest) => profile.quantity > 0);\n      order.totalPrice = this.totalPrice; // Calculate total price\n\n      // POST request to the API\n      this.orderService.placeOrder(this.customerId, order).subscribe({\n        next: (orderConfirmation) => {\n          console.log('Order submitted successfully', orderConfirmation);\n          this.router.navigate(['/customer', this.customerId, 'order-confirmation'], { state: { order: orderConfirmation, companyId: this.order.companyId } });\n          this.snackBarService.showSnackBar('Order submitted successfully');\n        },\n        error: (error) => {\n          const errorCode = error.status;\n          const errorMessage = errorCode == 409 ? 'An order already exists for that day' : 'Error submitting order';\n          if (errorCode == 409) {\n            this.router.navigate(['/customer', this.customerId, 'order-exists'], { state: { order: error.error, companyId: this.order.companyId } });\n          }\n          this.snackBarService.showSnackBar(errorMessage);\n\n          console.error('Error submitting order', error);\n        },\n      });\n\n      this.submitted = true;\n    } else {\n      this.orderForm.markAllAsTouched(); // Mark all controls as touched to show validation errors\n    }\n  }\n\n  get dataToBeSubmitted() {\n    const data = this.orderForm.value;\n    data.profiles = data.profiles.filter((profile: { quantity: number }) => profile.quantity > 0);\n    return data;\n  }\n\n  isQuantityInvalid(index: number): boolean {\n    return this.profileControls.at(index).get('quantity')?.invalid || false;\n  }\n\n  isQuantityEntered(index: number): boolean {\n    return typeof this.profileControls.at(index).get('quantity')?.value === 'number';\n  }\n\n  // validator\n  dateAfterTomorrowValidator(control: AbstractControl): ValidationErrors | null {\n    const dateValue = new Date(control.value);\n    const today = new Date();\n    return dateValue > today ? null : { dateAfterTomorrow: true };\n  }\n\n  // validator\n  atLeastOneQuantityValidator(control: AbstractControl): ValidationErrors | null {\n    const formArray = control as FormArray;\n    const hasAtLeastOneQuantity = formArray.controls.some((group) => group.get('quantity')?.value > 0);\n    return hasAtLeastOneQuantity ? null : { atLeastOneQuantity: true };\n  }\n\n  // validator\n  dateWithinThreeMonthsValidator(control: AbstractControl): ValidationErrors | null {\n    const dateValue = new Date(control.value);\n    const threeMonthsFromNow = new Date();\n    threeMonthsFromNow.setMonth(threeMonthsFromNow.getMonth() + 3);\n    threeMonthsFromNow.setHours(0, 0, 0, 0);\n\n    return dateValue <= threeMonthsFromNow ? null : { dateWithinThreeMonths: true };\n  }\n\n  // validator\n  dateNotOnSundayValidator(control: AbstractControl): ValidationErrors | null {\n    const dateValue = new Date(control.value);\n    return dateValue.getDay() != 6 ? null : { dateNotOnSunday: true };\n  }\n}\n","@if (order) {\n<form [formGroup]=\"orderForm\" (ngSubmit)=\"onSubmit()\" class=\"order-form\">\n    <div class=\"container\">\n        <app-logo [companyId]=\"order.companyId\"></app-logo>\n        <h2 class=\"page-title\">Order Form</h2>\n\n        <div *ngIf=\"order.customerName && order.salesRepName\" class=\"customer-sales-info\">\n            <p><strong>Customer:</strong> <br>\n                {{ order.customerName }}</p>\n            <div class=\"sales-rep-info\">\n                <strong>Sales Rep:</strong> <br>\n                {{ order.salesRepName }} \n                <br><a [href]=\"'tel:' + order.salesRepPhone\">{{ order.salesRepPhone }}</a>\n            </div>\n        </div>\n\n        @if (order.shipTos) {\n        <div class=\"shipto-dropdown\">\n            <label for=\"ship-to\"><strong>Ship to:</strong></label>\n            <select id=\"ship-to\" formControlName=\"shipToId\" class=\"input-select\">\n                <option *ngFor=\"let shipTo of order.shipTos\" [value]=\"shipTo.id\">{{ shipTo.shipToName }}</option>\n            </select>\n            <div *ngIf=\"(orderForm.get('shipToId')?.touched || orderForm.get('shipToId')?.dirty) && orderForm.get('shipToId')?.errors?.['required']\" class=\"error\">\n                Ship to is required.\n            </div>\n        </div>\n        }\n\n        @if (hasSpecials) {\n        <h3 class=\"section-title\">Specials</h3>\n        <div formArrayName=\"profiles\" class=\"profiles\">\n            <table class=\"table\">\n                <thead>\n                    <tr>\n                        <th>Description</th>\n                        <th>Qty</th>\n                        <th>Unit Type</th>\n                        <th>Pack Size</th>\n                        <th>Price</th>\n                        <th>Total</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <ng-container *ngFor=\"let profile of profileControls.controls; let i = index\">\n                        <tr *ngIf=\"order.profiles[i].isSpecial\" [formGroupName]=\"i\" [ngStyle]=\"{'background-color': isQuantityEntered(i) ? 'lightgrey' : 'white'}\">\n                            <input type=\"text\" formControlName=\"profileDid\" class=\"input-text hidden-column\">\n                            <td>{{ order.profiles[i].profileDescription }}</td>\n                            <td><input type=\"number\" formControlName=\"quantity\" class=\"input-number\">\n                                <div *ngIf=\"profile.get('quantity')?.errors?.['min']\" class=\"error\">The number must be greater than zero.</div>\n                            </td>\n                            <td>{{ order.profiles[i].unitType }}</td>\n                            <td>{{ order.profiles[i].packSize }}</td>\n                            <td>{{ order.profiles[i].salesPrice | currency:'USD':'symbol':'1.2-2'}}</td>\n                            <td>{{ getRowTotalPrice(i) | currency:'USD':'symbol':'1.2-2' }}</td>\n                        </tr>\n                    </ng-container>\n                </tbody>\n            </table>\n        </div>\n        }\n\n        <h3 class=\"section-title\">Products</h3>\n        <div formArrayName=\"profiles\" class=\"profiles\">\n            <table class=\"table\">\n                <thead>\n                    <tr>\n                        <th>Description</th>\n                        <th>Qty</th>\n                        <th>Unit Type</th>\n                        <th>Pack Size</th>\n                        <th>Price</th>\n                        <th>Total</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <ng-container *ngFor=\"let profile of profileControls.controls; let i = index\">\n                        <tr *ngIf=\"!order.profiles[i].isSpecial\" [formGroupName]=\"i\" [ngStyle]=\"{'background-color': isQuantityEntered(i) ? 'lightgrey' : 'white'}\">\n                            <input type=\"text\" formControlName=\"profileDid\" class=\"input-text hidden-column\">\n                            <td>{{ order.profiles[i].profileDescription }}</td>\n                            <td><input type=\"number\" formControlName=\"quantity\" class=\"input-number\">\n                                <div *ngIf=\"profile.get('quantity')?.errors?.['min']\" class=\"error\">The number must be greater than zero.</div>\n                            </td>\n                            <td>{{ order.profiles[i].unitType }}</td>\n                            <td>{{ order.profiles[i].packSize }}</td>\n                            <td>{{ order.profiles[i].salesPrice | currency:'USD':'symbol':'1.2-2'}}</td>\n                            <td>{{ getRowTotalPrice(i) | currency:'USD':'symbol':'1.2-2' }}</td>\n                        </tr>\n                    </ng-container>\n                </tbody>\n            </table>\n            <div *ngIf=\"submitted && orderForm.get('profiles')?.hasError('atLeastOneQuantity')\" class=\"error\">\n                At least one quantity is required\n            </div>\n        </div>\n\n        <div *ngIf=\"profileControls.touched && profileControls.errors?.['atLeastOneQuantity']\" class=\"error\">\n            Enter at least one quantity\n        </div>\n\n        <div class=\"total-price\">\n            <br>Total price: {{totalPrice | currency:'USD':'symbol':'1.2-2'}}\n            <div *ngIf=\"totalPrice > 10000\" class=\"error\">The total has to be less than $10,000</div>\n        </div>\n\n        <div>\n            <label for=\"customer-po\"><strong>Customer PO: </strong></label>\n            <input id=\"customer-po\" formControlName=\"customerPo\" type=\"text\" class=\"customer-po\">\n        </div>\n\n        <div class=\"delivery-date\">\n            <label for=\"delivery-date\"><strong>Delivery Date:</strong></label>\n            <input id=\"delivery-date\" formControlName=\"deliveryDate\" type=\"date\" class=\"input-date\">\n            <div *ngIf=\"formControls['deliveryDate'].touched && formControls['deliveryDate'].errors?.['required']\" class=\"error\">\n                Delivery date is required.\n            </div>\n            <div *ngIf=\"formControls['deliveryDate'].dirty && formControls['deliveryDate'].errors?.['dateAfterTomorrow']\" class=\"error\">\n                Delivery date must be after today.\n            </div>\n            <div *ngIf=\"formControls['deliveryDate'].dirty && formControls['deliveryDate'].errors?.['dateWithinThreeMonths']\" class=\"error\">\n                Delivery date must be within 3 months.\n            </div>\n            <div *ngIf=\"formControls['deliveryDate'].dirty && formControls['deliveryDate'].errors?.['dateNotOnSunday']\" class=\"error\">\n                Delivery date cannot be on Sunday.\n            </div>\n        </div>\n\n        <br><button type=\"submit\" [disabled]=\"!orderForm.valid\" class=\"submit-btn\">Submit</button>\n    </div>\n</form>\n}","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, switchMap, tap } from 'rxjs';\nimport { FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { Company } from 'src/app/models/company.model';\nimport { Customer } from 'src/app/models/customer.model';\nimport { SalesRep } from 'src/app/models/sales-rep.model';\nimport { OrderLinksService } from 'src/app/services/order-links.service';\nimport { CommonModule } from '@angular/common';\nimport { LogoComponent } from '../logo/logo.component';\n\n@Component({\n  standalone: true,\n  selector: 'app-order-links',\n  templateUrl: './order-links.component.html',\n  styleUrls: ['./order-links.component.css'],\n  imports: [CommonModule, ReactiveFormsModule, RouterModule, LogoComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderLinksComponent implements OnInit {\n  form!: FormGroup;\n  companies$!: Observable<Company[]>;\n  salesPersons$!: Observable<SalesRep[]>;\n  customers: Customer[] = [];\n  filteredCustomers: Customer[] = [];\n\n  constructor(\n    private http: HttpClient,\n    private fb: FormBuilder,\n    private cdr: ChangeDetectorRef,\n    private snackbarService: SnackbarService,\n    private orderLinksService: OrderLinksService,\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      company: [],\n      salesPerson: [],\n      searchText: '',\n    });\n\n    this.companies$ = this.orderLinksService.getCompanies().pipe(\n      tap((companies) => {\n        const defaultCompany = companies.find((company) => company.name === 'PFF');\n        if (defaultCompany) {\n          this.form.get('company')!.setValue(defaultCompany);\n        }\n      }),\n    );\n\n    this.form\n      .get('company')!\n      .valueChanges.pipe(\n        switchMap((company) =>\n          this.orderLinksService.getSalesPersons(company.id).pipe(\n            tap((salesreps) => {\n              salesreps.sort((a, b) => a.name.localeCompare(b.name));\n              this.salesPersons$ = new Observable<SalesRep[]>((observer) => {\n                observer.next(salesreps);\n                observer.complete();\n              });\n              if (salesreps.length > 0) {\n                this.form.get('salesPerson')!.setValue(salesreps[0]);\n              }\n            }),\n          ),\n        ),\n      )\n      .subscribe();\n\n    this.form\n      .get('salesPerson')!\n      .valueChanges.pipe(\n        switchMap((salesrep) => {\n          const company = this.form.get('company')!.value;\n          return this.orderLinksService.getCustomers(company.id, salesrep.name);\n        }),\n      )\n      .subscribe({\n        next: (customers) => {\n          this.customers = [...customers];\n          this.customers.sort((a, b) => a.name.localeCompare(b.name));\n          this.filteredCustomers = [...this.customers];\n          this.cdr.markForCheck();\n        },\n      });\n\n    this.form.get('searchText')!.valueChanges.subscribe((searchText: string) => {\n      this.filteredCustomers = this.customers.filter((customer) => customer.name.toLowerCase().includes(searchText.toLowerCase()));\n    });\n  }\n\n  generateLink(customerId: number): string {\n    const baseUrl = window.location.href.replace('/order-links', '');\n    return `${baseUrl}/customer/${customerId}/order-form`;\n  }\n\n  copyLink(customerId: number): void {\n    const link = this.generateLink(customerId);\n    navigator.clipboard\n      .writeText(link)\n      .then(() => {\n        this.snackbarService.showSnackBar('Link copied to clipboard!');\n      })\n      .catch((err) => {\n        console.error('Failed to copy link: ', err);\n      });\n  }\n}\n","<form [formGroup]=\"form\">\n  <div class=\"container\">\n    <app-logo [companyId]=\"form.get('company')?.value?.id\"></app-logo>\n\n    <h2 class=\"underlined\">Customers</h2>\n\n    <div class=\"filters\">\n      <div class=\"filter-group\">\n        <label for=\"company-filter\" class=\"filter-label\">Company:</label>\n        <select id=\"company-filter\" formControlName=\"company\">\n          <option *ngFor=\"let company of companies$ | async\" [ngValue]=\"company\">{{ company.name }}</option>\n        </select>\n      </div>\n\n      <div class=\"filter-group\">\n        <label for=\"salesname-filter\" class=\"filter-label\">Sales Rep:</label>\n        <select id=\"salesname-filter\" formControlName=\"salesPerson\">\n          <option *ngFor=\"let salesperson of salesPersons$ | async\" [ngValue]=\"salesperson\">{{ salesperson.name }}</option>\n        </select>\n      </div>\n\n      <div class=\"filter-group\">\n        <label for=\"customer-search\" class=\"filter-label\">Customer:</label>\n        <input type=\"text\" id=\"customer-search\" placeholder=\"Search Customers\" formControlName=\"searchText\" />\n      </div>\n    </div>\n\n    <table class=\"order-grid\">\n      <thead>\n        <tr>\n          <th>Customer Name</th>\n          <th>Order Form</th>\n          <th>Copy Link</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let customer of filteredCustomers;\">\n          <td>{{ customer.name }}</td>\n          <td><a [routerLink]=\"['/customer', customer.id, 'order-form']\" target=\"_blank\">Order Form</a></td>\n          <td><a href=\"javascript:void(0)\" (click)=\"copyLink(customer.id)\" (keyup)=\"copyLink(customer.id)\">Copy Link</a></td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</form>","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Observable, catchError, throwError } from 'rxjs';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\n\n@Injectable()\nexport class HttpLoggingInterceptor implements HttpInterceptor {\n  constructor(private snackBarService: SnackbarService) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler,\n  ): Observable<HttpEvent<unknown>> {\n    const authToken = 'YOUR_AUTH_TOKEN_HERE';\n\n    // Clone the request and add the authorization header\n    const authReq = request.clone({\n      setHeaders: {\n        'X-New-Header': authToken,\n      },\n    });\n\n    // Pass the cloned request with the updated header to the next handler\n    return next.handle(authReq).pipe(\n      catchError((err: unknown) => {\n        if (err instanceof HttpErrorResponse) {\n          this.handleServerSideError(err);\n        } else {\n          this.snackBarService.showSnackBar('Error fetching data');\n        }\n\n        // Re-throw the error to propagate it further\n        //return throwError(() => err);\n        // stop propagating error\n        return throwError(() => err); //EMPTY;\n      }),\n    );\n  }\n\n  private handleServerSideError(error: HttpErrorResponse) {\n    console.error(error.error.message);\n    switch (error.status) {\n      case 400: //  means the request could not be understood by the server.\n        this.snackBarService.showSnackBar(\n          'Bad Request, please try again later .',\n        );\n        break;\n      case 401: // means lacks valid authentication credentials for the target resource.\n        this.snackBarService.showSnackBar(\n          'Unauthorized, please try again later.',\n        );\n        break;\n      case 403: //  means you are not allowed access to the target resource.\n        this.snackBarService.showSnackBar('Forbidden access is denied');\n        break;\n      case 500: // means there's an issue or temporary glitch with the application's programming\n        console.log(error);\n        this.snackBarService.showSnackBar(\n          'Internal server error, please try again later.',\n        );\n        break;\n      default:\n        this.snackBarService.showSnackBar(\n          'Error fetching data, please try again later.',\n        );\n        break;\n    }\n  }\n}\n","import { HttpClient, HttpEvent, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { DeliveryStop } from '../models/delivery-stop.model';\nimport { environment } from 'src/environments/environment';\n\ninterface Driver {\n  name: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DriverRouteService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  getDrivers(): Observable<Driver[]> {\n    return this.http.get<Driver[]>(`${this.apiUrl}/drivers`);\n  }\n\n  getDeliveryRoute(\n    driverName: string,\n    deliveryDate: string\n  ): Observable<DeliveryStop[]> {\n    const params = new HttpParams()\n      .set('driverName', driverName)\n      .set('deliveryDate', deliveryDate);\n    return this.http.get<DeliveryStop[]>(`${this.apiUrl}/delivery-stops`, {\n      params,\n    });\n  }\n\n  hasArrived(id: string): Observable<DeliveryStop> {\n    return this.http.patch<DeliveryStop>(`${this.apiUrl}/delivery-stops/${id}`, {});\n  }\n\n  uploadPhoto(\n    deliveryStopId: number,\n    file: File\n  ): Observable<HttpEvent<DeliveryStop>> {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    return this.http.post<DeliveryStop>(\n      `${this.apiUrl}/delivery-stops/${deliveryStopId}/photos`,\n      formData,\n      {\n        reportProgress: true,\n        observe: 'events',\n      }\n    );\n  }\n}\n","import { ErrorHandler, Injectable } from '@angular/core';\nimport { SnackbarService } from './snackbar.service';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GlobalErrorHandlerService implements ErrorHandler {\n  constructor(private snackBarService: SnackbarService) {}\n\n  handleError(error: any) {\n    if (error instanceof HttpErrorResponse) {\n      // Server-side error\n      if (!navigator.onLine) {\n        this.snackBarService.showSnackBar('No internet connection');\n        return;\n      }\n      if (error.error instanceof ErrorEvent) {\n        this.snackBarService.showSnackBar(error.error.message);\n        return;\n      }\n\n      if (error.status === 413) {\n        this.snackBarService.showSnackBar('File too large');\n        return;\n      }\n\n      console.error('An error occurred:', error);\n      console.log(JSON.stringify(error.error));\n\n      this.snackBarService.showSnackBar('An error has occured: ' + error.error.message);\n    } else {\n      // Client-side error\n      console.error(error);\n    }\n  }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { InventoryItem } from '../models/inventoty-item.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class InventoryService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  getInventoryItems(\n    page: number,\n    size: number,\n    searchTerm: string,\n  ): Observable<InventoryItem[]> {\n    const params = new HttpParams()\n      .set('page', page.toString())\n      .set('size', size.toString())\n      .set('search', searchTerm);\n    return this.http\n      .get<{ content: InventoryItem[] }>(`${this.apiUrl}/inventory`, {\n        params,\n      })\n      .pipe(map((response) => response.content));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { OrderRequest } from '../models/order-request.model';\nimport { OrderConfirmation } from '../models/order-confirmation.model';\nimport { environment } from 'src/environments/environment';\nimport { Order } from '../models/order.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderFormService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  getOrderData(customerId: number): Observable<Order> {\n    return this.http.get<Order>(`${this.apiUrl}/customers/${customerId}/profiles`);\n  }\n\n  placeOrder(customerId: number, orderData: OrderRequest): Observable<OrderConfirmation> {\n    return this.http.post<OrderConfirmation>(`${this.apiUrl}/customers/${customerId}/orders`, orderData);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { Company } from '../models/company.model';\nimport { Customer } from '../models/customer.model';\nimport { SalesRep } from '../models/sales-rep.model';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderLinksService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  getCompanies(): Observable<Company[]> {\n    return this.http.get<Company[]>(`${this.apiUrl}/companies`);\n  }\n\n  getSalesPersons(companyId: number) {\n    return this.http.get<SalesRep[]>(\n      `${this.apiUrl}/companies/${companyId}/sales-reps`,\n    );\n  }\n\n  getCustomers(companyId: number, salesRepName: string) {\n    return this.http.get<Customer[]>(\n      `${this.apiUrl}/companies/${companyId}/sales-reps/${salesRepName}/customers`,\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarRef, MatSnackBarVerticalPosition, TextOnlySnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SnackbarService {\n  private snackBarRef!: MatSnackBarRef<TextOnlySnackBar>;\n  private duration = 10000;\n  private verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n  private horizontalPos: MatSnackBarHorizontalPosition = 'center';\n  private action = 'Hide';\n\n  constructor(private matSnackBar: MatSnackBar) {}\n\n  showSnackBar(message: string, style?: string) {\n    this.snackBarRef = this.matSnackBar.open(message, this.action, {\n      duration: this.duration,\n      verticalPosition: this.verticalPosition,\n      horizontalPosition: this.horizontalPos,\n      panelClass: style,\n    });\n    this.snackBarRef.onAction().subscribe(() => {\n      this.closeSnackBar();\n    });\n  }\n\n  closeSnackBar() {\n    if (this.snackBarRef) {\n      this.snackBarRef.dismiss();\n    }\n  }\n}\n","export const environment = {\n  production: false,\n  apiKey: 'devKey',\n  apiUrl: 'https://uat-pffc.onrender.com/api',\n};\n","import { AppComponent } from './app/app.component';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { InfiniteScrollDirective } from 'ngx-infinite-scroll';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { provideAnimations } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app/app-routing.module';\nimport { BrowserModule, bootstrapApplication } from '@angular/platform-browser';\nimport { GlobalErrorHandlerService } from './app/services/global-error-handler.service';\nimport { ErrorHandler, importProvidersFrom } from '@angular/core';\nimport { HttpLoggingInterceptor } from './app/core/interceptors/http-logging.interceptor';\nimport { HTTP_INTERCEPTORS, provideHttpClient } from '@angular/common/http';\n\nbootstrapApplication(AppComponent, {\n  providers: [\n    importProvidersFrom(\n      BrowserModule,\n      AppRoutingModule,\n      FormsModule,\n      ReactiveFormsModule,\n      CommonModule,\n      MatSlideToggleModule,\n      MatTableModule,\n      MatSidenavModule,\n      MatToolbarModule,\n      MatIconModule,\n      MatListModule,\n      MatMenuModule,\n      MatSnackBarModule,\n      InfiniteScrollDirective,\n      ModalModule.forRoot(),\n    ),\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpLoggingInterceptor,\n      multi: true,\n    },\n    { provide: ErrorHandler, useClass: GlobalErrorHandlerService },\n    provideHttpClient(),\n    provideAnimations(),\n  ],\n}).catch((err) => console.error(err));\n"],"names":["RouterModule","DriverRouteComponent","HomeComponent","OrderLinksComponent","LoginComponent","LogoutComponent","InventoryComponent","OrderConfirmationComponent","OrderExistsComponent","OrderNewComponent","routes","path","redirectTo","pathMatch","component","title","AppRoutingModule","_","_2","_3","forRoot","imports","i1","exports","isDevMode","MatIcon","NavigationEnd","RouterLink","RouterLinkActive","RouterOutlet","MatToolbar","environment","CommonModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵpureFunction1","_c0","ctx_r0","showWarning","ɵɵadvance","ɵɵtextInterpolate","apiUrl","AppComponent","constructor","router","isOrderForm","includes","alert","ngOnInit","events","subscribe","event","currentRoute","urlAfterRedirects","ɵɵdirectiveInject","Router","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵtemplate","AppComponent_Conditional_0_Template","ɵɵelement","AppComponent_Conditional_8_Template","ɵɵconditional","i2","NgClass","styles","changeDetection","SecurityContext","map","tap","HttpEventType","ImageThumbnailComponent","MatTableModule","driverNames_r4","name","i_r5","ɵɵtextInterpolate1","dataSource_r7","indexOf","element_r6","timeDifference","DriverRouteComponent_table_18_td_3_div_2_Template","deliveryAddress1","length","ctx_r8","getGoogleMapsUrl","element_r8","deliveryAddress2","deliveryAddress3","ɵɵsanitizeUrl","ɵɵtextInterpolate2","ɵɵpropertyInterpolate1","element_r10","customerPhone","ɵɵlistener","DriverRouteComponent_table_18_td_12_div_1_Template_input_change_1_listener","$event","ɵɵrestoreView","_r11","element_r12","ɵɵnextContext","$implicit","ɵɵresetView","onFileSelected","DriverRouteComponent_table_18_td_12_div_1_Template_button_click_3_listener","fileInput_r13","ɵɵreference","click","fileUrl","ɵɵpipeBind2","actualArrivalTime","DriverRouteComponent_table_18_td_12_div_1_Template","DriverRouteComponent_table_18_td_12_ng_template_2_Template","ɵɵtemplateRefExtractor","alreadyArrivedBlock_r14","row_r15","ɵɵelementContainerStart","DriverRouteComponent_table_18_th_2_Template","DriverRouteComponent_table_18_td_3_Template","DriverRouteComponent_table_18_th_5_Template","DriverRouteComponent_table_18_td_6_Template","DriverRouteComponent_table_18_th_8_Template","DriverRouteComponent_table_18_td_9_Template","DriverRouteComponent_table_18_th_11_Template","DriverRouteComponent_table_18_td_12_Template","DriverRouteComponent_table_18_tr_13_Template","DriverRouteComponent_table_18_tr_14_Template","displayedColumns","driverRouteService","snackBarService","sanitizer","cdr","maxFileSize","selectedFile","today","formatDate","Date","driverNames$","getDrivers","pipe","data","refreshDeliverRoute","date","month","getMonth","slice","day","getDate","year","getFullYear","driverName","deliveryDate","formattedDate","toISOString","split","deliveryRoute$","getDeliveryRoute","deliveryStops","calculateTimeDifferences","deliveryRoute","input","target","files","file","type","startsWith","size","uploadFile","showSnackBar","uploadPhoto","id","next","Response","updatedDeliveryStop","body","Object","assign","closeSnackBar","detectChanges","address2","address3","url","encodeURIComponent","sanitizedUrl","sanitize","URL","bypassSecurityTrustUrl","i","currentStop","previousStop","currentTime","plannedArrivalTime","getTime","previousTime","timeDifferenceInMinutes","Math","round","undefined","DriverRouteService","SnackbarService","i3","DomSanitizer","ChangeDetectorRef","DriverRouteComponent_Template","DriverRouteComponent_Template_select_change_9_listener","_r1","driverName_r2","deliveryDate2_r3","value","DriverRouteComponent_option_11_Template","DriverRouteComponent_table_18_Template","ɵɵpipeBind1","i4","NgForOf","NgIf","AsyncPipe","DatePipe","i5","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","getStatusColor","HomeComponent_tr_35_ng_container_9_Template","HomeComponent_tr_35_ng_container_10_Template","item_r2","description","status","getStatusIcon","ordered","employee_r3","employees","items","sortEmployees","sortItems","sort","a","b","statusOrder","sick","vacation","onsite","none","low","navigateTo","page","navigate","HomeComponent_Template","HomeComponent_tr_35_Template","HomeComponent_tr_47_Template","NgStyle","TitleCasePipe","ImageThumbnailComponent_ng_template_2_Template_button_click_3_listener","_r3","ctx_r3","modalRef","hide","ImageThumbnailComponent_ng_template_2_Template_img_click_7_listener","ImageThumbnailComponent_ng_template_2_Template_img_keyup_7_listener","imageUrl","modalService","openModal","show","class","BsModalService","inputs","ImageThumbnailComponent_Template","ImageThumbnailComponent_Template_div_click_0_listener","imageModal_r2","ImageThumbnailComponent_Template_img_keyup_1_listener","ImageThumbnailComponent_ng_template_2_Template","debounceTime","distinctUntilChanged","BehaviorSubject","Subject","InfiniteScrollDirective","item_r1","compDescription","unitType","packSize","ɵɵpipeBind4","activePrice","woh","inventoryService","searchTerm","searchSubject","inventoryItemsSubject","inventoryItems$","asObservable","loadData","searchSubscription","trimComparator","console","log","getInventoryItems","inventoryItems","currentData","newData","filter","item","some","currentItem","onScroll","onSearchChange","prev","curr","trim","ngOnDestroy","unsubscribe","InventoryService","InventoryComponent_Template","InventoryComponent_Template_div_scrolled_0_listener","InventoryComponent_Template_input_input_7_listener","InventoryComponent_tr_30_Template","CurrencyPipe","LoginComponent_Template","imageBackgroundColor","imageSrc","LogoComponent","ngOnChanges","companyId","ɵɵNgOnChangesFeature","LogoComponent_Template","LogoComponent_div_0_Template","LogoutComponent_Template","product_r1","profileDescription","salesPrice","quantity","ctx_r1","orderData","shipToName","location","history","state","goBack","customerId","Location","OrderConfirmationComponent_Template","OrderConfirmationComponent_tr_21_Template","OrderConfirmationComponent_div_33_Template","OrderConfirmationComponent_Template_button_click_38_listener","customerName","profiles","ɵɵpipeBind3","totalPrice","shipToId","DecimalPipe","profile_r1","route","window","back","ActivatedRoute","OrderExistsComponent_Template","OrderExistsComponent_tr_21_Template","OrderExistsComponent_div_36_Template","OrderExistsComponent_Template_button_click_37_listener","salesRepName","ReactiveFormsModule","Validators","order","salesRepPhone","shipTo_r3","OrderNewComponent_Conditional_0_Conditional_6_option_5_Template","OrderNewComponent_Conditional_0_Conditional_6_div_6_Template","shipTos","tmp_3_0","orderForm","get","touched","dirty","errors","OrderNewComponent_Conditional_0_Conditional_7_ng_container_19_tr_1_div_6_Template","i_r6","isQuantityEntered","tmp_9_0","profile_r5","getRowTotalPrice","OrderNewComponent_Conditional_0_Conditional_7_ng_container_19_tr_1_Template","isSpecial","OrderNewComponent_Conditional_0_Conditional_7_ng_container_19_Template","profileControls","controls","OrderNewComponent_Conditional_0_ng_container_27_tr_1_div_6_Template","i_r9","tmp_8_0","profile_r8","OrderNewComponent_Conditional_0_ng_container_27_tr_1_Template","OrderNewComponent_Conditional_0_Template_form_ngSubmit_0_listener","onSubmit","OrderNewComponent_Conditional_0_div_5_Template","OrderNewComponent_Conditional_0_Conditional_6_Template","OrderNewComponent_Conditional_0_Conditional_7_Template","OrderNewComponent_Conditional_0_ng_container_27_Template","OrderNewComponent_Conditional_0_div_28_Template","OrderNewComponent_Conditional_0_div_29_Template","OrderNewComponent_Conditional_0_div_34_Template","OrderNewComponent_Conditional_0_div_45_Template","OrderNewComponent_Conditional_0_div_46_Template","OrderNewComponent_Conditional_0_div_47_Template","OrderNewComponent_Conditional_0_div_48_Template","hasSpecials","submitted","tmp_7_0","hasError","formControls","valid","http","fb","orderService","paramMap","params","NaN","loadOrderData","getOrderData","profile","shipToValidators","required","group","dateAfterTomorrowValidator","dateWithinThreeMonthsValidator","dateNotOnSundayValidator","customerPo","array","createProfileGroup","atLeastOneQuantityValidator","markForCheck","at","price","index","profileDid","min","placeOrder","orderConfirmation","error","errorCode","errorMessage","markAllAsTouched","dataToBeSubmitted","isQuantityInvalid","invalid","control","dateValue","dateAfterTomorrow","formArray","hasAtLeastOneQuantity","atLeastOneQuantity","threeMonthsFromNow","setMonth","setHours","dateWithinThreeMonths","getDay","dateNotOnSunday","HttpClient","FormBuilder","OrderFormService","OrderNewComponent_Template","OrderNewComponent_Conditional_0_Template","i6","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","NumberValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","FormGroupName","FormArrayName","Observable","switchMap","company_r1","salesperson_r2","OrderLinksComponent_tr_32_Template_a_click_7_listener","customer_r4","ctx_r4","copyLink","OrderLinksComponent_tr_32_Template_a_keyup_7_listener","snackbarService","orderLinksService","customers","filteredCustomers","form","company","salesPerson","searchText","companies$","getCompanies","companies","defaultCompany","find","setValue","valueChanges","getSalesPersons","salesreps","localeCompare","salesPersons$","observer","complete","salesrep","getCustomers","customer","toLowerCase","generateLink","baseUrl","href","replace","link","navigator","clipboard","writeText","then","catch","err","OrderLinksService","OrderLinksComponent_Template","OrderLinksComponent_option_10_Template","OrderLinksComponent_option_16_Template","OrderLinksComponent_tr_32_Template","tmp_1_0","HttpErrorResponse","catchError","throwError","HttpLoggingInterceptor","intercept","request","authToken","authReq","clone","setHeaders","handle","handleServerSideError","message","ɵɵinject","factory","ɵfac","HttpParams","set","hasArrived","patch","deliveryStopId","formData","FormData","append","post","reportProgress","observe","providedIn","GlobalErrorHandlerService","handleError","onLine","ErrorEvent","JSON","stringify","toString","response","content","matSnackBar","duration","verticalPosition","horizontalPos","action","style","snackBarRef","open","horizontalPosition","panelClass","onAction","dismiss","MatSnackBar","production","apiKey","ModalModule","MatSnackBarModule","MatMenuModule","MatListModule","MatIconModule","MatToolbarModule","MatSidenavModule","MatSlideToggleModule","FormsModule","provideAnimations","BrowserModule","bootstrapApplication","ErrorHandler","importProvidersFrom","HTTP_INTERCEPTORS","provideHttpClient","providers","provide","useClass","multi"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}