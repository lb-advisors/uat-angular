{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/driver-route/driver-route.component.ts","./src/app/components/driver-route/driver-route.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/image-thumbnail/image-thumbnail.component.ts","./src/app/components/image-thumbnail/image-thumbnail.component.html","./src/app/components/inventory/inventory.component.ts","./src/app/components/inventory/inventory.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/logo/logo.component.ts","./src/app/components/logo/logo.component.html","./src/app/components/logout/logout.component.ts","./src/app/components/logout/logout.component.html","./src/app/components/order-confirmation/order-confirmation.component.ts","./src/app/components/order-confirmation/order-confirmation.component.html","./src/app/components/order-exists/order-exists.component.ts","./src/app/components/order-exists/order-exists.component.html","./src/app/components/order-form/order-form.component.ts","./src/app/components/order-form/order-form.component.html","./src/app/components/order-links/order-links.component.ts","./src/app/components/order-links/order-links.component.html","./src/app/components/order-new/order-new.component.ts","./src/app/components/order-new/order-new.component.html","./src/app/core/interceptors/http-logging.interceptor.ts","./src/app/services/driver-route.service.ts","./src/app/services/global-error-handler.service.ts","./src/app/services/inventory.service.ts","./src/app/services/order-form.service.ts","./src/app/services/order-links.service.ts","./src/app/services/snackbar.service.ts","./src/environments/environment.development.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DriverRouteComponent } from './components/driver-route/driver-route.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { OrderLinksComponent } from './components/order-links/order-links.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { LogoutComponent } from './components/logout/logout.component';\nimport { InventoryComponent } from './components/inventory/inventory.component';\nimport { OrderFormComponent } from './components/order-form/order-form.component';\nimport { OrderConfirmationComponent } from './components/order-confirmation/order-confirmation.component';\nimport { OrderExistsComponent } from './components/order-exists/order-exists.component';\nimport { OrderNewComponent } from './components/order-new/order-new.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'order-links',\n    pathMatch: 'full',\n  },\n  {\n    path: 'home',\n    component: HomeComponent,\n    title: 'Home',\n  },\n  {\n    path: 'driver',\n    component: DriverRouteComponent,\n    title: 'Driver Route',\n  },\n  {\n    path: 'order-links',\n    component: OrderLinksComponent,\n    title: 'Order Links',\n  },\n  {\n    path: 'login',\n    component: LoginComponent,\n    title: 'Login',\n  },\n  {\n    path: 'logout',\n    component: LogoutComponent,\n    title: 'Logout',\n  },\n  {\n    path: 'inventory',\n    component: InventoryComponent,\n    title: 'Inventory',\n  },\n  {\n    path: 'customer/:id/order-form',\n    component: OrderFormComponent,\n    title: 'Order Form',\n  },\n  {\n    path: 'customer/:id/order-confirmation',\n    component: OrderConfirmationComponent,\n    title: 'Order Confirmation',\n  },\n  {\n    path: 'customer/:id/order-exists',\n    component: OrderExistsComponent,\n    title: 'Order Exists',\n  },\n  {\n    path: 'test',\n    component: OrderNewComponent,\n    title: 'Order Exists',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { isDevMode } from '@angular/core';\nimport { MatIcon } from '@angular/material/icon';\nimport { RouterLink, RouterLinkActive, RouterOutlet } from '@angular/router';\nimport { MatToolbar } from '@angular/material/toolbar';\nimport { environment } from 'src/environments/environment';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  standalone: true,\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  imports: [CommonModule, MatToolbar, RouterLink, RouterLinkActive, MatIcon, RouterOutlet],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent {\n  isDevMode: boolean = isDevMode();\n  apiUrl = environment.apiUrl;\n  showWarning = false;\n\n  constructor() {\n    // check that UAT is not using the prod backend\n    if (this.isDevMode && this.apiUrl.includes('prod')) {\n      this.showWarning = true;\n      alert('WARNING: Angular is in Dev mode but connected to production !!!');\n    }\n  }\n}\n","<mat-toolbar color=\"primary\" class=\"header\" [ngClass]=\"{'warning': showWarning}\">\n    <div class=\"nav-links-center\">\n        <a mat-button routerLink=\"/inventory\" routerLinkActive=\"active-link\">\n            <mat-icon>inventory</mat-icon>\n            Inventory\n        </a>\n        <a mat-button routerLink=\"/order-links\" routerLinkActive=\"active-link\">\n            <mat-icon>description</mat-icon> <!-- Change the icon to match Order Form -->\n            Order\n        </a>\n        <a mat-button routerLink=\"/driver\" routerLinkActive=\"active-link\">\n            <mat-icon>local_shipping</mat-icon> <!-- Truck profile view icon facing the other direction -->\n            Routes\n        </a>\n\n\n    </div>\n\n    <a routerLink=\"/home\" class=\"logo\">\n        <img src=\"assets/gs.png\" alt=\"GS Logo\" class=\"gs-logo\">\n    </a>\n\n</mat-toolbar>\n\n<div class=\"underline\"></div> <!-- Thinner black line underlining the nav bar -->\n\n<main>\n    <router-outlet></router-outlet>\n</main>\n\n<!-- Footer with Navigation and Social Icons-->\n<footer class=\"mat-drawer-container\">\n    <div class=\"container\">\n        <div class=\"text-align-center\">\n            © 2024 - Pacific Fresh Fish Company\n            @if (isDevMode) {<div class=\"dev-mode\">UAT ENVIRONMENT</div>\n            <div class=\"dev-mode\">{{apiUrl}}</div>}\n        </div>\n    </div>\n</footer>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, SecurityContext } from '@angular/core';\nimport { DriverRouteService } from '../../services/driver-route.service';\nimport { Observable } from 'rxjs';\nimport { DeliveryStop } from 'src/app/models/delivery-stop.model';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { map } from 'rxjs/operators';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { HttpEventType } from '@angular/common/http';\nimport { ImageThumbnailComponent } from '../image-thumbnail/image-thumbnail.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { CommonModule } from '@angular/common';\n\ninterface Driver {\n  name: string;\n}\n\n@Component({\n  standalone: true,\n  selector: 'app-driver-route',\n  templateUrl: './driver-route.component.html',\n  styleUrls: ['./driver-route.component.css'],\n  imports: [CommonModule, MatTableModule, ImageThumbnailComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DriverRouteComponent implements OnInit {\n  readonly maxFileSize = 4 * 1024 * 1024; // 4 MB\n\n  driverNames$!: Observable<Driver[]>;\n  deliveryRoute$: Observable<DeliveryStop[]> | undefined;\n  today: string;\n  selectedFile: File | null = null;\n\n  displayedColumns: string[] = ['deliveryAddress1', 'address', 'customerPhone', 'actualArrivalTime'];\n\n  constructor(\n    private driverRouteService: DriverRouteService,\n    private snackBarService: SnackbarService,\n    private sanitizer: DomSanitizer,\n    private cdr: ChangeDetectorRef,\n  ) {\n    this.today = this.formatDate(new Date());\n  }\n\n  ngOnInit(): void {\n    this.driverNames$ = this.driverRouteService.getDrivers().pipe(\n      map((data) => {\n        if (data && data.length > 0) {\n          this.refreshDeliverRoute(data[0].name, this.today);\n        }\n        return data.sort((a, b) => a.name.localeCompare(b.name)); // Sort drivers by name in ascending order\n      }),\n    );\n  }\n\n  formatDate(date: Date): string {\n    const month = ('0' + (date.getMonth() + 1)).slice(-2);\n    const day = ('0' + date.getDate()).slice(-2);\n    const year = date.getFullYear();\n    return `${month}/${day}/${year}`;\n  }\n\n  refreshDeliverRoute(driverName: string, deliveryDate: string): void {\n    const formattedDate = new Date(deliveryDate).toISOString().split('T')[0]; // Ensure date is formatted as YYYY-MM-DD\n    this.deliveryRoute$ = this.driverRouteService\n      .getDeliveryRoute(driverName, formattedDate)\n      .pipe(map((deliveryStops) => this.calculateTimeDifferences(deliveryStops)));\n  }\n\n  hasArrived(deliveryRoute: DeliveryStop): void {\n    this.driverRouteService.hasArrived(deliveryRoute.id.toString()).subscribe(\n      () => {\n        console.log('Delivery marked as arrived');\n      },\n      (error) => {\n        console.error('Error marking delivery as arrived', error);\n      },\n    );\n  }\n\n  onFileSelected(deliveryRoute: DeliveryStop, event: Event) {\n    const input = event.target as HTMLInputElement;\n    if (input.files && input.files.length > 0) {\n      const file = input.files[0];\n      if (file && file.type.startsWith('image/')) {\n        if (file.size <= this.maxFileSize) {\n          this.selectedFile = file;\n          this.uploadFile(deliveryRoute, file);\n        } else {\n          this.snackBarService.showSnackBar('File size exceeds 4 MB.');\n        }\n      } else {\n        this.snackBarService.showSnackBar('Please select an image file');\n        this.selectedFile = null;\n      }\n    }\n  }\n\n  uploadFile(deliveryRoute: DeliveryStop, file: File) {\n    this.driverRouteService.uploadPhoto(deliveryRoute.id, file).subscribe({\n      next: (event) => {\n        switch (event.type) {\n          case HttpEventType.Response: {\n            const updatedDeliveryStop = event.body as DeliveryStop;\n            Object.assign(deliveryRoute, updatedDeliveryStop);\n            this.cdr.detectChanges();\n          }\n        }\n      },\n    });\n  }\n\n  getGoogleMapsUrl(address2: string, address3: string): SafeUrl {\n    const url = `https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(address2 + ' ' + address3)}`;\n\n    const sanitizedUrl = this.sanitizer.sanitize(SecurityContext.URL, url);\n    if (sanitizedUrl) {\n      return this.sanitizer.bypassSecurityTrustUrl(sanitizedUrl);\n    } else {\n      return '';\n    }\n  }\n\n  private calculateTimeDifferences(deliveryStops: DeliveryStop[]): DeliveryStop[] {\n    for (let i = deliveryStops.length - 1; i > 0; i--) {\n      const currentStop = deliveryStops[i];\n      const previousStop = deliveryStops[i - 1];\n\n      const currentTime = new Date(currentStop.plannedArrivalTime).getTime();\n      const previousTime = new Date(previousStop.plannedArrivalTime).getTime();\n\n      const timeDifferenceInMinutes = Math.round((currentTime - previousTime) / 60000);\n      currentStop.timeDifference = timeDifferenceInMinutes;\n    }\n\n    if (deliveryStops.length > 0) {\n      deliveryStops[0].timeDifference = undefined; // First row will have no time difference\n    }\n    return deliveryStops;\n  }\n}\n","<div class=\"container\">\n  <div class=\"image-container\">\n    <img src=\"assets/logo.png\" alt=\"Company Logo\">\n  </div>\n\n  <h2 class=\"driver-routes-title\">Driver Routes</h2>\n\n  <div class=\"filters\">\n    <div class=\"driver-filter\">\n      <label for=\"driver-name\">Driver Name:</label>\n      <select id=\"driver-name\" #driverName (change)=\"refreshDeliverRoute(driverName.value, deliveryDate2.value)\">\n        <option *ngFor=\"let driverNames of (driverNames$ | async); let i = index\" [value]=\"driverNames.name\" [selected]=\"i === 0\">{{driverNames.name}}</option>\n      </select>\n    </div>\n\n    <div class=\"delivery-date-filter\">\n      <label for=\"delivery-date\">Delivery Date:</label>\n      <input type=\"text\" id=\"delivery-date\" #deliveryDate2 [value]=\"today\" readonly class=\"delivery-date-input\">\n    </div>\n  </div>\n\n  <table mat-table *ngIf=\"deliveryRoute$ | async as dataSource\" [dataSource]=\"dataSource\" class=\"mat-elevation-z8 driver-routes-grid\" matSort>\n    <!-- Customer Column -->\n    <ng-container matColumnDef=\"deliveryAddress1\">\n      <th mat-header-cell *matHeaderCellDef class=\"no-bottom-border\">Customer</th>\n      <td mat-cell *matCellDef=\"let element\" class=\"no-bottom-border\">\n        {{element.deliveryAddress1}}\n        <div *ngIf=\"element !== dataSource[dataSource.length - 1]\" class=\"arrow-container\">\n          <i class=\"fas fa-arrow-down\"></i>\n          <span class=\"time-difference-arrow\">+{{ dataSource[dataSource.indexOf(element) + 1].timeDifference + ' m' }}</span>\n        </div>\n      </td>\n    </ng-container>\n\n    <!-- Address Column (Concatenation of Delivery Address 2 and 3) -->\n    <ng-container matColumnDef=\"address\">\n      <th mat-header-cell *matHeaderCellDef>Address</th>\n      <td mat-cell *matCellDef=\"let element\" class=\"address-column\">\n        <a [href]=\"getGoogleMapsUrl(element.deliveryAddress2, element.deliveryAddress3)\" target=\"_blank\">\n          {{element.deliveryAddress2}} {{element.deliveryAddress3}}\n        </a>\n      </td>\n    </ng-container>\n\n    <!-- Customer Phone Column -->\n    <ng-container matColumnDef=\"customerPhone\">\n      <th mat-header-cell *matHeaderCellDef class=\"wrap\">Customer Phone</th>\n      <td mat-cell *matCellDef=\"let element\" class=\"customerPhone\"> {{element.customerPhone}} </td>\n    </ng-container>\n\n    <!-- Actual Arrival Time Column -->\n    <ng-container matColumnDef=\"actualArrivalTime\">\n      <th mat-header-cell *matHeaderCellDef>Arrival</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <div *ngIf=\"!element.actualArrivalTime || !element.fileUrl; else alreadyArrivedBlock\" class=\"custom-file-input\">\n          <input type=\"file\" id=\"file\" #fileInput (change)=\"onFileSelected(element, $event)\" accept=\"image/*\" required hidden>\n          <button type=\"button\" class=\"button\" (click)=\"fileInput.click()\">Arrived</button>\n        </div>\n        <ng-template #alreadyArrivedBlock>\n          <div>\n            <app-image-thumbnail [imageUrl]=\"element.fileUrl\" [title]=\"element.deliveryAddress2 + ' ' + element.deliveryAddress3 + ' (' + (element.actualArrivalTime | date: 'medium') + ')'\"></app-image-thumbnail>\n          </div>\n        </ng-template>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" [ngClass]=\"{'arrived-row': row.actualArrivalTime}\"></tr>\n  </table>\n</div>\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\ninterface Employee {\n  name: string;\n  status: 'sick' | 'vacation' | 'onsite';\n}\n\ninterface Item {\n  description: string;\n  status: 'low' | 'none';\n  ordered: boolean;\n}\n\n@Component({\n  standalone: true,\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n  imports: [CommonModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HomeComponent implements OnInit {\n  today: Date = new Date();\n  employees: Employee[] = [\n    { name: 'Miguel Rodriguez', status: 'onsite' },\n    { name: 'Maria Lopez', status: 'sick' },\n    { name: 'Michael Johnson', status: 'vacation' },\n    { name: 'Arev Sarkisian', status: 'onsite' },\n    { name: 'Narek Petrosian', status: 'onsite' },\n    { name: 'Lilit Avetisyan', status: 'onsite' },\n    { name: 'Anahit Hovhannisyan', status: 'onsite' },\n    { name: 'David Martirosyan', status: 'onsite' },\n    { name: 'Armen Harutyunyan', status: 'sick' },\n    { name: 'Karen Avanesyan', status: 'vacation' },\n  ];\n\n  items: Item[] = [\n    { description: 'Marinated Anchovies Fresh 2.2#', status: 'none', ordered: true },\n    { description: 'Octopus Spanish 6-8 Whole Raw Frozen', status: 'none', ordered: true },\n    { description: 'Clam Whole Cooked Frozen', status: 'none', ordered: true },\n    { description: 'PRODUCE KAIWARE (RADISH-SPROUTS)', status: 'none', ordered: true },\n    { description: 'PRODUCE OHBA (PERILLA-LEAVES)', status: 'none', ordered: true },\n    { description: 'Cold-Smoked Salmon Fillet Sliced With-Skin Deluxe *NOIR*', status: 'none', ordered: false },\n    { description: 'ALBACORE SUSHI LOIN FROZEN', status: 'low', ordered: false },\n    { description: 'LOBSTER MEAT CK (CLAW / KNUCKLE) FROZEN', status: 'low', ordered: false },\n    { description: 'OYSTER FAT BASTARD LIVE', status: 'low', ordered: false },\n    { description: 'Salmon Atlantic Fillet Fresh 2-3 E-Trim Skin-Off 10lb', status: 'low', ordered: false },\n  ];\n\n  constructor(private router: Router) {}\n\n  ngOnInit(): void {\n    this.sortEmployees();\n    this.sortItems();\n  }\n\n  sortEmployees(): void {\n    this.employees.sort((a, b) => {\n      const statusOrder = { sick: 0, vacation: 1, onsite: 2 };\n      return statusOrder[a.status] - statusOrder[b.status];\n    });\n  }\n\n  sortItems(): void {\n    this.items.sort((a, b) => {\n      const statusOrder = { none: 0, low: 1 };\n      return statusOrder[a.status] - statusOrder[b.status];\n    });\n  }\n\n  getStatusIcon(status: string): string {\n    switch (status) {\n      case 'sick':\n      case 'vacation':\n      case 'onsite':\n      case 'low':\n      case 'none':\n        return 'circle';\n      default:\n        return '';\n    }\n  }\n\n  getStatusColor(status: string): string {\n    switch (status) {\n      case 'sick':\n        return 'red';\n      case 'vacation':\n      case 'low':\n        return 'orange';\n      case 'onsite':\n      case 'ordered':\n        return 'green';\n      case 'none':\n        return 'red';\n      default:\n        return '';\n    }\n  }\n\n  navigateTo(page: string): void {\n    this.router.navigate([`/${page}`]);\n  }\n}\n","<div class=\"container\">\n    <div class=\"header-container\">\n        <h1 class=\"date\">{{ today | date:'fullDate' }}</h1>\n    </div>\n\n    <div class=\"kpi-container\">\n        <div class=\"kpi\">\n            <h2>Online Orders</h2>\n            <p>42</p>\n        </div>\n        <div class=\"kpi\">\n            <h2>Deliveries</h2>\n            <p>12/20</p>\n        </div>\n        <div class=\"kpi\">\n            <h2>Deliveries Ahead of Schedule</h2>\n            <p>67%</p>\n        </div>\n    </div>\n\n    <div class=\"grid-container\">\n        <div class=\"grid\">\n            <h2>Items</h2>\n            <table class=\"item-grid\">\n                <thead>\n                    <tr>\n                        <th>Description</th>\n                        <th>Status</th>\n                        <th>Ordered</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let item of items\">\n                        <td>{{ item.description }}</td>\n                        <td class=\"status-cell\">\n                            <mat-icon class=\"status-icon\" [ngStyle]=\"{'color': getStatusColor(item.status)}\">{{ getStatusIcon(item.status) }}</mat-icon>\n                            {{ item.status | titlecase }}\n                        </td>\n                        <td class=\"ordered-cell\">\n                            <ng-container *ngIf=\"item.ordered\">\n                                <mat-icon class=\"status-icon\" [ngStyle]=\"{'color': getStatusColor('ordered')}\">circle</mat-icon>\n                                Ordered\n                            </ng-container>\n                            <ng-container *ngIf=\"!item.ordered\">\n                                <!-- Empty cell content for unordered items -->\n                                &nbsp;\n                            </ng-container>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n\n        <div class=\"grid\">\n            <h2>Employees</h2>\n            <table class=\"employee-grid\">\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Status</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let employee of employees\">\n                        <td>{{ employee.name }}</td>\n                        <td class=\"status-cell\">\n                            <mat-icon class=\"status-icon\" [ngStyle]=\"{'color': getStatusColor(employee.status)}\">{{ getStatusIcon(employee.status) }}</mat-icon>\n                            {{ employee.status | titlecase }}\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n","import { ChangeDetectionStrategy, Component, Input, TemplateRef } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\n\n@Component({\n  standalone: true,\n  selector: 'app-image-thumbnail',\n  templateUrl: './image-thumbnail.component.html',\n  styleUrl: './image-thumbnail.component.css',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ImageThumbnailComponent {\n  @Input() imageUrl: string = '';\n  @Input() title: string | null = ' ';\n\n  modalRef!: BsModalRef;\n\n  constructor(private modalService: BsModalService) {}\n\n  openModal(template: string | TemplateRef<unknown>) {\n    this.modalRef = this.modalService.show(template, Object.assign({}, { class: 'modal-lg' }));\n  }\n}\n","<!-- eslint-disable @angular-eslint/template/click-events-have-key-events -->\n<!-- eslint-disable @angular-eslint/template/interactive-supports-focus -->\n<div (click)=\"openModal(imageModal)\">\n    <img [src]=\"imageUrl\" alt=\"Image Thumbnail\" title=\"Click to enlarge\" class=\"thumbnail\" (keyup)=\"modalRef.hide()\">\n</div>\n\n<ng-template #imageModal>\n    <div class=\" modal-header\">\n        <h4 class=\"modal-title\">{{title}}</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body text-center\">\n        <img [src]=\"imageUrl\" alt=\"Full Image\" class=\"full-image\" (click)=\"modalRef.hide()\" (keyup)=\"modalRef.hide()\">\n    </div>\n</ng-template>","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { InventoryService } from '../../services/inventory.service';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { InventoryItem } from 'src/app/models/inventoty-item.model';\nimport { BehaviorSubject, Subject, Subscription } from 'rxjs';\nimport { InfiniteScrollDirective } from 'ngx-infinite-scroll';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  standalone: true,\n  selector: 'app-inventory',\n  templateUrl: './inventory.component.html',\n  styleUrls: ['./inventory.component.css'],\n  imports: [CommonModule, InfiniteScrollDirective],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class InventoryComponent implements OnInit, OnDestroy {\n  page = 0;\n  size = 50;\n  searchTerm = '';\n  private searchSubject: Subject<string> = new Subject<string>();\n  private searchSubscription!: Subscription;\n\n  private inventoryItemsSubject = new BehaviorSubject<InventoryItem[]>([]);\n  inventoryItems$ = this.inventoryItemsSubject.asObservable();\n\n  constructor(private inventoryService: InventoryService) {}\n\n  ngOnInit(): void {\n    this.loadData();\n\n    this.searchSubscription = this.searchSubject\n      .pipe(\n        distinctUntilChanged(this.trimComparator), // Only emit if value is different from the last value\n        debounceTime(200), // Wait 200ms after the last event before emitting last event\n      )\n      .subscribe((searchTerm) => {\n        console.log(searchTerm + '##');\n        this.searchTerm = searchTerm;\n        this.inventoryItemsSubject.next([]);\n        this.loadData();\n      });\n  }\n\n  loadData(): void {\n    console.log('loadData');\n    this.inventoryService.getInventoryItems(this.page, this.size, this.searchTerm).subscribe({\n      next: (inventoryItems: InventoryItem[]) => {\n        const currentData = this.inventoryItemsSubject.value;\n        this.inventoryItemsSubject.next([...currentData, ...inventoryItems]);\n      },\n    });\n  }\n\n  onScroll(): void {\n    this.page++;\n    this.loadData();\n  }\n\n  onSearchChange(event: Event) {\n    const searchTerm = (event.target as HTMLInputElement).value.replace('$', ''); // $ is not in the database\n    if (searchTerm.trim().length > 1) {\n      this.page = 0; // Reset page when searching\n      this.searchSubject.next(searchTerm);\n    }\n  }\n\n  private trimComparator(prev: string, curr: string): boolean {\n    return prev.trim() === curr.trim();\n  }\n\n  ngOnDestroy(): void {\n    if (this.searchSubscription) {\n      this.searchSubscription.unsubscribe();\n    }\n  }\n}\n","<div class=\"content\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"50\" (scrolled)=\"onScroll()\">\n\n    <div class=\"container\">\n        <div class=\"image-container\">\n            <img src=\"assets/logo.png\" alt=\"Company Logo\">\n        </div>\n        <h2 class=\"inventory-title\">Inventory</h2>\n        <div class=\"filters\">\n            <input type=\"text\" placeholder=\"Search Inventory\" (input)=\"onSearchChange($event)\">\n        </div>\n        <table class=\"inventory-grid\">\n            <thead>\n                <tr>\n                    <th class=\"shrinkable-header\">Item<br>ID</th>\n                    <th class=\"shrinkable-header product-header\">Product</th>\n                    <th class=\"shrinkable-header\">Unit</th>\n                    <th class=\"shrinkable-header\">Pck<br>Size</th>\n                    <th class=\"shrinkable-header\">Price</th>\n                    <th class=\"shrinkable-header\">W<br>O<br>H</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let item of inventoryItems$ | async\">\n                    <td>{{ item.id }}</td>\n                    <td class=\"wrap product-column\">{{ item.compDescription }}</td>\n                    <td>{{ item.unitType }}</td>\n                    <td>{{ item.packSize }}</td>\n                    <td>{{ item.activePrice | currency:'USD':'symbol':'1.2-2' }}</td>\n                    <td>{{ item.woh }}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n})\nexport class LoginComponent {}\n","<br /><br /><br />\n\n<h1 style=\"padding-left: 200px;\">Login page</h1>\n\n<br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />","import { CommonModule } from '@angular/common';\nimport { Component, Input, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-logo',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './logo.component.html',\n  styleUrl: './logo.component.css',\n})\nexport class LogoComponent implements OnChanges {\n  @Input() commpanyId!: number; // PFF\n\n  imageSrc = 'assets/fogriver.png';\n  imageBackgroundColor = '#000000';\n\n  ngOnChanges(): void {\n    if (this.commpanyId === 14) {\n      this.imageSrc = 'assets/fogriver.png';\n      this.imageBackgroundColor = '#000000'; // Black background\n    } else {\n      this.imageSrc = 'assets/logo.png';\n      this.imageBackgroundColor = 'rgba(0, 16, 46, 1)'; // Dark blue background\n    }\n  }\n}\n","@if (commpanyId) {\n<div class=\"image-container\" [ngStyle]=\"{'background-color': imageBackgroundColor}\">\n    <img [src]=\"imageSrc\" alt=\"Company Logo\">\n</div>\n}","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n    selector: 'app-logout',\n    templateUrl: './logout.component.html',\n    styleUrls: ['./logout.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone: true,\n})\nexport class LogoutComponent {}\n","<br /><br /><br />\n\n<h1 style=\"padding-left: 200px;\">Logout page</h1>\n\n<br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Location, CommonModule } from '@angular/common';\nimport { LogoComponent } from '../logo/logo.component';\nimport { OrderForm } from 'src/app/models/order-form.model';\n\n@Component({\n  standalone: true,\n  selector: 'app-order-confirmation',\n  templateUrl: './order-confirmation.component.html',\n  styleUrls: ['./order-confirmation.component.css'],\n  imports: [CommonModule, LogoComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationComponent implements OnInit {\n  orderData!: OrderForm;\n\n  constructor(private router: Router, private location: Location) {}\n\n  ngOnInit(): void {\n    this.orderData = history.state.data; // Access the passed data here\n  }\n\n  goBack(): void {\n    this.router.navigate([`/customer/${this.orderData.customerId}/order-form`]);\n  }\n}\n","<div class=\"container\">\n  <div class=\"image-container\">\n    <app-logo [commpanyId]=\"orderData.companyId\"></app-logo>\n  </div>\n  <h2>Hello {{ orderData.customerName }},</h2>\n  <p>Thank you for your order. Here are the details of your order:</p>\n  <br>\n  <table class=\"order-grid\" id=\"order-grid\">\n    <thead>\n      <tr>\n        <th>Product Description</th>\n        <th>Unit Type</th>\n        <th>Pack Size</th>\n        <th>Price</th>\n        <th>Quantity</th>\n        <th>Delivery Date</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let product of orderData.profiles\">\n        <td>{{ product.profileDescription }}</td>\n        <td>{{ product.unitTypePd }}</td>\n        <td>{{ product.packSizePd }}</td>\n        <td class=\"price\">{{ product.salesPrice | number:'1.2-2' }}</td>\n        <td>{{ product.quantity }}</td>\n        <td>{{ orderData.deliveryDate | date: 'MM/dd/yyyy'}}</td>\n      </tr>\n    </tbody>\n  </table>\n  <p><strong>Total Price:</strong> {{ orderData.totalPrice | currency:'USD':true }}</p>\n  <p>Thank you,<br>Your Sales Team</p>\n  <button class=\"button\" (click)=\"goBack()\">Back</button>\n</div>","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { LogoComponent } from '../logo/logo.component';\nimport { OrderForm } from 'src/app/models/order-form.model';\n\n@Component({\n  standalone: true,\n  selector: 'app-order-exists',\n  templateUrl: './order-exists.component.html',\n  styleUrls: ['./order-exists.component.css'],\n  imports: [CommonModule, LogoComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderExistsComponent implements OnInit {\n  orderData!: OrderForm;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.orderData = history.state.data; // Access the passed data here\n  }\n\n  goBack(): void {\n    window.history.back();\n  }\n}\n","<div class=\"container\">\n  <app-logo [commpanyId]=\"orderData.companyId\"></app-logo>\n\n  <h2>Existing Order</h2>\n  <div class=\"error-message\" style=\"color: red;\">\n    We already have an order for you placed on this delivery date. If you would like it changed please contact your sales rep.\n  </div>\n  <br>\n  <table class=\"order-grid\" id=\"order-grid\">\n    <thead>\n      <tr>\n        <th>Customer Name</th>\n        <th>Sales Rep</th>\n        <th>Product Description</th>\n        <th>Unit Type</th>\n        <th>Pack Size</th>\n        <th>Price</th>\n        <th>Quantity</th>\n        <th>Delivery Date</th>\n        <th *ngIf=\"orderData.id\">Shipto Name</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let profile of orderData.profiles\">\n        <td>{{ orderData.customerName }}</td>\n        <td>{{ orderData.salesRepName }}</td>\n        <td>{{ profile.profileDescription }}</td>\n        <td>{{ profile.unitTypePd }}</td>\n        <td>{{ profile.packSizePd }}</td>\n        <td class=\"price\">{{ profile.salesPrice| currency:'USD':true }}</td>\n        <td>{{ profile.quantity }}</td>\n        <td>{{ orderData.deliveryDate | date: 'MM/dd/yyyy' }}</td>\n        <td *ngIf=\"orderData.id\">{{ orderData.shipToName }}</td>\n      </tr>\n    </tbody>\n  </table>\n  <div style=\"margin-top: 20px;\">\n    <div class=\"total\"><strong>Total:</strong>\n      <span id=\"total-amount\">{{ orderData.totalPrice| currency:'USD':true }}</span>\n    </div>\n  </div>\n  <button class=\"button\" (click)=\"goBack()\">Back</button>\n</div>","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { OrderFormService } from '../../services/order-form.service';\nimport { FormsModule, NgForm } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { Profile } from 'src/app/models/profile.model';\n\n@Component({\n  standalone: true,\n  selector: 'app-order-form',\n  templateUrl: './order-form.component.html',\n  styleUrls: ['./order-form.component.css'],\n  imports: [CommonModule, FormsModule],\n  //changeDetection: ChangeDetectionStrategy.OnPush,    // TODO: onPush\n})\nexport class OrderFormComponent implements OnInit {\n  orders: any[] = [];\n  orderData: any = {};\n  products: Profile[] = [];\n  specialsProducts: Profile[] = [];\n  deliveryDate: string = '';\n  customerPo: string = '';\n  customerId: string = '';\n  company: string = '';\n  imageSrc: string = 'assets/logo.png';\n  imageBackgroundColor: string = 'rgba(0, 16, 46, 1)';\n  shiptoNames: { id: string; name: string }[] = [];\n  selectedShiptoID: string = '';\n  isSubmitting: boolean = false; // Add this line\n\n  constructor(private orderFormService: OrderFormService, private route: ActivatedRoute, private router: Router) {}\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params) => {\n      this.customerId = params.get('id') || '';\n      if (this.customerId) {\n        this.fetchCustomerData();\n        this.fetchSpecialsData();\n      }\n    });\n\n    this.route.queryParamMap.subscribe((params) => {\n      this.company = params.get('company') || 'PFF';\n      this.imageSrc = params.get('image') || 'assets/logo.png'; // Retrieve the image URL from query params\n      this.updateImageAndBackground();\n    });\n  }\n\n  updateImageAndBackground(): void {\n    if (this.company === 'FOG-RIVER') {\n      this.imageSrc = 'assets/fogriver.png';\n      this.imageBackgroundColor = '#000000';\n    } else if (this.company === 'PFF') {\n      this.imageSrc = 'assets/logo.png';\n      this.imageBackgroundColor = 'rgba(0, 16, 46, 1)';\n    }\n  }\n\n  fetchCustomerData(): void {\n    if (this.isValidCustomerId(this.customerId)) {\n      this.orderFormService.fetchCustomerData(this.customerId).subscribe(\n        (data) => {\n          this.orderData = {\n            customerId: this.customerId,\n            customerName: data.customerName,\n            salesRepName: data.salesRepName,\n            salesRepPhone: data.salesRepPhone,\n            customerEmail: data.customerEmail,\n            deliveryDate: this.deliveryDate,\n            shipToId: this.selectedShiptoID,\n            shipToName: this.shiptoNames.find((shipto) => shipto.id === this.selectedShiptoID)?.name || '',\n          };\n\n          this.products =\n            data.profiles.map((profile: Profile) => ({\n              profileDid: profile.id, // Ensure the profile ID is mapped correctly\n              profileDescription: profile.profileDescription,\n              unitTypePd: profile.unitTypePd,\n              packSizePd: profile.packSizePd,\n              salesPrice: profile.salesPrice,\n              quantity: profile.quantity || 0,\n            })) || [];\n          this.orders = data.orders || [];\n          this.shiptoNames =\n            data.shipTos.map((shipto: any) => ({\n              id: shipto.id,\n              name: shipto.shipToName,\n            })) || [];\n          this.selectedShiptoID = this.shiptoNames.length > 0 ? this.shiptoNames[0].id : '';\n          this.updateTotal(); // Initialize the total\n        },\n        (error) => {\n          console.error('Error fetching customer data:', error);\n        },\n      );\n    } else {\n      console.error('Invalid customer ID:', this.customerId);\n    }\n  }\n\n  fetchSpecialsData(): void {\n    const specialsCustomerId = '1';\n    this.orderFormService.fetchCustomerData(specialsCustomerId).subscribe(\n      (data) => {\n        this.specialsProducts =\n          data.profiles.map((profile: Profile) => ({\n            profileDid: profile.id, // Ensure the profile ID is mapped correctly\n            profileDescription: profile.profileDescription,\n            unitTypePd: profile.unitTypePd,\n            packSizePd: profile.packSizePd,\n            salesPrice: profile.salesPrice,\n            quantity: profile.quantity || 0,\n          })) || [];\n        this.updateTotal(); // Initialize the total for specials\n      },\n      (error) => {\n        console.error('Error fetching specials data:', error);\n      },\n    );\n  }\n\n  goBack(): void {\n    window.history.back();\n  }\n\n  updateRowStyle(event: any): void {\n    const input = event.target;\n    input.value = input.value.replace(/[^0-9]/g, '').slice(0, 4);\n    const row = input.closest('tr');\n    const quantity = parseFloat(input.value) || 0;\n\n    if (quantity > 0) {\n      row.classList.add('bold-row');\n    } else {\n      row.classList.remove('bold-row');\n    }\n\n    const productIndex = row.getAttribute('data-index');\n    if (productIndex !== null) {\n      const isSpecial = row.getAttribute('data-special') === 'true';\n      if (isSpecial) {\n        this.specialsProducts[productIndex].quantity = quantity;\n        if (quantity > 0) {\n          row.classList.add('special-bold-row');\n        } else {\n          row.classList.remove('special-bold-row');\n        }\n      } else {\n        this.products[productIndex].quantity = quantity;\n      }\n    }\n\n    this.updateTotal();\n  }\n\n  checkEmptyInput(event: any): void {\n    const input = event.target;\n    if (input.value === '') {\n      input.value = '0';\n    }\n    this.updateRowStyle(event);\n  }\n\n  updateTotal(): void {\n    let total = 0;\n\n    // Calculate the total for normal products\n    this.products.forEach((product) => {\n      const quantity = product.quantity || 0;\n      const price = product.salesPrice || 0;\n      const packSize = product.packSizePd || 1;\n      total += quantity * price * packSize;\n    });\n\n    // Calculate the total for specials products\n    this.specialsProducts.forEach((product) => {\n      const quantity = product.quantity || 0;\n      const price = product.salesPrice || 0;\n      const packSize = product.packSizePd || 1;\n      total += quantity * price * packSize;\n    });\n\n    const totalAmountSpan = document.getElementById('total-amount') as HTMLSpanElement;\n    totalAmountSpan.textContent = total.toLocaleString('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    });\n\n    this.orderData.totalPrice = total.toFixed(2);\n  }\n\n  submitOrder(form: NgForm): void {\n    const errorMessage = this.validateForm();\n    if (errorMessage) {\n      this.displayErrorMessage(errorMessage);\n      return;\n    }\n\n    this.isSubmitting = true; // Lock the button\n    const orderProfiles = this.prepareOrderData();\n    const orderProfilesArray = orderProfiles.map((profile) => ({\n      profileDid: profile.profileDid,\n      quantity: profile.quantity,\n    }));\n\n    const orderData = {\n      customerId: this.customerId,\n      customerName: this.orderData.customerName,\n      deliveryDate: this.deliveryDate,\n      shipToId: this.selectedShiptoID || null,\n      totalPrice: this.orderData.totalPrice,\n      products: this.products.concat(this.specialsProducts),\n      orderProfiles: orderProfilesArray,\n      company: this.company,\n    };\n\n    this.orderFormService.placeOrder(this.customerId, orderData).subscribe({\n      next: (response) => {\n        if (response.status === 200) {\n          console.log('Order submitted successfully', response);\n          alert('Order submitted successfully');\n          this.router.navigate(['/customer', this.customerId, '/order-confirmation'], {\n            queryParams: {\n              orderData: JSON.stringify(orderData),\n              image: this.imageSrc,\n            },\n          });\n        }\n        this.isSubmitting = false; // Unlock the button\n      },\n      error: (error) => {\n        if (error.status === 409) {\n          console.log('Order already exists for this delivery date', error.error);\n          this.router.navigate(['/customer', this.customerId, 'order-exists'], {\n            queryParams: {\n              deliveryDate: this.deliveryDate,\n              orders: JSON.stringify(error.error),\n              company: this.company,\n              image: this.imageSrc,\n            },\n          });\n        } else {\n          this.displayErrorMessage('Failed to submit order. Please try again later.');\n        }\n        this.isSubmitting = false; // Unlock the button\n      },\n    });\n  }\n\n  restrictInput(event: any, maxLength: number): void {\n    const input = event.target;\n    if (input.value.length > maxLength) {\n      input.value = input.value.slice(0, maxLength);\n    }\n  }\n\n  private isValidCustomerId(customerId: string): boolean {\n    const customerIdNumber = Number(customerId);\n    return !isNaN(customerIdNumber) && customerId.trim() !== '';\n  }\n\n  private validateForm(): string | null {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n\n    if (!this.deliveryDate) {\n      return 'Please select a delivery date';\n    }\n\n    const deliveryDate = new Date(this.deliveryDate);\n    deliveryDate.setHours(0, 0, 0, 0);\n\n    const yesterday = new Date(today);\n    yesterday.setDate(today.getDate() - 1);\n\n    if (deliveryDate < today) {\n      return 'Please select a date which is not in the past.';\n    }\n\n    if (deliveryDate <= yesterday) {\n      return 'Please order at least one day in advance.';\n    }\n\n    const maxDeliveryDate = new Date(today);\n    maxDeliveryDate.setMonth(maxDeliveryDate.getMonth() + 3);\n\n    if (deliveryDate > maxDeliveryDate) {\n      return 'Please only submit orders delivered within the next 3 months.';\n    }\n\n    if (deliveryDate.getDay() === 6) {\n      return 'We are closed on Sundays.';\n    }\n\n    const hasQuantity = this.products.concat(this.specialsProducts).some((product) => product.quantity && product.quantity > 0);\n    if (!hasQuantity) {\n      return 'Please select a quantity which is not 0';\n    }\n\n    const totalPrice = this.orderFormService.calculateTotal(this.products.concat(this.specialsProducts));\n    if (totalPrice > 10000) {\n      return 'The total amount has to be less than $10,000.';\n    }\n\n    return null;\n  }\n\n  private displayErrorMessage(message: string): void {\n    const errorMessageDiv = document.querySelector('.error-message') as HTMLDivElement;\n    errorMessageDiv.textContent = message;\n  }\n\n  private prepareOrderData(): any[] {\n    return this.products\n      .concat(this.specialsProducts)\n      .filter((product) => product.quantity && product.quantity > 0)\n      .map((product) => ({\n        profileDid: product.id,\n        quantity: product.quantity,\n      }));\n  }\n}\n","<div class=\"container\">\n  <div class=\"image-container\" [ngStyle]=\"{'background-color': imageBackgroundColor}\">\n    <img [src]=\"imageSrc\" alt=\"Company Logo\">\n  </div>\n\n  <h2 class=\"page-title\">Order Form</h2>\n  <div class=\"customer-id-input hidden\">\n    <label for=\"customer-id\">Customer ID:</label>\n    <input id=\"customer-id\" type=\"text\" [(ngModel)]=\"customerId\" placeholder=\"Enter customer ID\" />\n    <button (click)=\"fetchCustomerData()\">Submit</button>\n  </div>\n\n  <div *ngIf=\"orderData.customerName && orderData.salesRepName\" class=\"customer-sales-info\">\n    <p>Customer: {{ orderData.customerName }}</p>\n    <div class=\"sales-rep-info\">\n      Sales Rep: {{ orderData.salesRepName }} <a [href]=\"'tel:' + orderData.salesRepPhone\">{{ orderData.salesRepPhone }}</a>\n    </div>\n  </div>\n\n  <div *ngIf=\"shiptoNames && shiptoNames.length > 0\" class=\"shipto-dropdown\">\n    <label for=\"shipto-select\">Ship To:</label>\n    <select id=\"shipto-select\" [(ngModel)]=\"selectedShiptoID\">\n      <option *ngFor=\"let shipto of shiptoNames\" [value]=\"shipto.id\">{{ shipto.name }}</option>\n    </select>\n  </div>\n\n  <!-- Specials Grid -->\n  <div *ngIf=\"specialsProducts && specialsProducts.length > 0\">\n    <h3 class=\"grid-title\">Specials</h3>\n    <table class=\"order-grid specials-grid\">\n      <thead>\n        <tr>\n          <th class=\"hidden-column\">Profile ID</th>\n          <th class=\"hidden-column\">Customer ID</th>\n          <th>Description</th>\n          <th>Quantity</th>\n          <th>Unit Type</th>\n          <th>Pack Size</th>\n          <th>Price</th>\n          <th class='totalCol'>Total</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let product of specialsProducts; let i = index\" [attr.data-special]=\"true\" [attr.data-index]=\"i\">\n          <td class=\"hidden-column\">{{ product.id }}</td>\n          <td class=\"hidden-column\">{{ orderData.customerId }}</td>\n          <td>{{ product.profileDescription }}</td>\n          <td>\n            <input type=\"text\" class=\"input_quantity\" inputmode=\"numeric\" pattern=\"[0-9]*\" name=\"quantity_special_{{ i }}\" maxlength=\"4\" [(ngModel)]=\"product.quantity\"\n              [attr.data-price]=\"product.salesPrice\" [attr.data-pack-size]=\"product.packSizePd\" (input)=\"updateRowStyle($event)\" (blur)=\"checkEmptyInput($event)\" required>\n            <input type=\"hidden\" name=\"description_special_{{ i }}\" [value]=\"product.profileDescription\" [(ngModel)]=\"product.profileDescription\">\n            <input type=\"hidden\" name=\"unit_type_special_{{ i }}\" [value]=\"product.unitTypePd\" [(ngModel)]=\"product.unitTypePd\">\n            <input type=\"hidden\" name=\"pack_size_special_{{ i }}\" [value]=\"product.packSizePd\" [(ngModel)]=\"product.packSizePd\">\n            <input type=\"hidden\" name=\"price_special_{{ i }}\" [value]=\"product.salesPrice | number:'1.2-2'\" [(ngModel)]=\"product.salesPrice\">\n            <input type=\"hidden\" name=\"profile_id_special_{{ i }}\" [value]=\"product.id\" [(ngModel)]=\"product.id\">\n          </td>\n          <td>{{ product.unitTypePd }}</td>\n          <td>{{ product.packSizePd }}</td>\n          <td>${{ product.salesPrice | number:'1.2-2' }}</td>\n          <td class=\"total-per-item\">${{ (product.quantity || 0) * product.packSizePd * product.salesPrice | number:'1.2-2' }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n\n  <!-- Normal Grid -->\n  <div *ngIf=\"orders && orders.length > 0\">\n    <h3 class=\"grid-title\">Products</h3>\n    <div class=\"error-message\" style=\"color: red;\">\n      We already have an order for you submitted today. Please contact your sales rep if you like to change this order.\n    </div>\n    <table class=\"order-grid\">\n      <thead>\n        <tr>\n          <th class=\"hidden-column\">Profile ID</th>\n          <th class=\"hidden-column\">Customer ID</th>\n          <th>Order ID</th>\n          <th>Customer Name</th>\n          <th>Sales Rep</th>\n          <th>Product Description</th>\n          <th>Unit Type</th>\n          <th>Pack Size</th>\n          <th>Price</th>\n          <th>Quantity</th>\n          <th>Total Price</th>\n          <th>Delivery Date</th>\n          <th>Customer Email</th>\n          <th>Sales Rep Phone</th>\n          <th>Order Timestamp</th>\n          <th>Customer PO</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let order of orders\">\n          <td class=\"hidden-column\">{{ order.profileDid }}</td>\n          <td class=\"hidden-column\">{{ order.customerId }}</td>\n          <td>{{ order.id }}</td>\n          <td>{{ order.customer_name }}</td>\n          <td>{{ order.sales_rep }}</td>\n          <td>{{ order.product_description }}</td>\n          <td>{{ order.unit_type }}</td>\n          <td>{{ order.pack_size }}</td>\n          <td>${{ order.salesPrice | number:'1.2-2' }}</td>\n          <td>{{ order.quantity }}</td>\n          <td>${{ order.total_price | number:'1.2-2' }}</td>\n          <td>{{ order.delivery_date }}</td>\n          <td>{{ order.customer_email }}</td>\n          <td><a [href]=\"'tel:' + order.sales_rep_phone\">{{ order.sales_rep_phone }}</a></td>\n          <td>{{ order.order_timestamp }}</td>\n          <td>{{ order.customer_po }}</td>\n        </tr>\n      </tbody>\n    </table>\n    <button (click)=\"goBack()\">Back</button>\n  </div>\n\n  <form *ngIf=\"orders && orders.length === 0\" #orderForm=\"ngForm\" (ngSubmit)=\"submitOrder(orderForm)\">\n    <h3 class=\"grid-title\">Products</h3>\n    <table class=\"order-grid\">\n      <thead>\n        <tr>\n          <th class=\"hidden-column\">Profile ID</th>\n          <th class=\"hidden-column\">Customer ID</th>\n          <th>Description</th>\n          <th>Quantity</th>\n          <th>Unit Type</th>\n          <th>Pack Size</th>\n          <th>Price</th>\n          <th class='totalCol'>Total</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let product of products; let i = index\" [attr.data-index]=\"i\">\n          <td class=\"hidden-column\">{{ product.id }}</td>\n          <td class=\"hidden-column\">{{ orderData.customerId }}</td>\n          <td>{{ product.profileDescription }}</td>\n          <td>\n            <input type=\"text\" class=\"input_quantity\" inputmode=\"numeric\" pattern=\"[0-9]*\" name=\"quantity_{{ i }}\" maxlength=\"4\" [(ngModel)]=\"product.quantity\"\n              [attr.data-price]=\"product.salesPrice\" [attr.data-pack-size]=\"product.packSizePd\" (input)=\"updateRowStyle($event)\" (blur)=\"checkEmptyInput($event)\" required>\n            <input type=\"hidden\" name=\"description_{{ i }}\" [value]=\"product.profileDescription\" [(ngModel)]=\"product.profileDescription\">\n            <input type=\"hidden\" name=\"unit_type_{{ i }}\" [value]=\"product.unitTypePd\" [(ngModel)]=\"product.unitTypePd\">\n            <input type=\"hidden\" name=\"pack_size_{{ i }}\" [value]=\"product.packSizePd\" [(ngModel)]=\"product.packSizePd\">\n            <input type=\"hidden\" name=\"price_{{ i }}\" [value]=\"product.salesPrice | number:'1.2-2'\" [(ngModel)]=\"product.salesPrice\">\n            <input type=\"hidden\" name=\"profile_id_{{ i }}\" [value]=\"product.id\" [(ngModel)]=\"product.id\">\n          </td>\n          <td>{{ product.unitTypePd }}</td>\n          <td>{{ product.packSizePd }}</td>\n          <td>${{ product.salesPrice | number:'1.2-2' }}</td>\n          <td class=\"total-per-item\">${{ (product.quantity || 0) * product.packSizePd * product.salesPrice | number:'1.2-2' }}</td>\n        </tr>\n      </tbody>\n    </table>\n    <div class=\"total\">Total: <span id=\"total-amount\">$0.00</span></div>\n    <input type=\"hidden\" name=\"total_price\" id=\"total_price\" [value]=\"orderData.totalPrice\" [(ngModel)]=\"orderData.totalPrice\">\n    <div class=\"delivery-date\">\n      <label for=\"delivery-date\">Delivery Date:</label>\n      <input type=\"date\" id=\"delivery-date\" class=\"calendar\" name=\"delivery_date\" [(ngModel)]=\"deliveryDate\" required>\n\n      <label for=\"customer-po\">&nbsp;&nbsp;Customer PO:</label>\n      <input type=\"text\" id=\"customer-po\" name=\"customer_po\" maxlength=\"150\" [(ngModel)]=\"customerPo\" (input)=\"restrictInput($event, 150)\">\n    </div>\n    <div class=\"error-message\" style=\"color: red;\">&nbsp;</div>\n    <button type=\"submit\" class=\"submit-btn\" [disabled]=\"isSubmitting\">Submit your order</button>\n\n    <input type=\"hidden\" name=\"nb_products\" [value]=\"products.length\" [(ngModel)]=\"products.length\">\n    <input type=\"hidden\" name=\"customer_name\" [value]=\"orderData.customerName\" [(ngModel)]=\"orderData.customerName\">\n    <input type=\"hidden\" name=\"sales_rep\" [value]=\"orderData.salesRepName\" [(ngModel)]=\"orderData.salesRepName\">\n    <input type=\"hidden\" name=\"customer_email\" [value]=\"orderData.customerEmail\" [(ngModel)]=\"orderData.customerEmail\">\n    <input type=\"hidden\" name=\"sales_rep_phone\" [value]=\"orderData.salesRepPhone\" [(ngModel)]=\"orderData.salesRepPhone\">\n    <input type=\"hidden\" name=\"customer_id\" [value]=\"orderData.customerId\" [(ngModel)]=\"orderData.customerId\">\n    <input type=\"hidden\" name=\"shipto_id\" [value]=\"selectedShiptoID\" [(ngModel)]=\"selectedShiptoID\">\n  </form>\n</div>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, switchMap, tap } from 'rxjs';\nimport { FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { Company } from 'src/app/models/company.model';\nimport { Customer } from 'src/app/models/customer.model';\nimport { SalesRep } from 'src/app/models/sales-rep.model';\nimport { OrderLinksService } from 'src/app/services/order-links.service';\nimport { CommonModule } from '@angular/common';\nimport { LogoComponent } from '../logo/logo.component';\n\n@Component({\n  standalone: true,\n  selector: 'app-order-links',\n  templateUrl: './order-links.component.html',\n  styleUrls: ['./order-links.component.css'],\n  imports: [CommonModule, ReactiveFormsModule, RouterModule, LogoComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderLinksComponent implements OnInit {\n  form!: FormGroup;\n\n  companies$!: Observable<Company[]>;\n  salesPersons$!: Observable<SalesRep[]>;\n\n  customers: Customer[] = [];\n  filteredCustomers: Customer[] = [];\n\n  constructor(\n    private http: HttpClient,\n    private fb: FormBuilder,\n    private cdr: ChangeDetectorRef,\n    private snackbarService: SnackbarService,\n    private orderLinksService: OrderLinksService,\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      company: [],\n      salesPerson: [],\n      searchText: '',\n    });\n\n    this.companies$ = this.orderLinksService.getCompanies().pipe(\n      tap((companies) => {\n        // Set default company to \"PFF\"\n        const defaultCompany = companies.find((company) => company.name === 'PFF');\n        if (defaultCompany) {\n          this.form.get('company')!.setValue(defaultCompany);\n        }\n      }),\n    );\n\n    // company change\n    this.form\n      .get('company')!\n      .valueChanges.pipe(\n        switchMap((company) => {\n          return this.orderLinksService.getSalesPersons(company.id).pipe(\n            tap((salesreps) => {\n              // Sort sales reps in ascending order\n              salesreps.sort((a, b) => a.name.localeCompare(b.name));\n              this.salesPersons$ = new Observable<SalesRep[]>((observer) => {\n                observer.next(salesreps);\n                observer.complete();\n              });\n              if (salesreps.length > 0) {\n                this.form.get('salesPerson')!.setValue(salesreps[0]);\n              }\n            }),\n          );\n        }),\n      )\n      .subscribe();\n\n    // salesPerson change\n    this.form\n      .get('salesPerson')!\n      .valueChanges.pipe(\n        switchMap((salesrep) => {\n          const company = this.form.get('company')!.value;\n          return this.orderLinksService.getCustomers(company.id, salesrep.name);\n        }),\n      )\n      .subscribe({\n        next: (customers) => {\n          this.customers = [...customers];\n          // Sort customers by name in ascending order\n          this.customers.sort((a, b) => a.name.localeCompare(b.name));\n          this.filteredCustomers = [...this.customers];\n          this.cdr.markForCheck();\n        },\n      });\n\n    // searchText change\n    this.form.get('searchText')!.valueChanges.subscribe((searchText: string) => {\n      this.filteredCustomers = this.customers.filter((customer) => customer.name.toLowerCase().includes(searchText.toLowerCase()));\n    });\n  }\n\n  generateLink(customerId: number): string {\n    // TODO: find a solution without hard-coding ordre-links\n    const baseUrl = window.location.href.replace('/order-links', '');\n    return `${baseUrl}/customer/${customerId}/order-form`;\n  }\n\n  copyLink(customerId: number): void {\n    const link = this.generateLink(customerId);\n    navigator.clipboard\n      .writeText(link)\n      .then(() => {\n        this.snackbarService.showSnackBar('Link copied to clipboard!');\n      })\n      .catch((err) => {\n        console.error('Failed to copy link: ', err);\n      });\n  }\n}\n","<form [formGroup]=\"form\">\n\n  <div class=\"container\">\n    <app-logo [commpanyId]=\"form.get('company')?.value?.id\"></app-logo>\n\n    <h2 class=\"underlined\">Customers</h2>\n\n    <div class=\"filters\">\n      <div class=\"filter-group\">\n        <label for=\"company-filter\" class=\"filter-label\">Company:</label>\n        <select id=\"company-filter\" formControlName=\"company\">\n          <option *ngFor=\"let company of companies$ | async\" [ngValue]=\"company\">{{ company.name }}</option>\n        </select>\n      </div>\n\n      <div class=\"filter-group\">\n        <label for=\"salesname-filter\" class=\"filter-label\">Sales Rep:</label>\n        <select id=\"salesname-filter\" formControlName=\"salesPerson\">\n          <option *ngFor=\"let salesperson of salesPersons$ | async\" [ngValue]=\"salesperson\">{{ salesperson.name }}</option>\n        </select>\n      </div>\n\n      <div class=\"filter-group\">\n        <label for=\"customer-search\" class=\"filter-label\">Customer:</label>\n        <input type=\"text\" id=\"customer-search\" placeholder=\"Search Customers\" formControlName=\"searchText\" />\n      </div>\n    </div>\n\n    <table class=\"order-grid\">\n      <thead>\n        <tr>\n          <th>Customer Name</th>\n          <th>Order Form</th>\n          <th>Copy Link</th>\n        </tr>\n      </thead>\n      <tbody>\n        @for (customer of filteredCustomers; track customer) {\n        <tr>\n          <td>{{ customer.name }}</td>\n          <td><a [routerLink]=\"['/customer', customer.id, 'order-form']\">Order Form</a></td>\n          <td><a href=\"javascript:void(0)\" (click)=\"copyLink(customer.id)\" (keyup)=\"copyLink(customer.id)\">Copy Link</a>\n          </td>\n        </tr>\n        }\n      </tbody>\n    </table>\n  </div>\n</form>","import { CommonModule } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormGroup, ReactiveFormsModule, ValidationErrors, Validators } from '@angular/forms';\nimport { OrderForm } from 'src/app/models/order-form.model';\nimport { Profile } from 'src/app/models/profile.model';\nimport { environment } from 'src/environments/environment';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\n\n@Component({\n  standalone: true,\n  selector: 'app-order-new',\n  templateUrl: './order-new.component.html',\n  styleUrl: './order-new.component.css',\n  imports: [CommonModule, ReactiveFormsModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderNewComponent implements OnInit {\n  private apiUrl = environment.apiUrl;\n  order!: OrderForm;\n  orderForm!: FormGroup;\n  submitted: boolean = false;\n\n  constructor(private http: HttpClient, private fb: FormBuilder, private snackBarService: SnackbarService) {}\n\n  ngOnInit(): void {\n    // fetch remote data\n    this.http.get<OrderForm>(`${this.apiUrl}/customers/5003/profiles`).subscribe({\n      next: (order) => {\n        this.order = order;\n        this.orderForm = this.fb.group({\n          customerId: [order.customerId],\n          deliveryDate: ['', [Validators.required, this.dateAfterTomorrowValidator, this.dateWithinThreeMonthsValidator, this.dateNotOnSundayValidator]],\n          shipToId: ['', [Validators.required]],\n          profiles: this.fb.array(\n            this.order.profiles.map((profile) => this.createProfileGroup(profile)),\n            [this.atLeastOneQuantityValidator],\n          ),\n        });\n      },\n    });\n  }\n\n  get formControls() {\n    return this.orderForm.controls;\n  }\n\n  get profileControls(): FormArray {\n    return this.orderForm.get('profiles') as FormArray;\n  }\n\n  get totalPrice(): number {\n    let totalPrice = 0;\n    for (let i = 0; i < this.order.profiles.length; i++) {\n      totalPrice += this.order.profiles[i].salesPrice * this.profileControls.at(i).get('quantity')?.value;\n    }\n    return totalPrice;\n  }\n\n  createProfileGroup(profile: Profile): FormGroup {\n    return this.fb.group({\n      id: [profile.id],\n      quantity: ['', Validators.min(0.0001)],\n    });\n  }\n\n  onSubmit() {\n    this.snackBarService.showSnackBar('Just some sample message');\n\n    if (this.orderForm.valid) {\n      console.log('Form Submitted', this.orderForm.value);\n      const order = this.orderForm.value;\n      order.profiles = order.profiles.filter((control: { quantity: number }) => control.quantity > 0);\n\n      // add code to post the order\n      // ...\n\n      this.submitted = true;\n    } else {\n      this.orderForm.markAllAsTouched(); // Mark all controls as touched to show validation errors\n    }\n  }\n\n  get dataToBeSubmitted() {\n    const data = this.orderForm.value;\n    data.profiles = data.profiles.filter((control: { quantity: number }) => control.quantity > 0);\n    return data;\n  }\n\n  isQuantityInvalid(index: number): boolean {\n    return this.profileControls.at(index).get('quantity')?.invalid || false;\n  }\n\n  isQuantityEntered(index: number): boolean {\n    return typeof this.profileControls.at(index).get('quantity')?.value === 'number';\n  }\n\n  // validator\n  dateAfterTomorrowValidator(control: AbstractControl): ValidationErrors | null {\n    const dateValue = new Date(control.value);\n    const today = new Date();\n    return dateValue > today ? null : { dateAfterTomorrow: true };\n  }\n\n  // validator\n  atLeastOneQuantityValidator(control: AbstractControl): ValidationErrors | null {\n    const formArray = control as FormArray;\n    const hasAtLeastOneQuantity = formArray.controls.some((group) => group.get('quantity')?.value > 0);\n    return hasAtLeastOneQuantity ? null : { atLeastOneQuantity: true };\n  }\n\n  // validator\n  dateWithinThreeMonthsValidator(control: AbstractControl): ValidationErrors | null {\n    const dateValue = new Date(control.value);\n    const threeMonthsFromNow = new Date();\n    threeMonthsFromNow.setMonth(threeMonthsFromNow.getMonth() + 3);\n    threeMonthsFromNow.setHours(0, 0, 0, 0);\n\n    return dateValue <= threeMonthsFromNow ? null : { dateWithinThreeMonths: true };\n  }\n\n  // validator\n  dateNotOnSundayValidator(control: AbstractControl): ValidationErrors | null {\n    const dateValue = new Date(control.value);\n    return dateValue.getDay() != 6 ? null : { dateNotOnSunday: true };\n  }\n}\n","<form [formGroup]=\"orderForm\" (ngSubmit)=\"onSubmit()\">\n\n    <table>\n        <tr>\n            <td>Custmer naem: </td>\n            <td>{{order.customerName}}</td>\n        </tr>\n        <tr>\n            <td>Sales rep: </td>\n            <td>{{order.salesRepName}}</td>\n        </tr>\n        <tr>\n            <td>Sales rep phone:</td>\n            <td>{{order.salesRepPhone}}</td>\n        </tr>\n        <tr>\n            <td><label for=\"customer-id\">Customer ID:</label></td>\n            <td><input id=\"customer-id\" formControlName=\"customerId\" type=\"text\"></td>\n        </tr>\n        <tr>\n            <td><label for=\"ship-to\">Ship to:</label></td>\n            <td><select id=\"ship-to\" formControlName=\"shipToId\">\n                    <option *ngFor=\"let shipTo of order.shipTos\" [value]=\"shipTo.id\">{{ shipTo.shipToName }}</option>\n                </select>\n                <div *ngIf=\"(orderForm.get('shipToId')?.touched || orderForm.get('shipToId')?.dirty) && orderForm.get('shipToId')?.errors?.['required']\" class=\"error\">Ship to is\n                    required.</div>\n\n            </td>\n        </tr>\n        <tr>\n            <td><label for=\"delivery-date\">Delivery Date:</label></td>\n            <td><input id=\"delivery-date\" formControlName=\"deliveryDate\" type=\"date\">\n                <div *ngIf=\"formControls['deliveryDate'].touched && formControls['deliveryDate'].errors?.['required']\" class=\"error\">\n                    Delivery date is required\n                </div>\n                <div *ngIf=\"formControls['deliveryDate'].dirty  && formControls['deliveryDate'].errors?.['dateAfterTomorrow']\" class=\"error\">\n                    Delivery date must be after today\n                </div>\n                <div *ngIf=\"formControls['deliveryDate'].dirty  && formControls['deliveryDate'].errors?.['dateWithinThreeMonths']\" class=\"error\">\n                    Delivery date must be within 3 months\n                </div>\n                <div *ngIf=\"formControls['deliveryDate'].dirty  && formControls['deliveryDate'].errors?.['dateNotOnSunday']\" class=\"error\">\n                    Delivery date cannot be on Sunday\n                </div>\n            </td>\n        </tr>\n    </table>\n\n    Specials:\n    <div formArrayName=\"profiles\">\n        <table border=\"1\">\n            @for (profile of profileControls.controls; track $index) {\n            @if (order.profiles[$index].isSpecial) {\n\n            <tr [formGroupName]=\"$index\" [ngStyle]=\"{'background-color': isQuantityEntered($index) ? 'lightgrey' : 'white'}\">\n                <td>ID: <input type=\"text\" formControlName=\"id\"></td>\n                <td>{{ order.profiles[$index].profileDescription }}</td>\n                <td>{{ order.profiles[$index].unitTypePd }}</td>\n                <td>Quantity: <input type=\"number\" formControlName=\"quantity\">\n                    <div *ngIf=\"profile.get('quantity')?.errors?.['min']\" class=\"error\">The number must be greater than zero.</div>\n                </td>\n\n            </tr>\n            }\n            }\n        </table>\n    </div>\n\n    <br>\n    Non specials:\n    <div formArrayName=\"profiles\">\n        <table border=\"1\">\n            @for (profile of profileControls.controls; track $index) {\n            @if (!order.profiles[$index].isSpecial) {\n            <tr [formGroupName]=\"$index\" [ngStyle]=\"{'background-color': isQuantityEntered($index) ? 'lightgrey' : 'white'}\">\n                <td>ID: <input type=\"text\" formControlName=\"id\"></td>\n                <td>{{ order.profiles[$index].profileDescription }}</td>\n                <td>{{ order.profiles[$index].unitTypePd }}</td>\n                <td>{{ order.profiles[$index].salesPrice | currency:'USD':'symbol':'1.2-2'}}</td>\n                <td>Quantity: <input type=\"number\" formControlName=\"quantity\">\n                    <div *ngIf=\"profile.get('quantity')?.errors?.['min']\" class=\"error\">The number must greater than zero.</div>\n                </td>\n\n            </tr>\n            }\n            }\n        </table>\n        <div *ngIf=\"submitted && orderForm.get('profiles')?.hasError('atLeastOneQuantity')\" class=\"error\">\n            At least one quantity is required\n        </div>\n    </div>\n\n    <div *ngIf=\"profileControls.touched && profileControls.errors?.['atLeastOneQuantity']\" class=\"error\">\n        Enter at least one quantity\n    </div>\n\n    <br>Total price: {{totalPrice| currency:'USD':'symbol':'1.2-2'}}\n    <div *ngIf=\"totalPrice>10000\" class=\"error\">The total has to be less than $10,000</div>\n    <br>\n\n    <br><button type=\"submit\" [disabled]=\"!orderForm.valid\">Submit</button>\n\n</form>\n\n<br>\nData to send to spring boot:\n<br>\n<pre>{{dataToBeSubmitted | json}}</pre>","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Observable, catchError, throwError } from 'rxjs';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\n\n@Injectable()\nexport class HttpLoggingInterceptor implements HttpInterceptor {\n  constructor(private snackBarService: SnackbarService) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler,\n  ): Observable<HttpEvent<unknown>> {\n    const authToken = 'YOUR_AUTH_TOKEN_HERE';\n\n    // Clone the request and add the authorization header\n    const authReq = request.clone({\n      setHeaders: {\n        'X-New-Header': authToken,\n      },\n    });\n\n    // Pass the cloned request with the updated header to the next handler\n    return next.handle(authReq).pipe(\n      catchError((err: unknown) => {\n        if (err instanceof HttpErrorResponse) {\n          this.handleServerSideError(err);\n        } else {\n          this.snackBarService.showSnackBar('Error fetching data');\n        }\n\n        // Re-throw the error to propagate it further\n        //return throwError(() => err);\n        // stop propagating error\n        return throwError(() => err); //EMPTY;\n      }),\n    );\n  }\n\n  private handleServerSideError(error: HttpErrorResponse) {\n    console.error(error.error.message);\n    switch (error.status) {\n      case 400: //  means the request could not be understood by the server.\n        this.snackBarService.showSnackBar(\n          'Bad Request, please try again later .',\n        );\n        break;\n      case 401: // means lacks valid authentication credentials for the target resource.\n        this.snackBarService.showSnackBar(\n          'Unauthorized, please try again later.',\n        );\n        break;\n      case 403: //  means you are not allowed access to the target resource.\n        this.snackBarService.showSnackBar('Forbidden access is denied');\n        break;\n      case 500: // means there's an issue or temporary glitch with the application's programming\n        console.log(error);\n        this.snackBarService.showSnackBar(\n          'Internal server error, please try again later.',\n        );\n        break;\n      default:\n        this.snackBarService.showSnackBar(\n          'Error fetching data, please try again later.',\n        );\n        break;\n    }\n  }\n}\n","import { HttpClient, HttpEvent, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { DeliveryStop } from '../models/delivery-stop.model';\nimport { environment } from 'src/environments/environment';\n\ninterface Driver {\n  name: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DriverRouteService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  getDrivers(): Observable<Driver[]> {\n    return this.http.get<Driver[]>(`${this.apiUrl}/drivers`);\n  }\n\n  getDeliveryRoute(\n    driverName: string,\n    deliveryDate: string\n  ): Observable<DeliveryStop[]> {\n    const params = new HttpParams()\n      .set('driverName', driverName)\n      .set('deliveryDate', deliveryDate);\n    return this.http.get<DeliveryStop[]>(`${this.apiUrl}/delivery-stops`, {\n      params,\n    });\n  }\n\n  hasArrived(id: string): Observable<DeliveryStop> {\n    return this.http.patch<DeliveryStop>(`${this.apiUrl}/delivery-stops/${id}`, {});\n  }\n\n  uploadPhoto(\n    deliveryStopId: number,\n    file: File\n  ): Observable<HttpEvent<DeliveryStop>> {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    return this.http.post<DeliveryStop>(\n      `${this.apiUrl}/delivery-stops/${deliveryStopId}/photos`,\n      formData,\n      {\n        reportProgress: true,\n        observe: 'events',\n      }\n    );\n  }\n}\n","import { ErrorHandler, Injectable } from '@angular/core';\nimport { SnackbarService } from './snackbar.service';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GlobalErrorHandlerService implements ErrorHandler {\n  constructor(private snackBarService: SnackbarService) {}\n\n  handleError(error: any) {\n    if (error instanceof HttpErrorResponse) {\n      // Server-side error\n      if (!navigator.onLine) {\n        this.snackBarService.showSnackBar('No internet connection');\n        return;\n      }\n      if (error.error instanceof ErrorEvent) {\n        this.snackBarService.showSnackBar(error.error.message);\n        return;\n      }\n\n      if (error.status === 413) {\n        this.snackBarService.showSnackBar('File too large');\n        return;\n      }\n\n      console.error('An error occurred:', error);\n      console.log(JSON.stringify(error.error));\n\n      this.snackBarService.showSnackBar(\n        'An error has occured: ' + error.error.message,\n      );\n    } else {\n      // Client-side error\n    }\n  }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { InventoryItem } from '../models/inventoty-item.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class InventoryService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  getInventoryItems(\n    page: number,\n    size: number,\n    searchTerm: string,\n  ): Observable<InventoryItem[]> {\n    const params = new HttpParams()\n      .set('page', page.toString())\n      .set('size', size.toString())\n      .set('search', searchTerm);\n    return this.http\n      .get<{ content: InventoryItem[] }>(`${this.apiUrl}/inventory`, {\n        params,\n      })\n      .pipe(map((response) => response.content));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Profile } from '../models/profile.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderFormService {\n  private apiUrl = 'https://uat-pffc.onrender.com/api/customers';\n\n  constructor(private http: HttpClient) {}\n\n  fetchCustomerData(customerId: string): Observable<any> {\n    return this.http.get<any>(`${this.apiUrl}/${customerId}/profiles`);\n  }\n\n  placeOrder(\n    customerId: string,\n    orderData: any,\n  ): Observable<HttpResponse<any>> {\n    return this.http.post<any>(\n      `${this.apiUrl}/${customerId}/orders`,\n      orderData,\n      { observe: 'response' },\n    );\n  }\n\n  calculateTotal(products: Profile[]): number {\n    let total = 0;\n    products.forEach((product) => {\n      const quantity =\n        product.quantity !== undefined\n          ? parseFloat(product.quantity.toString())\n          : 0;\n      const price =\n        product.salesPrice !== undefined\n          ? parseFloat(product.salesPrice.toString())\n          : 0;\n      const packSize =\n        product.packSizePd !== undefined\n          ? parseFloat(product.packSizePd.toString())\n          : 1;\n      const lineTotal = quantity * packSize * price;\n      total += lineTotal;\n    });\n\n    const totalAmountSpan = document.getElementById(\n      'total-amount',\n    ) as HTMLSpanElement;\n    totalAmountSpan.textContent = total.toLocaleString('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    });\n\n    const totalPriceInput = document.getElementById(\n      'total_price',\n    ) as HTMLInputElement;\n    totalPriceInput.value = total.toFixed(2);\n\n    return total;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { Company } from '../models/company.model';\nimport { Customer } from '../models/customer.model';\nimport { SalesRep } from '../models/sales-rep.model';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderLinksService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  getCompanies(): Observable<Company[]> {\n    return this.http.get<Company[]>(`${this.apiUrl}/companies`);\n  }\n\n  getSalesPersons(companyId: number) {\n    return this.http.get<SalesRep[]>(\n      `${this.apiUrl}/companies/${companyId}/sales-reps`,\n    );\n  }\n\n  getCustomers(companyId: number, salesRepName: string) {\n    return this.http.get<Customer[]>(\n      `${this.apiUrl}/companies/${companyId}/sales-reps/${salesRepName}/customers`,\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SnackbarService {\n  private duration = 10000;\n  private verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n  private horizontalPos: MatSnackBarHorizontalPosition = 'center';\n  private action = 'Hide';\n\n  constructor(private matSnackBar: MatSnackBar) {}\n\n  showSnackBar(message: string, style?: string) {\n    this.matSnackBar.open(message, this.action, {\n      duration: this.duration,\n      verticalPosition: this.verticalPosition,\n      horizontalPosition: this.horizontalPos,\n      panelClass: style,\n    });\n  }\n}\n","export const environment = {\n  production: false,\n  apiKey: 'devKey',\n  apiUrl: 'https://uat-pffc.onrender.com/api',\n};\n","import { AppComponent } from './app/app.component';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { InfiniteScrollDirective } from 'ngx-infinite-scroll';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { provideAnimations } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app/app-routing.module';\nimport { BrowserModule, bootstrapApplication } from '@angular/platform-browser';\nimport { GlobalErrorHandlerService } from './app/services/global-error-handler.service';\nimport { ErrorHandler, importProvidersFrom } from '@angular/core';\nimport { HttpLoggingInterceptor } from './app/core/interceptors/http-logging.interceptor';\nimport { HTTP_INTERCEPTORS, provideHttpClient } from '@angular/common/http';\n\nbootstrapApplication(AppComponent, {\n  providers: [\n    importProvidersFrom(\n      BrowserModule,\n      AppRoutingModule,\n      FormsModule,\n      ReactiveFormsModule,\n      CommonModule,\n      MatSlideToggleModule,\n      MatTableModule,\n      MatSidenavModule,\n      MatToolbarModule,\n      MatIconModule,\n      MatListModule,\n      MatMenuModule,\n      MatSnackBarModule,\n      InfiniteScrollDirective,\n      ModalModule.forRoot(),\n    ),\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpLoggingInterceptor,\n      multi: true,\n    },\n    { provide: ErrorHandler, useClass: GlobalErrorHandlerService },\n    provideHttpClient(),\n    provideAnimations(),\n  ],\n}).catch((err) => console.error(err));\n"],"names":["RouterModule","DriverRouteComponent","HomeComponent","OrderLinksComponent","LoginComponent","LogoutComponent","InventoryComponent","OrderFormComponent","OrderConfirmationComponent","OrderExistsComponent","OrderNewComponent","routes","path","redirectTo","pathMatch","component","title","AppRoutingModule","_","_2","_3","forRoot","imports","i1","exports","isDevMode","MatIcon","RouterLink","RouterLinkActive","RouterOutlet","MatToolbar","environment","CommonModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","apiUrl","AppComponent","constructor","showWarning","includes","alert","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","AppComponent_Conditional_23_Template","ɵɵproperty","ɵɵpureFunction1","_c0","ɵɵconditional","NgClass","styles","changeDetection","SecurityContext","map","HttpEventType","ImageThumbnailComponent","MatTableModule","driverNames_r4","name","i_r5","ɵɵtextInterpolate1","dataSource_r7","indexOf","element_r6","timeDifference","DriverRouteComponent_table_18_td_3_div_2_Template","deliveryAddress1","length","ctx_r8","getGoogleMapsUrl","element_r8","deliveryAddress2","deliveryAddress3","ɵɵsanitizeUrl","ɵɵtextInterpolate2","element_r10","customerPhone","ɵɵlistener","DriverRouteComponent_table_18_td_12_div_1_Template_input_change_1_listener","$event","ɵɵrestoreView","_r11","element_r12","ɵɵnextContext","$implicit","ɵɵresetView","onFileSelected","DriverRouteComponent_table_18_td_12_div_1_Template_button_click_3_listener","fileInput_r13","ɵɵreference","click","fileUrl","ɵɵpipeBind2","actualArrivalTime","DriverRouteComponent_table_18_td_12_div_1_Template","DriverRouteComponent_table_18_td_12_ng_template_2_Template","ɵɵtemplateRefExtractor","alreadyArrivedBlock_r14","row_r15","ɵɵelementContainerStart","DriverRouteComponent_table_18_th_2_Template","DriverRouteComponent_table_18_td_3_Template","DriverRouteComponent_table_18_th_5_Template","DriverRouteComponent_table_18_td_6_Template","DriverRouteComponent_table_18_th_8_Template","DriverRouteComponent_table_18_td_9_Template","DriverRouteComponent_table_18_th_11_Template","DriverRouteComponent_table_18_td_12_Template","DriverRouteComponent_table_18_tr_13_Template","DriverRouteComponent_table_18_tr_14_Template","displayedColumns","driverRouteService","snackBarService","sanitizer","cdr","maxFileSize","selectedFile","today","formatDate","Date","ngOnInit","driverNames$","getDrivers","pipe","data","refreshDeliverRoute","sort","a","b","localeCompare","date","month","getMonth","slice","day","getDate","year","getFullYear","driverName","deliveryDate","formattedDate","toISOString","split","deliveryRoute$","getDeliveryRoute","deliveryStops","calculateTimeDifferences","hasArrived","deliveryRoute","id","toString","subscribe","console","log","error","event","input","target","files","file","type","startsWith","size","uploadFile","showSnackBar","uploadPhoto","next","Response","updatedDeliveryStop","body","Object","assign","detectChanges","address2","address3","url","encodeURIComponent","sanitizedUrl","sanitize","URL","bypassSecurityTrustUrl","i","currentStop","previousStop","currentTime","plannedArrivalTime","getTime","previousTime","timeDifferenceInMinutes","Math","round","undefined","ɵɵdirectiveInject","DriverRouteService","i2","SnackbarService","i3","DomSanitizer","ChangeDetectorRef","DriverRouteComponent_Template","DriverRouteComponent_Template_select_change_9_listener","_r1","driverName_r2","deliveryDate2_r3","value","DriverRouteComponent_option_11_Template","DriverRouteComponent_table_18_Template","ɵɵpipeBind1","i4","NgForOf","NgIf","AsyncPipe","DatePipe","i5","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","getStatusColor","HomeComponent_tr_35_ng_container_9_Template","HomeComponent_tr_35_ng_container_10_Template","item_r2","description","status","getStatusIcon","ordered","employee_r3","router","employees","items","sortEmployees","sortItems","statusOrder","sick","vacation","onsite","none","low","navigateTo","page","navigate","Router","HomeComponent_Template","HomeComponent_tr_35_Template","HomeComponent_tr_47_Template","NgStyle","TitleCasePipe","ImageThumbnailComponent_ng_template_2_Template_button_click_3_listener","_r3","ctx_r3","modalRef","hide","ImageThumbnailComponent_ng_template_2_Template_img_click_7_listener","ImageThumbnailComponent_ng_template_2_Template_img_keyup_7_listener","imageUrl","modalService","openModal","show","class","BsModalService","inputs","ImageThumbnailComponent_Template","ImageThumbnailComponent_Template_div_click_0_listener","imageModal_r2","ImageThumbnailComponent_Template_img_keyup_1_listener","ImageThumbnailComponent_ng_template_2_Template","debounceTime","distinctUntilChanged","BehaviorSubject","Subject","InfiniteScrollDirective","item_r1","compDescription","unitType","packSize","ɵɵpipeBind4","activePrice","woh","inventoryService","searchTerm","searchSubject","inventoryItemsSubject","inventoryItems$","asObservable","loadData","searchSubscription","trimComparator","getInventoryItems","inventoryItems","currentData","onScroll","onSearchChange","replace","trim","prev","curr","ngOnDestroy","unsubscribe","InventoryService","InventoryComponent_Template","InventoryComponent_Template_div_scrolled_0_listener","InventoryComponent_Template_input_input_7_listener","InventoryComponent_tr_32_Template","CurrencyPipe","LoginComponent_Template","imageBackgroundColor","imageSrc","LogoComponent","ngOnChanges","commpanyId","ɵɵNgOnChangesFeature","LogoComponent_Template","LogoComponent_Conditional_0_Template","LogoutComponent_Template","product_r1","profileDescription","unitTypePd","packSizePd","salesPrice","quantity","ctx_r1","orderData","location","history","state","goBack","customerId","Location","OrderConfirmationComponent_Template","OrderConfirmationComponent_tr_24_Template","OrderConfirmationComponent_Template_button_click_34_listener","companyId","customerName","profiles","ɵɵpipeBind3","totalPrice","DecimalPipe","shipToName","OrderExistsComponent_tr_28_td_19_Template","salesRepName","profile_r2","route","window","back","ActivatedRoute","OrderExistsComponent_Template","OrderExistsComponent_th_26_Template","OrderExistsComponent_tr_28_Template","OrderExistsComponent_Template_button_click_36_listener","FormsModule","salesRepPhone","shipto_r3","ɵɵtwoWayListener","OrderFormComponent_div_12_Template_select_ngModelChange_3_listener","_r2","ɵɵtwoWayBindingSet","selectedShiptoID","OrderFormComponent_div_12_option_4_Template","ɵɵtwoWayProperty","shiptoNames","OrderFormComponent_div_13_tr_23_Template_input_ngModelChange_8_listener","product_r5","_r4","OrderFormComponent_div_13_tr_23_Template_input_input_8_listener","updateRowStyle","OrderFormComponent_div_13_tr_23_Template_input_blur_8_listener","checkEmptyInput","OrderFormComponent_div_13_tr_23_Template_input_ngModelChange_9_listener","OrderFormComponent_div_13_tr_23_Template_input_ngModelChange_10_listener","OrderFormComponent_div_13_tr_23_Template_input_ngModelChange_11_listener","OrderFormComponent_div_13_tr_23_Template_input_ngModelChange_12_listener","OrderFormComponent_div_13_tr_23_Template_input_ngModelChange_14_listener","ɵɵpropertyInterpolate1","i_r6","OrderFormComponent_div_13_tr_23_Template","specialsProducts","order_r8","profileDid","customer_name","sales_rep","product_description","unit_type","pack_size","total_price","delivery_date","customer_email","sales_rep_phone","order_timestamp","customer_po","OrderFormComponent_div_14_tr_41_Template","OrderFormComponent_div_14_Template_button_click_42_listener","_r7","orders","OrderFormComponent_form_15_tr_24_Template_input_ngModelChange_8_listener","product_r12","OrderFormComponent_form_15_tr_24_Template_input_input_8_listener","OrderFormComponent_form_15_tr_24_Template_input_blur_8_listener","OrderFormComponent_form_15_tr_24_Template_input_ngModelChange_9_listener","OrderFormComponent_form_15_tr_24_Template_input_ngModelChange_10_listener","OrderFormComponent_form_15_tr_24_Template_input_ngModelChange_11_listener","OrderFormComponent_form_15_tr_24_Template_input_ngModelChange_12_listener","OrderFormComponent_form_15_tr_24_Template_input_ngModelChange_14_listener","i_r13","OrderFormComponent_form_15_Template_form_ngSubmit_0_listener","_r9","orderForm_r10","submitOrder","OrderFormComponent_form_15_tr_24_Template","OrderFormComponent_form_15_Template_input_ngModelChange_29_listener","OrderFormComponent_form_15_Template_input_ngModelChange_33_listener","OrderFormComponent_form_15_Template_input_ngModelChange_36_listener","customerPo","OrderFormComponent_form_15_Template_input_input_36_listener","restrictInput","OrderFormComponent_form_15_Template_input_ngModelChange_41_listener","products","OrderFormComponent_form_15_Template_input_ngModelChange_42_listener","OrderFormComponent_form_15_Template_input_ngModelChange_43_listener","OrderFormComponent_form_15_Template_input_ngModelChange_44_listener","customerEmail","OrderFormComponent_form_15_Template_input_ngModelChange_45_listener","OrderFormComponent_form_15_Template_input_ngModelChange_46_listener","OrderFormComponent_form_15_Template_input_ngModelChange_47_listener","isSubmitting","orderFormService","company","paramMap","params","get","fetchCustomerData","fetchSpecialsData","queryParamMap","updateImageAndBackground","isValidCustomerId","shipToId","find","shipto","profile","shipTos","updateTotal","specialsCustomerId","row","closest","parseFloat","classList","add","remove","productIndex","getAttribute","isSpecial","total","forEach","product","price","totalAmountSpan","document","getElementById","textContent","toLocaleString","style","currency","minimumFractionDigits","maximumFractionDigits","toFixed","form","errorMessage","validateForm","displayErrorMessage","orderProfiles","prepareOrderData","orderProfilesArray","concat","placeOrder","response","queryParams","JSON","stringify","image","maxLength","customerIdNumber","Number","isNaN","setHours","yesterday","setDate","maxDeliveryDate","setMonth","getDay","hasQuantity","some","calculateTotal","message","errorMessageDiv","querySelector","filter","OrderFormService","OrderFormComponent_Template","OrderFormComponent_Template_input_ngModelChange_8_listener","OrderFormComponent_Template_button_click_9_listener","OrderFormComponent_div_11_Template","OrderFormComponent_div_12_Template","OrderFormComponent_div_13_Template","OrderFormComponent_div_14_Template","OrderFormComponent_form_15_Template","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","MaxLengthValidator","PatternValidator","NgModel","NgForm","Observable","switchMap","tap","ReactiveFormsModule","company_r1","salesperson_r2","OrderLinksComponent_For_33_Template_a_click_7_listener","customer_r4","ctx_r4","copyLink","OrderLinksComponent_For_33_Template_a_keyup_7_listener","http","fb","snackbarService","orderLinksService","customers","filteredCustomers","group","salesPerson","searchText","companies$","getCompanies","companies","defaultCompany","setValue","valueChanges","getSalesPersons","salesreps","salesPersons$","observer","complete","salesrep","getCustomers","markForCheck","customer","toLowerCase","generateLink","baseUrl","href","link","navigator","clipboard","writeText","then","catch","err","HttpClient","FormBuilder","OrderLinksService","OrderLinksComponent_Template","OrderLinksComponent_option_10_Template","OrderLinksComponent_option_16_Template","ɵɵrepeaterCreate","OrderLinksComponent_For_33_Template","ɵɵrepeaterTrackByIdentity","tmp_1_0","ɵɵrepeater","FormGroupDirective","FormControlName","i6","Validators","shipTo_r1","OrderNewComponent_For_45_Conditional_0_div_11_Template","$index_r4","isQuantityEntered","order","tmp_15_0","profile_r3","errors","OrderNewComponent_For_45_Conditional_0_Template","OrderNewComponent_For_51_Conditional_0_div_14_Template","$index_r8","tmp_16_0","profile_r7","OrderNewComponent_For_51_Conditional_0_Template","submitted","orderForm","required","dateAfterTomorrowValidator","dateWithinThreeMonthsValidator","dateNotOnSundayValidator","array","createProfileGroup","atLeastOneQuantityValidator","formControls","controls","profileControls","at","min","onSubmit","valid","control","markAllAsTouched","dataToBeSubmitted","isQuantityInvalid","index","invalid","dateValue","dateAfterTomorrow","formArray","hasAtLeastOneQuantity","atLeastOneQuantity","threeMonthsFromNow","dateWithinThreeMonths","dateNotOnSunday","OrderNewComponent_Template","OrderNewComponent_Template_form_ngSubmit_0_listener","OrderNewComponent_option_29_Template","OrderNewComponent_div_30_Template","OrderNewComponent_div_37_Template","OrderNewComponent_div_38_Template","OrderNewComponent_div_39_Template","OrderNewComponent_div_40_Template","OrderNewComponent_For_45_Template","ɵɵrepeaterTrackByIndex","OrderNewComponent_For_51_Template","OrderNewComponent_div_52_Template","OrderNewComponent_div_53_Template","OrderNewComponent_div_57_Template","tmp_5_0","touched","dirty","tmp_12_0","hasError","JsonPipe","NumberValueAccessor","FormGroupName","FormArrayName","HttpErrorResponse","catchError","throwError","HttpLoggingInterceptor","intercept","request","authToken","authReq","clone","setHeaders","handle","handleServerSideError","ɵɵinject","factory","ɵfac","HttpParams","set","patch","deliveryStopId","formData","FormData","append","post","reportProgress","observe","providedIn","GlobalErrorHandlerService","handleError","onLine","ErrorEvent","content","lineTotal","totalPriceInput","matSnackBar","duration","verticalPosition","horizontalPos","action","open","horizontalPosition","panelClass","MatSnackBar","production","apiKey","ModalModule","MatSnackBarModule","MatMenuModule","MatListModule","MatIconModule","MatToolbarModule","MatSidenavModule","MatSlideToggleModule","provideAnimations","BrowserModule","bootstrapApplication","ErrorHandler","importProvidersFrom","HTTP_INTERCEPTORS","provideHttpClient","providers","provide","useClass","multi"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}