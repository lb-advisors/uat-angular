{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/data/data.component.ts","./src/app/components/data/data.component.html","./src/app/components/driver-route/driver-route.component.ts","./src/app/components/driver-route/driver-route.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/image-thumbnail/image-thumbnail.component.ts","./src/app/components/image-thumbnail/image-thumbnail.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/logo/logo.component.ts","./src/app/components/logo/logo.component.html","./src/app/components/logout/logout.component.ts","./src/app/components/logout/logout.component.html","./src/app/components/order-confirmation/order-confirmation.component.ts","./src/app/components/order-confirmation/order-confirmation.component.html","./src/app/components/order-details-dialog/order-details-dialog.component.ts","./src/app/components/order-details-dialog/order-details-dialog.component.html","./src/app/components/order-exists/order-exists.component.ts","./src/app/components/order-exists/order-exists.component.html","./src/app/components/order-form/order-form.component.ts","./src/app/components/order-form/order-form.component.html","./src/app/components/order-links/order-links.component.ts","./src/app/components/order-links/order-links.component.html","./src/app/components/orders/orders.component.ts","./src/app/components/orders/orders.component.html","./src/app/components/password-request/password-request.component.ts","./src/app/components/password-request/password-request.component.html","./src/app/components/password-reset/password-reset.component.ts","./src/app/components/password-reset/password-reset.component.html","./src/app/components/preorder-form/preorder-form.component.ts","./src/app/components/preorder-form/preorder-form.component.html","./src/app/components/preorder-links/preorder-links.component.ts","./src/app/components/preorder-links/preorder-links.component.html","./src/app/components/product-details-dialog/product-details-dialog.component.ts","./src/app/components/product-details-dialog/product-details-dialog.component.html","./src/app/components/products/products.component.ts","./src/app/components/products/products.component.html","./src/app/guards/auth.guard.ts","./src/app/interceptors/auth.interceptor.ts","./src/app/services/auth.service.ts","./src/app/services/driver-route.service.ts","./src/app/services/global-error-handler.service.ts","./src/app/services/order-form.service.ts","./src/app/services/order-links.service.ts","./src/app/services/order.services.ts","./src/app/services/preorder.service.ts","./src/app/services/products.service.ts","./src/app/services/snackbar.service.ts","./src/app/services/vendors.service.ts","./src/environments/environment.development.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DriverRouteComponent } from './components/driver-route/driver-route.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { OrderLinksComponent } from './components/order-links/order-links.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { LogoutComponent } from './components/logout/logout.component';\nimport { ProductsComponent } from './components/products/products.component';\nimport { OrderConfirmationComponent } from './components/order-confirmation/order-confirmation.component';\nimport { OrderExistsComponent } from './components/order-exists/order-exists.component';\nimport { OrderFormComponent } from './components/order-form/order-form.component';\nimport { DataComponent } from './components/data/data.component';\nimport { OrdersComponent } from './components/orders/orders.component';\nimport { VendorLinksComponent } from './components/preorder-links/preorder-links.component'; // Updated the import to match the renamed component\nimport { PreorderFormComponent } from './components/preorder-form/preorder-form.component'; // Import the new PreorderFormComponent\nimport { AuthGuard } from './guards/auth.guard';\nimport { PasswordRequestComponent } from './components/password-request/password-request.component';\nimport { PasswordResetComponent } from './components/password-reset/password-reset.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  { path: 'home', component: HomeComponent, title: 'Home', canActivate: [AuthGuard] },\n  { path: 'driver', component: DriverRouteComponent, title: 'Driver Route', canActivate: [AuthGuard] },\n  { path: 'order-links', component: OrderLinksComponent, title: 'Order Links' },\n  { path: 'login', component: LoginComponent, title: 'Login' },\n  { path: 'logout', component: LogoutComponent, title: 'Logout' },\n  { path: 'password-request', component: PasswordRequestComponent, title: 'Password Request' },\n  { path: 'password-reset/:token', component: PasswordResetComponent, title: 'Password Reset' },\n  { path: 'products', component: ProductsComponent, title: 'Products', canActivate: [AuthGuard] },\n  { path: 'customer/:id/order-confirmation', component: OrderConfirmationComponent, title: 'Order Confirmation' },\n  { path: 'customer/:id/order-exists', component: OrderExistsComponent, title: 'Order Exists' },\n  { path: 'customer/:id/order-form', component: OrderFormComponent, title: 'Order Form' },\n  { path: 'data', component: DataComponent, title: 'Data', canActivate: [AuthGuard] },\n  { path: 'orders', component: OrdersComponent, title: 'Orders', canActivate: [AuthGuard] },\n  { path: 'preorder-links', component: VendorLinksComponent, title: 'Vendor Links', canActivate: [AuthGuard] },\n  { path: 'preorder-form/:vendorId', component: PreorderFormComponent, title: 'Preorder Form', canActivate: [AuthGuard] }, // New route for PreorderFormComponent\n  { path: '**', redirectTo: 'login' }, // Wildcard route to handle unmatched paths, redirect to login\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { ChangeDetectionStrategy, Component, OnInit, isDevMode } from '@angular/core';\nimport { NavigationEnd, Router, RouterOutlet } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  standalone: true,\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  imports: [CommonModule, MatToolbarModule, MatIconModule, RouterOutlet],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent implements OnInit {\n  isDevMode: boolean = isDevMode();\n  apiUrl = environment.apiUrl;\n  showWarning = false;\n  isOrderForm: boolean = false;\n\n  constructor(private router: Router) {\n    // Check that UAT is not using the prod backend\n    if (this.isDevMode && this.apiUrl.includes('prod')) {\n      this.showWarning = true;\n      alert('WARNING: Angular is in Dev mode but connected to production !!!');\n    }\n  }\n\n  ngOnInit(): void {\n    // Check if we are on the order form\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        const currentRoute = event.urlAfterRedirects;\n        this.isOrderForm = currentRoute.includes('order-') && !currentRoute.includes('order-links');\n      }\n    });\n  }\n}\n","<main>\n    <router-outlet></router-outlet>\n</main>\n\n<!-- Footer with Navigation and Social Icons-->\n<footer class=\"mat-drawer-container\">\n    <div class=\"container\">\n        <div class=\"text-align-center\">\n            © 2024 - Pacific Fresh Fish Company\n            <div *ngIf=\"isDevMode\" class=\"dev-mode\">UAT ENVIRONMENT</div>\n            <div *ngIf=\"isDevMode\" class=\"dev-mode\">{{apiUrl}}</div>\n        </div>\n    </div>\n</footer>\n","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { environment } from 'src/environments/environment'; // Import the environment configuration\n\n@Component({\n  selector: 'app-data',\n  templateUrl: './data.component.html',\n  styleUrls: ['./data.component.css'],\n})\nexport class DataComponent {\n  private apiUrl = environment.apiUrl;\n  uploadUrl: string = `${this.apiUrl}/database/csv/upload/profiles`;\n\n  constructor(private http: HttpClient, private snackBar: MatSnackBar) {}\n\n  downloadOrders() {\n    const url = `${this.apiUrl}/database/csv/download/orders`;\n\n    this.http.get(url, { responseType: 'blob' }).subscribe(\n      (response: Blob) => {\n        const blob = new Blob([response], { type: 'text/csv' });\n        const downloadURL = window.URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = downloadURL;\n        link.download = 'orders.csv';\n        link.click();\n        window.URL.revokeObjectURL(downloadURL);\n      },\n      (error) => {\n        console.error('Download failed:', error);\n        this.snackBar.open('Failed to download orders. Please try again later.', 'Close', { duration: 3000 });\n      },\n    );\n  }\n\n  onFileSelected(event: Event) {\n    const fileInput = event.target as HTMLInputElement;\n    if (fileInput.files && fileInput.files.length > 0) {\n      const file = fileInput.files[0];\n      this.uploadFile(file);\n    }\n  }\n\n  uploadFile(file: File) {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    this.snackBar.open('Processing your CSV file', '', { duration: 20000 });\n\n    this.http.post(this.uploadUrl, formData).subscribe({\n      next: () => {\n        this.snackBar.open('All Done', '', { duration: 3000 });\n      },\n    });\n  }\n}\n","<div class=\"data-container\">\n    <button class=\"action-button download-button\" (click)=\"downloadOrders()\">Download Orders</button>\n    <button class=\"action-button upload-button\" (click)=\"fileInput.click()\">Upload Profiles</button>\n    <input type=\"file\" #fileInput accept=\".csv\" style=\"display: none\" (change)=\"onFileSelected($event)\" />\n</div>\n\n<div class=\"upload-instructions\">\n    <p>CSV file required</p>\n    <p>File with these columns, in this order required:</p>\n    <ul>\n        <li>ProfileDID</li>\n        <li>SalesRepName</li>\n        <li>SalesRepCell</li>\n        <li>SalesRepEmail</li>\n        <li>ProfileID</li>\n        <li>CustomerID</li>\n        <li>CustomerName</li>\n        <li>CompItemID</li>\n        <li>ProfileDescription</li>\n        <li>ProfileInstruction</li>\n        <li>UnitTypePD</li>\n        <li>PackSizePD</li>\n        <li>SalesPrice</li>\n        <li>CustomerContactName</li>\n        <li>CustomerCell</li>\n        <li>CustomerEmail</li>\n        <li>Company</li>\n        <li>CompanyID</li>\n    </ul>\n</div>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, SecurityContext } from '@angular/core';\nimport { DriverRouteService } from '../../services/driver-route.service';\nimport { Observable } from 'rxjs';\nimport { DeliveryStop } from 'src/app/models/delivery-stop.model';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { map, tap } from 'rxjs/operators';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { HttpEventType } from '@angular/common/http';\nimport { ImageThumbnailComponent } from '../image-thumbnail/image-thumbnail.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router'; // Import RouterModule\n\ninterface Driver {\n  name: string;\n}\n\n@Component({\n  standalone: true,\n  selector: 'app-driver-route',\n  templateUrl: './driver-route.component.html',\n  styleUrls: ['./driver-route.component.css'],\n  imports: [CommonModule, MatTableModule, ImageThumbnailComponent, RouterModule], // Add RouterModule here\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DriverRouteComponent implements OnInit {\n  readonly maxFileSize = 4 * 1024 * 1024; // 4 MB\n\n  driverNames$!: Observable<Driver[]>;\n  deliveryRoute$: Observable<DeliveryStop[]> | undefined;\n  today: string;\n  selectedFile: File | null = null;\n\n  displayedColumns: string[] = ['deliveryAddress1', 'address', 'customerPhone', 'actualArrivalTime'];\n\n  constructor(\n    private driverRouteService: DriverRouteService,\n    private snackBarService: SnackbarService,\n    private sanitizer: DomSanitizer,\n    private cdr: ChangeDetectorRef,\n  ) {\n    this.today = this.formatDate(new Date());\n  }\n\n  ngOnInit(): void {\n    this.driverNames$ = this.driverRouteService.getDrivers().pipe(\n      tap((data) => {\n        if (data && data.length > 0) {\n          this.refreshDeliverRoute(data[0].name, this.today);\n        }\n      }),\n    );\n  }\n\n  formatDate(date: Date): string {\n    const month = ('0' + (date.getMonth() + 1)).slice(-2);\n    const day = ('0' + date.getDate()).slice(-2);\n    const year = date.getFullYear();\n    return `${month}/${day}/${year}`;\n  }\n\n  refreshDeliverRoute(driverName: string, deliveryDate: string): void {\n    const formattedDate = new Date(deliveryDate).toISOString().split('T')[0]; // Ensure date is formatted as YYYY-MM-DD\n    this.deliveryRoute$ = this.driverRouteService\n      .getDeliveryRoute(driverName, formattedDate)\n      .pipe(map((deliveryStops) => this.calculateTimeDifferences(deliveryStops)));\n  }\n\n  onFileSelected(deliveryRoute: DeliveryStop, event: Event) {\n    const input = event.target as HTMLInputElement;\n    if (input.files && input.files.length > 0) {\n      const file = input.files[0];\n      if (file && file.type.startsWith('image/')) {\n        if (file.size <= this.maxFileSize) {\n          this.selectedFile = file;\n          this.uploadFile(deliveryRoute, file);\n        } else {\n          this.snackBarService.showSnackBar('File size exceeds 4 MB.');\n        }\n      } else {\n        this.snackBarService.showSnackBar('Please select an image file');\n        this.selectedFile = null;\n      }\n    }\n  }\n\n  uploadFile(deliveryRoute: DeliveryStop, file: File) {\n    this.snackBarService.showSnackBar('Your file is being uploaded');\n    this.driverRouteService.uploadPhoto(deliveryRoute.id, file).subscribe({\n      next: (event) => {\n        switch (event.type) {\n          case HttpEventType.Response: {\n            const updatedDeliveryStop = event.body as DeliveryStop;\n            Object.assign(deliveryRoute, updatedDeliveryStop);\n            this.snackBarService.closeSnackBar();\n            this.cdr.detectChanges();\n          }\n        }\n      },\n    });\n  }\n\n  getGoogleMapsUrl(address2: string, address3: string): SafeUrl {\n    const url = `https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(address2 + ' ' + address3)}`;\n\n    const sanitizedUrl = this.sanitizer.sanitize(SecurityContext.URL, url);\n    if (sanitizedUrl) {\n      return this.sanitizer.bypassSecurityTrustUrl(sanitizedUrl);\n    } else {\n      return '';\n    }\n  }\n\n  private calculateTimeDifferences(deliveryStops: DeliveryStop[]): DeliveryStop[] {\n    for (let i = deliveryStops.length - 1; i > 0; i--) {\n      const currentStop = deliveryStops[i];\n      const previousStop = deliveryStops[i - 1];\n\n      const currentTime = new Date(currentStop.plannedArrivalTime).getTime();\n      const previousTime = new Date(previousStop.plannedArrivalTime).getTime();\n\n      const timeDifferenceInMinutes = Math.round((currentTime - previousTime) / 60000);\n      currentStop.timeDifference = timeDifferenceInMinutes;\n    }\n\n    if (deliveryStops.length > 0) {\n      deliveryStops[0].timeDifference = undefined; // First row will have no time difference\n    }\n    return deliveryStops;\n  }\n}\n","<div class=\"container\">\n  <!-- Make the entire image-container clickable by wrapping in a link -->\n  <a [routerLink]=\"['/home']\" class=\"image-container\">\n    <img src=\"assets/logo.png\" alt=\"Company Logo\">\n  </a>\n\n  <h2 class=\"driver-routes-title\">Driver Routes</h2>\n\n  <div class=\"filters\">\n    <div class=\"driver-filter\">\n      <label for=\"driver-name\">Driver Name:</label>\n      <select id=\"driver-name\" #driverName (change)=\"refreshDeliverRoute(driverName.value, deliveryDate2.value)\">\n        <option *ngFor=\"let driverNames of (driverNames$ | async); let i = index\" [value]=\"driverNames.name\" [selected]=\"i === 0\">{{driverNames.name}}</option>\n      </select>\n    </div>\n\n    <div class=\"delivery-date-filter\">\n      <label for=\"delivery-date\">Delivery Date:</label>\n      <input type=\"text\" id=\"delivery-date\" #deliveryDate2 [value]=\"today\" readonly class=\"delivery-date-input\">\n    </div>\n  </div>\n\n  <table mat-table *ngIf=\"deliveryRoute$ | async as dataSource\" [dataSource]=\"dataSource\" class=\"mat-elevation-z8 driver-routes-grid\" matSort>\n    <!-- Customer Column -->\n    <ng-container matColumnDef=\"deliveryAddress1\">\n      <th mat-header-cell *matHeaderCellDef class=\"no-bottom-border\">Customer</th>\n      <td mat-cell *matCellDef=\"let element\" class=\"no-bottom-border\">\n        {{element.deliveryAddress1}}\n        <div *ngIf=\"element !== dataSource[dataSource.length - 1]\" class=\"arrow-container\">\n          <i class=\"fas fa-arrow-down\"></i>\n          <span class=\"time-difference-arrow\">+{{ dataSource[dataSource.indexOf(element) + 1].timeDifference + ' m' }}</span>\n        </div>\n      </td>\n    </ng-container>\n\n    <!-- Address Column (Concatenation of Delivery Address 2 and 3) -->\n    <ng-container matColumnDef=\"address\">\n      <th mat-header-cell *matHeaderCellDef>Address</th>\n      <td mat-cell *matCellDef=\"let element\" class=\"address-column\">\n        <a [href]=\"getGoogleMapsUrl(element.deliveryAddress2, element.deliveryAddress3)\" target=\"_blank\">\n          {{element.deliveryAddress2}} {{element.deliveryAddress3}}\n        </a>\n      </td>\n    </ng-container>\n\n    <!-- Customer Phone Column -->\n    <ng-container matColumnDef=\"customerPhone\">\n      <th mat-header-cell *matHeaderCellDef class=\"wrap\">Customer Phone</th>\n      <td mat-cell *matCellDef=\"let element\" class=\"customerPhone\"><a href=\"tel:+1{{element.customerPhone}} \"> {{element.customerPhone}}</a> </td>\n    </ng-container>\n\n    <!-- Actual Arrival Time Column -->\n    <ng-container matColumnDef=\"actualArrivalTime\">\n      <th mat-header-cell *matHeaderCellDef>Arrival</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <div *ngIf=\"!element.actualArrivalTime || !element.fileUrl; else alreadyArrivedBlock\" class=\"custom-file-input\">\n          <input type=\"file\" id=\"file\" #fileInput (change)=\"onFileSelected(element, $event)\" accept=\"image/*\" required hidden>\n          <button type=\"button\" class=\"button\" (click)=\"fileInput.click()\">Arrived</button>\n        </div>\n        <ng-template #alreadyArrivedBlock>\n          <div>\n            <app-image-thumbnail [imageUrl]=\"element.fileUrl\"\n              [title]=\"element.deliveryAddress2 + ' ' + element.deliveryAddress3 + ' (' + (element.actualArrivalTime | date: 'medium') + ')'\"></app-image-thumbnail>\n          </div>\n        </ng-template>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" [ngClass]=\"{'arrived-row': row.actualArrivalTime}\"></tr>\n  </table>\n</div>","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  standalone: true,\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n  imports: [CommonModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HomeComponent implements OnInit {\n  username!: string | null;\n\n  constructor(private router: Router, private authService: AuthService) {}\n\n  ngOnInit(): void {\n    this.username = this.authService.getFullname();\n  }\n\n  navigateTo(page: string): void {\n    this.router.navigate([`/${page}`]);\n  }\n\n  logout(): void {\n    this.authService.logout();\n  }\n}\n","<div class=\"page container\">\n  <div class=\"button-container\">\n    <button class=\"nav-button\" (click)=\"navigateTo('products')\">Products</button>\n    <button class=\"nav-button\" (click)=\"navigateTo('order-links')\">New Order</button>\n    <button class=\"nav-button\" (click)=\"navigateTo('orders')\">Existing Orders</button>\n    <button class=\"nav-button\" (click)=\"navigateTo('preorder-links')\">Preorders</button> <!-- New Button -->\n    <button class=\"nav-button\" (click)=\"navigateTo('driver')\">Routes</button>\n    <button class=\"nav-button logout-button\" (click)=\"logout()\">Logout</button>\n  </div>\n\n  <div class=\"button-container user-info\">\n    Welcome, {{ username }}!\n  </div>\n\n  <div class=\"image-grid\">\n    <img src=\"assets/goldenstateseafood.png\" alt=\"GS Image\" class=\"grid-image image1\">\n    <img src=\"assets/logo.png\" alt=\"Logo Image\" class=\"grid-image image2\">\n    <img src=\"assets/fogriver3.png\" alt=\"Fog River Image\" class=\"grid-image image3\">\n    <img src=\"assets/naturecure.png\" alt=\"Nature Cure Image\" class=\"grid-image image4\">\n  </div>\n</div>","import { ChangeDetectionStrategy, Component, Input, TemplateRef } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\n\n@Component({\n  standalone: true,\n  selector: 'app-image-thumbnail',\n  templateUrl: './image-thumbnail.component.html',\n  styleUrl: './image-thumbnail.component.css',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ImageThumbnailComponent {\n  @Input() imageUrl: string = '';\n  @Input() title: string | null = ' ';\n\n  modalRef!: BsModalRef;\n\n  constructor(private modalService: BsModalService) {}\n\n  openModal(template: string | TemplateRef<unknown>) {\n    this.modalRef = this.modalService.show(template, Object.assign({}, { class: 'modal-lg' }));\n  }\n}\n","<!-- eslint-disable @angular-eslint/template/click-events-have-key-events -->\n<!-- eslint-disable @angular-eslint/template/interactive-supports-focus -->\n<div (click)=\"openModal(imageModal)\">\n    <img [src]=\"imageUrl\" alt=\"Image Thumbnail\" title=\"Click to enlarge\" class=\"thumbnail\" (keyup)=\"modalRef.hide()\">\n</div>\n\n<ng-template #imageModal>\n    <div class=\" modal-header\">\n        <h4 class=\"modal-title\">{{title}}</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body text-center\">\n        <img [src]=\"imageUrl\" alt=\"Full Image\" class=\"full-image\" (click)=\"modalRef.hide()\" (keyup)=\"modalRef.hide()\">\n    </div>\n</ng-template>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\nimport { Router, RouterModule } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { catchError, throwError } from 'rxjs';\nimport { LoginResponse } from 'src/app/models/login-response.model ';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  standalone: true,\n  imports: [CommonModule, MatFormFieldModule, MatInputModule, MatButtonModule, ReactiveFormsModule, RouterModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoginComponent {\n  loginForm: FormGroup;\n  loading = false;\n  errorMessage: string | null = null;\n\n  constructor(private router: Router, private cdr: ChangeDetectorRef, private formBuilder: FormBuilder, private authService: AuthService) {\n    this.loginForm = this.formBuilder.group({\n      username: ['', [Validators.required]],\n      password: ['', Validators.required],\n    });\n  }\n\n  onLogin() {\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    this.errorMessage = null;\n    const { username, password } = this.loginForm.value;\n\n    this.authService\n      .login(username, password)\n      .pipe(\n        catchError((loginError) => {\n          const errorCode = loginError.status;\n          let errorMessage = loginError.error?.message || 'Please check your username and password';\n          if (errorCode == 401) {\n            errorMessage = 'Please check your username and password';\n          }\n          this.loading = false;\n          this.errorMessage = `Login failed. ${errorMessage}.`;\n          this.cdr.markForCheck();\n\n          // Rethrow the error for the global error handler\n          return throwError(() => loginError);\n        }),\n      )\n      .subscribe({\n        next: (loginResponse: LoginResponse) => {\n          const fullname = `${loginResponse.firstName ?? ''} ${loginResponse.lastName ?? ''}`.trim();\n          this.authService.saveFullnameAndToken(fullname, loginResponse.token);\n          this.router.navigate(['/products']);\n        },\n      });\n  }\n}\n","<div class=\"container\">\n    <div class=\"login-container\">\n        <div class=\"logo-container\">\n            <img src=\"assets/logo.png\" alt=\"Company Logo\" class=\"logo\">\n        </div>\n\n        <h1>Login</h1>\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin()\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Username</mat-label>\n                <input matInput type=\"text\" formControlName=\"username\" placeholder=\"Enter your username\" autocomplete=\"username\">\n            </mat-form-field>\n\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Password</mat-label>\n                <input matInput type=\"password\" formControlName=\"password\" placeholder=\"Enter your password\" autocomplete=\"current-password\">\n            </mat-form-field>\n\n            <a [routerLink]=\"['/password-request']\">\n                Forgot password?\n            </a>\n\n            <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"loading || loginForm.invalid\">\n                <span *ngIf=\"!loading\">Login</span>\n                <span *ngIf=\"loading\">Logging in...</span>\n            </button>\n        </form>\n\n        <div *ngIf=\"errorMessage\" class=\"error-message\">\n            {{ errorMessage }}\n        </div>\n    </div>\n</div>","import { CommonModule } from '@angular/common';\nimport { Component, Input, OnChanges } from '@angular/core';\nimport { Router, RouterLink, RouterModule } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-logo',\n  standalone: true,\n  imports: [CommonModule, RouterModule],\n  templateUrl: './logo.component.html',\n  styleUrls: ['./logo.component.css'],\n})\nexport class LogoComponent implements OnChanges {\n  @Input() companyId!: number;\n\n  imageSrc = 'assets/fogriver.png';\n  imageBackgroundColor = '#000000';\n  isLoggedIn: boolean = false;\n\n  constructor(private authService: AuthService) {\n    this.isLoggedIn = authService.isLoggedIn();\n  }\n\n  ngOnChanges(): void {\n    if (this.companyId === 14) {\n      this.imageSrc = 'assets/fogriver.png';\n      this.imageBackgroundColor = '#000000'; // Black background\n    } else {\n      this.imageSrc = 'assets/logo.png';\n      this.imageBackgroundColor = 'rgba(0, 16, 46, 1)'; // Dark blue background\n    }\n  }\n}\n","@if(isLoggedIn)\n{\n<a [routerLink]=\"['/home']\">\n    <div *ngIf=\"companyId\" class=\"image-container\" [ngStyle]=\"{'background-color': imageBackgroundColor}\">\n        <img [src]=\"imageSrc\" alt=\"Company Logo\">\n    </div>\n</a>\n} @else {\n<div *ngIf=\"companyId\" class=\"image-container\" [ngStyle]=\"{'background-color': imageBackgroundColor}\">\n    <img [src]=\"imageSrc\" alt=\"Company Logo\">\n</div>\n}","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n})\nexport class LogoutComponent {\n  constructor(private authService: AuthService) {\n    this.authService.logout();\n  }\n}\n","<br /><br /><br />\n\n<h1 style=\"padding-left: 200px;\">You have been logged out.</h1>\n\n<br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Location, CommonModule } from '@angular/common';\nimport { LogoComponent } from '../logo/logo.component';\nimport { OrderConfirmation } from 'src/app/models/order-confirmation.model';\n\n@Component({\n  standalone: true,\n  selector: 'app-order-confirmation',\n  templateUrl: './order-confirmation.component.html',\n  styleUrls: ['./order-confirmation.component.css'],\n  imports: [CommonModule, LogoComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationComponent implements OnInit {\n  orderData!: OrderConfirmation;\n  companyId!: number;\n\n  constructor(private router: Router, private location: Location) {}\n\n  ngOnInit(): void {\n    this.orderData = history.state['order']; // Access the passed data here'\n    this.companyId = history.state['companyId'];\n  }\n\n  goBack(): void {\n    this.router.navigate([`/customer/${this.orderData.customerId}/order-form`]);\n  }\n}\n","<div class=\"container\">\n \n    <app-logo [companyId]=\"companyId\"></app-logo>\n  \n  <h2>Hello {{ orderData.customerName }},</h2>\n  <p>Thank you for your order. Here are the details of your order:</p>\n  <br>\n  <table class=\"order-grid\" id=\"order-grid\">\n    <thead>\n      <tr>\n        <th>Description</th>\n        <th>Unit Type</th>\n        <th>Pack Size</th>\n        <th>Price</th>\n        <th>Qty</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let product of orderData.profiles\">\n        <td>{{ product.profileDescription }}</td>\n        <td>{{ product.unitType }}</td>\n        <td>{{ product.packSize }}</td>\n        <td class=\"price\">{{ product.salesPrice | number:'1.2-2' }}</td>\n        <td>{{ product.quantity }}</td>\n      </tr>\n    </tbody>\n  </table>\n\n  <div>\n    <div class=\"total\"><strong>Total: </strong>\n      <span id=\"total-amount\">{{ orderData.totalPrice| currency:'USD':true }}</span>\n    </div>\n  </div>\n\n  <div>\n    <p>Delivery date: {{orderData.deliveryDate | date: 'MM/dd/yyyy'}}</p>\n  </div>\n  <div *ngIf=\"orderData.shipToId\">\n    <p>Delivery location: {{orderData.shipToName}}</p>\n  </div>\n\n\n  <p>Thank you,<br>Your Sales Team</p>\n  <button class=\"button\" (click)=\"goBack()\">Back</button>\n</div>\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { CommonModule } from '@angular/common';\nimport { Order } from 'src/app/models/order.model';\n\n@Component({\n  standalone: true,\n  selector: 'app-order-details-dialog',\n  templateUrl: './order-details-dialog.component.html',\n  styleUrls: ['./order-details-dialog.component.css'],\n  imports: [CommonModule, MatDialogModule, MatButtonModule],\n})\nexport class OrderDetailsDialogComponent {\n  constructor(@Inject(MAT_DIALOG_DATA) public order: Order, private dialogRef: MatDialogRef<OrderDetailsDialogComponent>) {}\n\n  closeDialog(): void {\n    this.dialogRef.close();\n  }\n}\n","<h2 mat-dialog-title>Order Details</h2>\n<mat-dialog-content>\n  <p><strong>Customer Name:</strong> {{ order.customerName }}</p>\n  <p><strong>Order Date:</strong> {{ order.deliveryDate | date }}</p>\n  <p><strong>Customer PO:</strong> {{ order.customerPo }}</p>\n  <p><strong>Sales Rep:</strong> {{ order.salesRepName }}</p>\n  <p><strong>Ship To:</strong> {{ order.shipToName }}</p>\n  <p><strong>Total Price:</strong> {{ order.totalPrice | currency }}</p>\n\n  <!-- Profiles section -->\n  <h3>Profiles</h3>\n  <table class=\"profile-table\">\n    <thead>\n      <tr>\n        <th>ID</th>\n        <th class=\"description-column\">Description</th>\n        <th>Unit Type</th>\n        <th>Pack Size</th>\n        <th>Quantity</th>\n        <th>Sales Price</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let profile of order.profiles\">\n        <td>{{ profile.id }}</td>\n        <td class=\"description-column\">{{ profile.profileDescription }}</td>\n        <td>{{ profile.unitType }}</td>\n        <td>{{ profile.packSize }}</td>\n        <td>{{ profile.quantity }}</td>\n        <td>{{ profile.salesPrice | currency }}</td>\n      </tr>\n    </tbody>\n  </table>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-button mat-dialog-close>Close</button>\n</mat-dialog-actions>","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { LogoComponent } from '../logo/logo.component';\nimport { OrderConfirmation } from 'src/app/models/order-confirmation.model';\n\n@Component({\n  standalone: true,\n  selector: 'app-order-exists',\n  templateUrl: './order-exists.component.html',\n  styleUrls: ['./order-exists.component.css'],\n  imports: [CommonModule, LogoComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderExistsComponent implements OnInit {\n  orderData!: OrderConfirmation;\n  companyId!: number;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.orderData = history.state['order']; // Access the passed data here\n    this.companyId = history.state['companyId'];\n  }\n\n  goBack(): void {\n    window.history.back();\n  }\n}\n","<div class=\"container\">\n  <app-logo [companyId]=\"companyId\"></app-logo>\n\n  <h2>Existing Order</h2>\n  <div class=\"error-message\" style=\"color: red;\">\n    We already have an order for you placed on this delivery date. If you would like it changed please contact your sales rep.\n  </div>\n  <br>\n  <table class=\"order-grid\" id=\"order-grid\">\n    <thead>\n      <tr>\n        <th>Product Description</th>\n        <th>Unit Type</th>\n        <th>Pack Size</th>\n        <th>Price</th>\n        <th>Qty</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let profile of orderData.profiles\">\n        <td>{{ profile.profileDescription }}</td>\n        <td>{{ profile.unitType }}</td>\n        <td>{{ profile.packSize }}</td>\n        <td class=\"price\">{{ profile.salesPrice| currency:'USD':true }}</td>\n        <td>{{ profile.quantity }}</td>\n      </tr>\n    </tbody>\n  </table>\n\n  <div>\n    <div class=\"total\"><strong>Total: </strong>\n      <span id=\"total-amount\">{{ orderData.totalPrice| currency:'USD':true }}</span>\n    </div>\n  </div>\n\n  <div>\n    <p>Sales rep: {{orderData.salesRepName}}</p>\n  </div>\n  <div>\n    <p>Delivery date: {{orderData.deliveryDate | date: 'MM/dd/yyyy'}}</p>\n  </div>\n  <div *ngIf=\"orderData.shipToId\">\n    <p>Delivery location: {{orderData.shipToName}}</p>\n  </div>\n\n\n\n  <button class=\"button\" (click)=\"goBack()\">Back</button>\n</div>","import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormGroup, ReactiveFormsModule, ValidationErrors, Validators } from '@angular/forms';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LogoComponent } from '../logo/logo.component';\nimport { Order } from 'src/app/models/order.model';\nimport { OrderRequest } from 'src/app/models/order-request.model';\nimport { ProfileRequest } from 'src/app/models/profile-request.model';\nimport { OrderFormService } from 'src/app/services/order-form.service';\nimport { Profile } from 'src/app/models/profile.model';\nimport { ParamMap } from '@angular/router';\n\n@Component({\n  standalone: true,\n  selector: 'app-order-form',\n  templateUrl: './order-form.component.html',\n  styleUrls: ['./order-form.component.css'],\n  imports: [CommonModule, ReactiveFormsModule, LogoComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderFormComponent implements OnInit {\n  order!: Order;\n  hasSpecials = false;\n  orderForm!: FormGroup;\n  submitted: boolean = false;\n  customerId!: number;\n\n  // New properties for modal functionality\n  showModal = false;\n  currentOrderItems: any[] = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private snackBarService: SnackbarService,\n    private orderService: OrderFormService,\n    private route: ActivatedRoute,\n    private cdr: ChangeDetectorRef,\n  ) {}\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params: ParamMap) => {\n      const id = params.get('id');\n      this.customerId = id ? +id : NaN;\n      this.loadOrderData(this.customerId);\n    });\n  }\n\n  loadOrderData(customerId: number): void {\n    this.orderService.getOrderData(customerId).subscribe({\n      next: (order: Order) => {\n        order.profiles.sort((a, b) => a.profileDescription.localeCompare(b.profileDescription));\n        this.order = order;\n        this.hasSpecials = this.order.profiles.some((profile) => profile.isSpecial);\n        const shipToValidators = order.shipTos?.length ? [Validators.required] : [];\n\n        this.orderForm = this.fb.group({\n          customerId: [order.customerId],\n          deliveryDate: ['', [Validators.required, this.dateAfterTomorrowValidator, this.dateWithinThreeMonthsValidator, this.dateNotOnSundayValidator]],\n          shipToId: ['', shipToValidators],\n          customerPo: [''],\n          totalPrice: [0],\n          profiles: this.fb.array(\n            this.order.profiles.map((profile) => this.createProfileGroup(profile)),\n            [this.atLeastOneQuantityValidator],\n          ),\n        });\n        this.cdr.markForCheck();\n      },\n    });\n  }\n\n  get formControls() {\n    return this.orderForm.controls;\n  }\n\n  get profileControls(): FormArray {\n    return this.orderForm.get('profiles') as FormArray;\n  }\n\n  get totalPrice(): number {\n    let totalPrice = 0;\n    for (let i = 0; i < this.order.profiles.length; i++) {\n      const quantity = this.profileControls.at(i).get('quantity')?.value || 0;\n      const packSize = this.order.profiles[i].packSize || 0;\n      const price = this.order.profiles[i].salesPrice || 0;\n      totalPrice += quantity * packSize * price;\n    }\n    return totalPrice;\n  }\n\n  getRowTotalPrice(index: number): number {\n    const quantity = this.profileControls.at(index).get('quantity')?.value || 0;\n    const packSize = this.order.profiles[index].packSize || 0;\n    const price = this.order.profiles[index].salesPrice || 0;\n    return quantity * packSize * price;\n  }\n\n  createProfileGroup(profile: Profile): FormGroup {\n    return this.fb.group({\n      profileDid: [profile.id],\n      quantity: ['', Validators.min(1)],\n    });\n  }\n\n  onSubmit() {\n    this.snackBarService.showSnackBar('Submitting Order...');\n\n    if (this.orderForm.valid) {\n      const order: OrderRequest = this.orderForm.value;\n\n      // Remove profiles with a quantity of 0 and set total price\n      order.profiles = order.profiles.filter((profile: ProfileRequest) => profile.quantity > 0);\n      order.totalPrice = this.totalPrice;\n\n      // Set shipToId to an empty string if it's not set\n      if (!order.shipToId) {\n        order.shipToId = ''; // Ensures \"\" is submitted instead of 0 or null\n      }\n\n      this.orderService.placeOrder(this.customerId, order).subscribe({\n        next: (orderConfirmation) => {\n          this.router.navigate(['/customer', this.customerId, 'order-confirmation'], {\n            state: { order: orderConfirmation, companyId: this.order.companyId },\n          });\n          this.snackBarService.showSnackBar('Order submitted successfully');\n        },\n        error: (error) => {\n          const errorCode = error.status;\n          const errorMessage = errorCode == 409 ? 'An order already exists for that day' : 'Error submitting order';\n          if (errorCode == 409) {\n            this.router.navigate(['/customer', this.customerId, 'order-exists'], {\n              state: { order: error.error, companyId: this.order.companyId },\n            });\n          }\n          this.snackBarService.showSnackBar(errorMessage);\n\n          console.error('Error submitting order', error);\n        },\n      });\n\n      this.submitted = true;\n    } else {\n      this.orderForm.markAllAsTouched();\n    }\n  }\n\n  isQuantityEntered(index: number): boolean {\n    const quantity = this.profileControls.at(index).get('quantity')?.value;\n    return typeof quantity === 'number' && quantity > 0;\n  }\n\n  showCurrentOrder() {\n    this.currentOrderItems = this.order.profiles\n      .map((profile, index) => ({\n        ...profile,\n        quantity: this.profileControls.at(index).get('quantity')?.value,\n        totalPrice: (this.profileControls.at(index).get('quantity')?.value || 0) * (profile.packSize || 0) * (profile.salesPrice || 0),\n      }))\n      .filter((item) => item.quantity > 0);\n    this.showModal = true;\n    this.cdr.markForCheck();\n    console.error(this.currentOrderItems);\n  }\n\n  // New method to close the modal\n  closeModal() {\n    this.showModal = false;\n  }\n\n  dateAfterTomorrowValidator(control: AbstractControl): ValidationErrors | null {\n    const dateValue = new Date(control.value);\n    const now = new Date();\n    const twoAmToday = new Date(now.getFullYear(), now.getMonth(), now.getDate(), 2, 0, 0);\n\n    // Check if the date is valid and after 2 AM of today\n    if (!isNaN(dateValue.getTime()) && dateValue < twoAmToday) {\n      return { dateAfterTomorrow: true }; // Return error key if date is invalid\n    }\n    return null; // Return null if date is valid\n  }\n\n  atLeastOneQuantityValidator(control: AbstractControl): ValidationErrors | null {\n    const formArray = control as FormArray;\n    const hasAtLeastOneQuantity = formArray.controls.some((group) => group.get('quantity')?.value > 0);\n    return hasAtLeastOneQuantity ? null : { atLeastOneQuantity: true };\n  }\n\n  dateWithinThreeMonthsValidator(control: AbstractControl): ValidationErrors | null {\n    const dateValue = new Date(control.value);\n    const now = new Date();\n    const threeMonthsFromNow = new Date(now.getFullYear(), now.getMonth() + 3, now.getDate());\n\n    // Check if the date is within three months\n    if (!isNaN(dateValue.getTime()) && dateValue > threeMonthsFromNow) {\n      return { dateWithinThreeMonths: true }; // Return error key if date is out of range\n    }\n    return null; // Return null if date is valid\n  }\n\n  dateNotOnSundayValidator(control: AbstractControl): ValidationErrors | null {\n    if (!control.value) {\n      return null; // If there's no date, validation passes\n    }\n\n    const dateValue = new Date(control.value);\n\n    // Check if the parsed date is valid and if it's a Sunday\n    if (!isNaN(dateValue.getTime()) && dateValue.getUTCDay() === 0) {\n      return { dateNotOnSunday: true }; // Trigger error if Sunday\n    }\n\n    return null; // Otherwise, validation passes\n  }\n}\n","<form *ngIf=\"order\" [formGroup]=\"orderForm\" (ngSubmit)=\"onSubmit()\" class=\"order-form\">\n  <div class=\"container\">\n    <app-logo [companyId]=\"order.companyId\"></app-logo>\n    <h2 class=\"page-title\">Order Form</h2>\n\n    <div *ngIf=\"order.customerName && order.salesRepName\" class=\"customer-sales-info\">\n      <p><strong>Customer:</strong> <br>{{ order.customerName }}</p>\n      <div class=\"sales-rep-info\">\n        <strong>Sales Rep:</strong> <br>{{ order.salesRepName }}\n        <br><a [href]=\"'tel:' + order.salesRepPhone\">{{ order.salesRepPhone }}</a>\n      </div>\n    </div>\n\n    <div *ngIf=\"order.shipTos\" class=\"shipto-dropdown\">\n      <label for=\"ship-to\"><strong>Ship to:</strong></label>\n      <select id=\"ship-to\" formControlName=\"shipToId\" class=\"input-select\">\n        <option *ngFor=\"let shipTo of order.shipTos\" [value]=\"shipTo.id\">{{ shipTo.shipToName }}</option>\n      </select>\n      <div *ngIf=\"orderForm.get('shipToId')?.touched && orderForm.get('shipToId')?.errors?.['required']\" class=\"error\">\n        Ship to is required.\n      </div>\n    </div>\n\n    <div *ngIf=\"hasSpecials\">\n      <h3 class=\"section-title\">Specials</h3>\n      <div formArrayName=\"profiles\" class=\"profiles\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th>Description</th>\n              <th>Qty</th>\n              <th>Unit Type</th>\n              <th>Pack Size</th>\n              <th>Price</th>\n              <th>Total</th>\n            </tr>\n          </thead>\n          <tbody>\n            <ng-container *ngFor=\"let profile of profileControls.controls; let i = index\">\n              <tr *ngIf=\"order.profiles[i].isSpecial\" [formGroupName]=\"i\" [ngStyle]=\"{'background-color': isQuantityEntered(i) ? 'whitesmoke': 'white'}\">\n                <input type=\"hidden\" formControlName=\"profileDid\" class=\"input-text hidden-column\">\n                <td>{{ order.profiles[i].profileDescription }}</td>\n                <td>\n                  <input type=\"number\" formControlName=\"quantity\" class=\"input-number\">\n                  <div *ngIf=\"profile.get('quantity')?.errors?.['min']\" class=\"error\">The number must be greater than zero.</div>\n                </td>\n                <td>{{ order.profiles[i].unitType }}</td>\n                <td>{{ order.profiles[i].packSize }}</td>\n                <td>{{ order.profiles[i].salesPrice | currency:'USD':'symbol':'1.2-2'}}</td>\n                <td>{{ getRowTotalPrice(i) | currency:'USD':'symbol':'1.2-2' }}</td>\n              </tr>\n            </ng-container>\n          </tbody>\n        </table>\n      </div>\n    </div>\n\n    <h3 class=\"section-title\">Products</h3>\n    <div formArrayName=\"profiles\" class=\"profiles\">\n      <table class=\"table\">\n        <thead>\n          <tr>\n            <th>Description</th>\n            <th>Qty</th>\n            <th>Unit Type</th>\n            <th>Pack Size</th>\n            <th>Price</th>\n            <th>Total</th>\n          </tr>\n        </thead>\n        <tbody>\n          <ng-container *ngFor=\"let profile of profileControls.controls; let i = index\">\n            <tr *ngIf=\"!order.profiles[i].isSpecial\" [formGroupName]=\"i\" [ngStyle]=\"{'background-color': isQuantityEntered(i) ? 'whitesmoke': 'white'}\">\n              <td>\n                <input type=\"text\" type=\"hidden\" formControlName=\"profileDid\">\n                {{ order.profiles[i].profileDescription }}\n              </td>\n              <td>\n                <input type=\"number\" formControlName=\"quantity\" class=\"input-number\">\n                <div *ngIf=\"profile.get('quantity')?.errors?.['min']\" class=\"error\">The number must be greater than zero.</div>\n              </td>\n              <td>{{ order.profiles[i].unitType }}</td>\n              <td>{{ order.profiles[i].packSize }}</td>\n              <td>{{ order.profiles[i].salesPrice | currency:'USD':'symbol':'1.2-2'}}</td>\n              <td>{{ getRowTotalPrice(i) | currency:'USD':'symbol':'1.2-2' }}</td>\n            </tr>\n          </ng-container>\n        </tbody>\n      </table>\n      <div *ngIf=\"submitted && orderForm.get('profiles')?.hasError('atLeastOneQuantity')\" class=\"error\">\n        At least one quantity is required.\n      </div>\n    </div>\n\n    <div *ngIf=\"profileControls.touched && profileControls.errors?.['atLeastOneQuantity']\" class=\"error\">\n      Enter at least one quantity.\n    </div>\n\n    <div class=\"total-price\">\n      <br>Total price: {{totalPrice | currency:'USD':'symbol':'1.2-2'}}\n      <div *ngIf=\"totalPrice > 10000\" class=\"error\">The total has to be less than $10,000.</div>\n    </div>\n\n    <!-- Current Order Button -->\n    <button type=\"button\" (click)=\"showCurrentOrder()\" class=\"current-order-btn\">Current Order</button>\n\n    <div>\n      <label for=\"customer-po\"><strong>Customer PO: </strong></label>\n      <input id=\"customer-po\" formControlName=\"customerPo\" type=\"text\" class=\"customer-po\">\n    </div>\n\n    <div class=\"delivery-date\">\n      <label for=\"delivery-date\"><strong>Delivery Date:</strong></label>\n      <input id=\"delivery-date\" formControlName=\"deliveryDate\" type=\"date\" class=\"input-date\">\n      <div *ngIf=\"formControls['deliveryDate'].touched && formControls['deliveryDate'].errors?.['required']\" class=\"error\">\n        Delivery date is required.\n      </div>\n      <div *ngIf=\"formControls['deliveryDate'].dirty && formControls['deliveryDate'].errors?.['dateAfterTomorrow']\" class=\"error\">\n        Delivery date cannot be in the past or after 2am of today's date.\n      </div>\n      <div *ngIf=\"formControls['deliveryDate'].dirty && formControls['deliveryDate'].errors?.['dateWithinThreeMonths']\" class=\"error\">\n        Delivery date must be within 3 months.\n      </div>\n      <div *ngIf=\"formControls['deliveryDate'].dirty && formControls['deliveryDate'].errors?.['dateNotOnSunday']\" class=\"error\">\n        Delivery date cannot be on Sunday.\n      </div>\n    </div>\n\n    <!-- Pop-up Modal for Current Order -->\n    <div *ngIf=\"showModal\" class=\"modal\">\n      <div class=\"modal-content\">\n        <span class=\"close\" (click)=\"closeModal()\">&times;</span>\n        <h3>Current Order</h3>\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th>Description</th>\n              <th>Qty</th>\n              <th>Unit Type</th>\n              <th>Pack Size</th>\n              <th>Price</th>\n              <th>Total</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let item of currentOrderItems\">\n              <td>{{ item.profileDescription }}</td>\n              <td>{{ item.quantity }}</td>\n              <td>{{ item.unitType }}</td>\n              <td>{{ item.packSize }}</td>\n              <td>{{ item.salesPrice | currency:'USD':'symbol':'1.2-2' }}</td>\n              <td>{{ item.totalPrice | currency:'USD':'symbol':'1.2-2' }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n\n    <br><button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"!orderForm.valid\" class=\"submit-btn\">Submit</button>\n  </div>\n</form>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { Observable, switchMap, tap } from 'rxjs';\nimport { FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { Company } from 'src/app/models/company.model';\nimport { Customer } from 'src/app/models/customer.model';\nimport { SalesRep } from 'src/app/models/sales-rep.model';\nimport { OrderLinksService } from 'src/app/services/order-links.service';\nimport { CommonModule } from '@angular/common';\nimport { LogoComponent } from '../logo/logo.component';\n\n@Component({\n  standalone: true,\n  selector: 'app-order-links',\n  templateUrl: './order-links.component.html',\n  styleUrls: ['./order-links.component.css'],\n  imports: [CommonModule, ReactiveFormsModule, RouterModule, LogoComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderLinksComponent implements OnInit {\n  form!: FormGroup;\n  companies$!: Observable<Company[]>;\n  salesPersons$!: Observable<SalesRep[]>;\n  customers: Customer[] = [];\n  filteredCustomers: Customer[] = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private cdr: ChangeDetectorRef,\n    private snackbarService: SnackbarService,\n    private orderLinksService: OrderLinksService,\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      company: [],\n      salesPerson: [],\n      searchText: '',\n    });\n\n    // Load companies and set default to 'PFF'\n    this.companies$ = this.orderLinksService.getCompanies().pipe(\n      tap((companies) => {\n        const defaultCompany = companies.find((company) => company.name === 'PFF');\n        if (defaultCompany) {\n          this.form.get('company')!.setValue(defaultCompany);\n        }\n      }),\n    );\n\n    // Load salespersons based on selected company\n    this.form\n      .get('company')!\n      .valueChanges.pipe(\n        switchMap((company) =>\n          this.orderLinksService.getSalesPersons(company.id).pipe(\n            tap((salesreps) => {\n              salesreps.sort((a, b) => a.name.localeCompare(b.name));\n              this.salesPersons$ = new Observable<SalesRep[]>((observer) => {\n                observer.next(salesreps);\n                observer.complete();\n              });\n              if (salesreps.length > 0) {\n                this.form.get('salesPerson')!.setValue(salesreps[0]);\n              }\n            }),\n          ),\n        ),\n      )\n      .subscribe();\n\n    // Load customers based on selected salesperson\n    this.form\n      .get('salesPerson')!\n      .valueChanges.pipe(\n        switchMap((salesrep) => {\n          const company = this.form.get('company')!.value;\n          return this.orderLinksService.getCustomers(company.id, salesrep.name);\n        }),\n      )\n      .subscribe({\n        next: (customers) => {\n          this.customers = [...customers];\n          this.customers.sort((a, b) => a.name.localeCompare(b.name));\n          this.filteredCustomers = [...this.customers];\n          this.cdr.markForCheck();\n        },\n      });\n\n    // Apply search filter on customer names\n    this.form.get('searchText')!.valueChanges.subscribe((searchText: string) => {\n      this.filteredCustomers = this.customers.filter((customer) => customer.name.toLowerCase().includes(searchText.toLowerCase()));\n    });\n  }\n\n  // Generate Order Link\n  generateLink(customerId: number): string {\n    const baseUrl = window.location.href.replace('/order-links', '');\n    return `${baseUrl}/customer/${customerId}/order-form`;\n  }\n\n  // Copy Order Link to Clipboard\n  copyLink(customerId: number): void {\n    const link = this.generateLink(customerId);\n    navigator.clipboard\n      .writeText(link)\n      .then(() => {\n        this.snackbarService.showSnackBar('Link copied to clipboard!');\n      })\n      .catch((err) => {\n        console.error('Failed to copy link: ', err);\n      });\n  }\n}\n","<form [formGroup]=\"form\">\n  <div class=\"container\">\n    <!-- Logo Component with Navigation -->\n    <a [routerLink]=\"['/home']\">\n      <app-logo [companyId]=\"form.get('company')?.value?.id\"></app-logo>\n    </a>\n\n    <h2 class=\"underlined\">Customers</h2>\n\n    <!-- Filters Section -->\n    <div class=\"filters\">\n      <!-- Company Filter -->\n      <div class=\"filter-group\">\n        <label for=\"company-filter\" class=\"filter-label\">Company:</label>\n        <select id=\"company-filter\" formControlName=\"company\">\n          <option *ngFor=\"let company of companies$ | async\" [ngValue]=\"company\">{{ company.name }}</option>\n        </select>\n      </div>\n\n      <!-- Sales Rep Filter -->\n      <div class=\"filter-group\">\n        <label for=\"salesname-filter\" class=\"filter-label\">Sales Rep:</label>\n        <select id=\"salesname-filter\" formControlName=\"salesPerson\">\n          <option *ngFor=\"let salesperson of salesPersons$ | async\" [ngValue]=\"salesperson\">{{ salesperson.name }}</option>\n        </select>\n      </div>\n\n      <!-- Customer Search Filter -->\n      <div class=\"filter-group\">\n        <label for=\"customer-search\" class=\"filter-label\">Customer:</label>\n        <input type=\"text\" id=\"customer-search\" placeholder=\"Search Customers\" formControlName=\"searchText\" />\n      </div>\n    </div>\n\n    <!-- Order Grid Table -->\n    <table class=\"order-grid\">\n      <thead>\n        <tr>\n          <th>Customer Name</th>\n          <th>Order Form</th>\n          <th>Copy Link</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let customer of filteredCustomers;\">\n          <td>{{ customer.name }}</td>\n          <td>\n            <a [routerLink]=\"['/customer', customer.id, 'order-form']\">Order Form</a>\n          </td>\n          <td>\n            <a href=\"javascript:void(0)\" (click)=\"copyLink(customer.id)\" (keyup)=\"copyLink(customer.id)\">Copy Link</a>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</form>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { Observable, switchMap, tap } from 'rxjs';\nimport { FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { Company } from 'src/app/models/company.model';\nimport { SalesRep } from 'src/app/models/sales-rep.model';\nimport { CommonModule } from '@angular/common';\nimport { LogoComponent } from '../logo/logo.component';\nimport { OrderDetailsDialogComponent } from 'src/app/components/order-details-dialog/order-details-dialog.component';\nimport { OrderService } from 'src/app/services/order.services';\nimport { Order } from 'src/app/models/order.model';\n\n@Component({\n  standalone: true,\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css'],\n  imports: [CommonModule, ReactiveFormsModule, RouterModule, LogoComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrdersComponent implements OnInit {\n  form!: FormGroup;\n  companies$!: Observable<Company[]>;\n  salesPersons$!: Observable<SalesRep[]>;\n  orders: Order[] = [];\n  filteredOrders: Order[] = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private cdr: ChangeDetectorRef,\n    private snackbarService: SnackbarService,\n    private orderService: OrderService,\n    private dialog: MatDialog,\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      company: [],\n      salesPerson: [],\n      customerName: [''],\n    });\n\n    this.loadCompanies();\n    this.setupSalesPersonListener();\n    this.setupOrdersListener();\n    this.setupCustomerNameFilterListener();\n  }\n\n  private loadCompanies(): void {\n    this.companies$ = this.orderService.loadCompanies().pipe(\n      tap((companies) => {\n        if (companies && companies.length > 0) {\n          this.form.get('company')!.setValue(companies[0]);\n        }\n      }),\n    );\n  }\n\n  private setupSalesPersonListener(): void {\n    this.form\n      .get('company')!\n      .valueChanges.pipe(\n        switchMap((company: Company) => {\n          return this.orderService.loadSalesRep(company.id);\n        }),\n        tap((salesreps) => {\n          this.salesPersons$ = new Observable<SalesRep[]>((observer) => {\n            observer.next(salesreps);\n            observer.complete();\n          });\n\n          if (salesreps && salesreps.length > 0) {\n            this.form.get('salesPerson')!.setValue(salesreps[0]);\n          }\n\n          this.loadOrders();\n        }),\n      )\n      .subscribe({\n        error: (error) => {\n          console.error('Failed to load sales reps:', error);\n          this.snackbarService.showSnackBar('Failed to load sales reps.');\n        },\n      });\n  }\n\n  private setupOrdersListener(): void {\n    this.form.get('salesPerson')!.valueChanges.subscribe(() => {\n      this.loadOrders();\n    });\n  }\n\n  private loadOrders(): void {\n    const company = this.form.get('company')!.value;\n    const salesrep = this.form.get('salesPerson')!.value;\n\n    if (!company || !salesrep) {\n      return;\n    }\n    this.orderService.loadOrders(company.id, salesrep.name, 72).subscribe({\n      next: (orders) => {\n        this.orders = orders;\n        this.applyFilters();\n      },\n      error: (error) => {\n        console.error('Failed to load orders:', error);\n        this.snackbarService.showSnackBar('Failed to load orders.');\n      },\n    });\n  }\n\n  private setupCustomerNameFilterListener(): void {\n    this.form.get('customerName')!.valueChanges.subscribe(() => this.applyFilters());\n  }\n\n  private applyFilters(): void {\n    const customerName = this.form.get('customerName')!.value?.toLowerCase() || '';\n    this.filteredOrders = this.orders.filter((order) => order.customerName.toLowerCase().includes(customerName));\n    this.cdr.markForCheck();\n  }\n\n  onRowClick(order: Order): void {\n    this.dialog.open(OrderDetailsDialogComponent, {\n      data: order,\n      width: '800px',\n    });\n  }\n}\n","<form [formGroup]=\"form\">\n  <div class=\"container\">\n    <!-- Logo Component with Navigation -->\n    <a [routerLink]=\"['/home']\">\n      <app-logo [companyId]=\"form.get('company')?.value?.id\"></app-logo>\n    </a>\n\n    <h2 class=\"page-title\">Existing Orders</h2>\n\n    <!-- Filters Section -->\n    <div class=\"filters\">\n      <!-- Company Filter -->\n      <div class=\"filter-group\">\n        <label for=\"company-filter\" class=\"filter-label\">Company:</label>\n        <select id=\"company-filter\" formControlName=\"company\">\n          <option *ngFor=\"let company of companies$ | async\" [ngValue]=\"company\">{{ company.name }}</option>\n        </select>\n      </div>\n\n      <!-- Sales Rep Filter -->\n      <div class=\"filter-group\">\n        <label for=\"salesname-filter\" class=\"filter-label\">Sales Rep:</label>\n        <select id=\"salesname-filter\" formControlName=\"salesPerson\">\n          <option *ngFor=\"let salesperson of salesPersons$ | async\" [ngValue]=\"salesperson\">{{ salesperson.name }}</option>\n        </select>\n      </div>\n\n      <!-- Customer Name Filter -->\n      <div class=\"filter-group\">\n        <label for=\"customer-filter\" class=\"filter-label\">Customer Name:</label>\n        <input\n          id=\"customer-filter\"\n          type=\"text\"\n          formControlName=\"customerName\"\n          placeholder=\"Search Customer Name\"\n        />\n      </div>\n    </div>\n\n    <!-- Orders Table -->\n    <table class=\"order-grid\">\n      <thead>\n        <tr>\n          <th>Order ID</th>\n          <th>Delivery Date</th>\n          <th>Customer Name</th>\n          <th>Ship To</th>\n          <th>Total Price</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let item of filteredOrders\" (click)=\"onRowClick(item)\" class=\"clickable-row\">\n          <td>{{ item.id }}</td>\n          <td>{{ item.deliveryDate | date }}</td>\n          <td>{{ item.customerName }}</td>\n          <td>{{ item.shipToName }}</td>\n          <td>{{ item.totalPrice | currency }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</form>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\nimport { Router, RouterModule } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\n\n@Component({\n  selector: 'app-password-request',\n  templateUrl: './password-request.component.html',\n  styleUrls: ['./password-request.component.css'],\n  standalone: true,\n  imports: [CommonModule, MatFormFieldModule, MatInputModule, MatButtonModule, ReactiveFormsModule, RouterModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PasswordRequestComponent {\n  passwordRequestForm: FormGroup;\n\n  constructor(\n    private router: Router,\n    private cdr: ChangeDetectorRef,\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private snackbarService: SnackbarService,\n  ) {\n    this.passwordRequestForm = this.formBuilder.group({\n      username: ['', [Validators.required, Validators.email]],\n    });\n  }\n\n  onSubmit() {\n    const { username } = this.passwordRequestForm.value;\n\n    this.authService.passwordRequest(username).subscribe({\n      next: () => {\n        this.snackbarService.showSnackBar(`An email has been sent to ${username} to reset your password`);\n        this.router.navigate(['/login']);\n      },\n    });\n  }\n}\n","<div class=\"container\">\n    <div class=\"login-container\">\n\n        <div class=\"logo-container\">\n            <a [routerLink]=\"['/home']\">\n                <img src=\"assets/logo.png\" alt=\"Company Logo\" class=\"logo\">\n            </a>\n        </div>\n\n        <h1>New password request</h1>\n        <form [formGroup]=\"passwordRequestForm\" (ngSubmit)=\"onSubmit()\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Username</mat-label>\n                <input matInput type=\"text\" formControlName=\"username\" placeholder=\"Enter your username\" autocomplete=\"username\">\n            </mat-form-field>\n\n            <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"passwordRequestForm.invalid\">\n                <span>Submit password request</span>\n            </button>\n        </form>\n    </div>\n</div>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, RouterModule, ParamMap } from '@angular/router';\nimport { AbstractControl, FormBuilder, FormGroup, ValidationErrors, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\n\n@Component({\n  selector: 'app-password-reset',\n  templateUrl: './password-reset.component.html',\n  styleUrls: ['./password-reset.component.css'],\n  standalone: true,\n  imports: [CommonModule, MatFormFieldModule, MatInputModule, MatButtonModule, ReactiveFormsModule, RouterModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PasswordResetComponent implements OnInit {\n  passwordResetForm: FormGroup;\n  token: string = '';\n  mismatchedPassword: boolean = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private cdr: ChangeDetectorRef,\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private snackbarService: SnackbarService,\n  ) {\n    this.passwordResetForm = this.formBuilder.group({\n      password: ['', [Validators.required, Validators.minLength(5), this.specialCharacterValidator]],\n      confirmPassword: ['', [Validators.required, Validators.minLength(5), this.specialCharacterValidator]],\n    });\n  }\n\n  ngOnInit(): void {\n    this.passwordResetForm.get('confirmPassword')?.valueChanges.subscribe(() => {\n      this.mismatchedPassword = false;\n    });\n\n    this.route.paramMap.subscribe((params: ParamMap) => {\n      this.token = params.get('token') || '';\n      if (!this.token) {\n        // no JWT found\n        this.router.navigate(['/login']);\n      }\n    });\n  }\n\n  onSubmit() {\n    const { password, confirmPassword } = this.passwordResetForm.value;\n\n    if (password !== confirmPassword) {\n      this.mismatchedPassword = true;\n      return;\n    }\n\n    this.authService.passwordReset(password, this.token).subscribe({\n      next: () => {\n        this.snackbarService.showSnackBar('Your password has been reset');\n        this.router.navigate(['/login']); // Navigate to /products on success\n      },\n    });\n  }\n\n  specialCharacterValidator(control: AbstractControl): ValidationErrors | null {\n    const value = control.value;\n    // Regular expression for special characters\n    const hasSpecialCharacter = /[!@#$%^&*(),.?\":{}|<>]/.test(value);\n    return hasSpecialCharacter ? null : { noSpecialCharacter: true };\n  }\n}\n","<div class=\"container\">\n    <div class=\"login-container\">\n\n        <div class=\"logo-container\">\n            <a [routerLink]=\"['/home']\">\n                <img src=\"assets/logo.png\" alt=\"Company Logo\" class=\"logo\">\n            </a>\n        </div>\n\n        <h1>New password</h1>\n        <form [formGroup]=\"passwordResetForm\" (ngSubmit)=\"onSubmit()\">\n\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Password</mat-label>\n                <input matInput type=\"password\" formControlName=\"password\" placeholder=\"Enter your password\" autocomplete=\"current-password\">\n            </mat-form-field>\n\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Re-enter your password</mat-label>\n                <input matInput type=\"password\" formControlName=\"confirmPassword\" placeholder=\"Enter your password\" autocomplete=\"current-password\">\n            </mat-form-field>\n\n            <div *ngIf=\"passwordResetForm.get('password')?.touched && passwordResetForm.get('password')?.errors?.['minlength']\" class=\"error\">\n                Your password needs to have at least 5 characters.\n            </div>\n\n            <div *ngIf=\"passwordResetForm.get('password')?.touched && passwordResetForm.get('password')?.errors?.['noSpecialCharacter']\" class=\"error\">\n                Your password needs to contain at least one special character: {{ '[!@#$%^&*(),.?\":{}|<>]' }}\n            </div>\n\n            <div *ngIf=\"mismatchedPassword\" class=\"error\">\n                The 2 entries do not match.\n            </div>\n\n            <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"passwordResetForm.invalid\">\n                <span>Submit new password</span>\n            </button>\n        </form>\n    </div>\n</div>","import { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { ActivatedRoute, RouterModule } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { FormArray, FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms'; // Import FormsModule\nimport { PreOrder } from 'src/app/models/preorder.model';\nimport { PreorderService } from 'src/app/services/preorder.service';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\n\n@Component({\n  standalone: true,\n  imports: [CommonModule, RouterModule, FormsModule, ReactiveFormsModule],\n  selector: 'app-preorder-form',\n  templateUrl: './preorder-form.component.html',\n  styleUrls: ['./preorder-form.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PreorderFormComponent implements OnInit {\n  preOrderForm!: FormGroup;\n  vendorId!: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private http: HttpClient,\n    private preorderService: PreorderService,\n    private cdr: ChangeDetectorRef,\n    private fb: FormBuilder,\n    private snackBarService: SnackbarService,\n  ) {}\n\n  ngOnInit(): void {\n    this.preOrderForm = this.fb.group({\n      preOrders: this.fb.array([]),\n    });\n\n    this.route.params.subscribe((params) => {\n      this.vendorId = params['vendorId'];\n      this.preorderService.getPreOrders(this.vendorId).subscribe((preOrders) => {\n        this.setPreOrders(preOrders);\n        this.cdr.markForCheck();\n      });\n    });\n  }\n\n  // Populate the form with the products\n  setPreOrders(preOrders: PreOrder[]): void {\n    const preOrderFormGroups = preOrders.map((preOrder) => this.createPreOrderForm(preOrder));\n    const preOrderFormArray = this.fb.array(preOrderFormGroups);\n    this.preOrderForm.setControl('preOrders', preOrderFormArray);\n  }\n\n  // Create a FormGroup for each product\n  createPreOrderForm(preOrder: PreOrder): FormGroup {\n    return this.fb.group({\n      id: [preOrder.id],\n      sodId: [preOrder.sodId],\n      dispatchDate: [preOrder.dispatchDate],\n      customerName: [preOrder.customerName],\n      descriptionMemo: [preOrder.descriptionMemo],\n      unitSize: [preOrder.unitSize],\n      unitType: [preOrder.unitType],\n      weight: [preOrder.weight, [Validators.required, Validators.min(0)]],\n      price: [preOrder.price, [Validators.required, Validators.min(0)]],\n    });\n  }\n\n  // Getter for the FormArray\n  get preOrdersArray(): FormArray {\n    return this.preOrderForm.get('preOrders') as FormArray;\n  }\n\n  getModifiedPreOrders(): PreOrder[] {\n    // Filter out preOrders where any of the controls are dirty\n    return this.preOrderForm.value.preOrders.filter((preOrder: PreOrder, index: number) => {\n      const preOrderGroup = this.preOrdersArray.at(index);\n      return preOrderGroup.dirty;\n    });\n  }\n\n  submitAll(): void {\n    const modifiedPreOrders = this.getModifiedPreOrders();\n    modifiedPreOrders.forEach((preOrder) => {\n      this.preorderService.updatePreOrderWeightAndPrice(this.vendorId, preOrder).subscribe(() => {\n        this.snackBarService.showSnackBar('The data has been updated.');\n      });\n    });\n  }\n\n  trackByOrderId(index: number, order: PreOrder): number {\n    return order.id;\n  }\n\n  // TODO: shoudl not be hard-coded here\n  getUnitType(unitType: number): string {\n    const unitTypeMap: { [key: number]: string } = {\n      '1': 'Case',\n      '2': 'Piece',\n      '3': 'Pack',\n      '4': 'Pound',\n      '5': 'Side',\n    };\n    return unitTypeMap[unitType] || 'Unknown';\n  }\n}\n","<div class=\"container\">\n  <!-- Header Section -->\n  <div class=\"header-section\">\n    <a [routerLink]=\"['/home']\">\n      <img src=\"assets/logo.png\" alt=\"Company Logo\" />\n    </a>\n  </div>\n\n  <!-- Page Title -->\n  <h2 class=\"page-title\">PreOrders</h2>\n\n  <!-- PreOrders Table -->\n  <form [formGroup]=\"preOrderForm\" (ngSubmit)=\"submitAll()\">\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Dispatch Date</th>\n          <th>Customer Name</th>\n          <th>Description</th>\n          <th>Unit Size</th>\n          <th>Unit Type</th>\n          <th>Weight (Lbs)</th>\n          <th>Price</th>\n        </tr>\n      </thead>\n      <tbody formArrayName=\"preOrders\">\n        <tr *ngFor=\"let preOrder of preOrdersArray.controls; let i = index\" [formGroupName]=\"i\" [ngStyle]=\"{'background-color': preOrder.dirty ? 'whitesmoke' : 'white'}\">\n\n          <td>{{ preOrder.get('id')?.value }}</td>\n          <td class=\"nowrap\">{{ preOrder.get('dispatchDate')?.value | date: 'mediumDate' }}</td>\n          <td>{{ preOrder.get('customerName')?.value }}</td>\n          <td>{{ preOrder.get('descriptionMemo')?.value }}</td>\n          <td>{{ preOrder.get('unitSize')?.value }}</td>\n          <td>{{ getUnitType(preOrder.get('unitType')?.value) }}</td>\n          <td>\n            <input type=\"number\" formControlName=\"price\" min=\"0\" />\n            <div *ngIf=\"preOrder.get('price')?.touched && preOrder.get('price')?.hasError('min')\" class=\"error\">\n              Weight must be greater than 0</div>\n          </td>\n          <td>\n            <div class=\"currency-input\">\n              <span class=\"currency-symbol\">$</span>\n              <input type=\"number\" formControlName=\"weight\" step=\"0.01\" min=\"0\" />\n              <div *ngIf=\"preOrder.get('weight')?.touched && preOrder.get('weight')?.hasError('min')\" class=\"error\">\n                Price must be greater than 0</div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <!-- Submit Button -->\n    <div class=\"text-center\">\n      <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!preOrderForm.dirty || !preOrderForm.valid\">\n        Submit\n      </button>\n    </div>\n  </form>\n\n</div>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Router, RouterModule } from '@angular/router';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { VendorsService, Vendor } from 'src/app/services/vendors.service'; // Import Vendor type\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  standalone: true,\n  selector: 'app-vendor-links',\n  templateUrl: './preorder-links.component.html',\n  styleUrls: ['./preorder-links.component.css'],\n  imports: [CommonModule, RouterModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VendorLinksComponent implements OnInit {\n  vendors$!: Observable<Vendor[]>;\n\n  constructor(private cdr: ChangeDetectorRef, private snackbarService: SnackbarService, private vendorsService: VendorsService, private router: Router) {}\n  ngOnInit(): void {\n    this.vendors$ = this.vendorsService.getVendors();\n  }\n\n  // Navigate to Preorder Form for the selected vendor\n  navigateToPreorderForm(vendorId: number): void {\n    this.router.navigate(['/preorder-form', vendorId]); // Navigate with vendorId as route parameter\n  }\n\n  // Copy Vendor Link to Clipboard\n  copyLink(vendorId: number): void {\n    const link = `${window.location.origin}/preorder-form/${vendorId}`;\n    navigator.clipboard\n      .writeText(link)\n      .then(() => {\n        this.snackbarService.showSnackBar('Link copied to clipboard!');\n      })\n      .catch((err) => {\n        this.snackbarService.showSnackBar('Failed to copy link: ', err);\n        console.error('Failed to copy link: ', err);\n      });\n  }\n}\n","<div class=\"container\">\n  <a [routerLink]=\"['/home']\">\n    <div class=\"image-container\">\n      <img src=\"assets/logo.png\" alt=\"Company Logo\">\n    </div>\n  </a>\n\n  <h2 class=\"underlined\">Vendors</h2>\n\n  <table class=\"order-grid\">\n    <thead>\n      <tr>\n        <th>Vendor Name</th>\n        <th>Preorder Form</th>\n        <th>Copy Link</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let vendor of vendors$ | async\">\n        <td>{{ vendor.name }}</td>\n        <td>\n          <a [routerLink]=\"['/preorder-form', vendor.id]\">Preorder Form</a>\n        </td>\n        <td>\n          <a href=\"javascript:void(0)\" (click)=\"copyLink(vendor.id)\" (keyup)=\"copyLink(vendor.id)\">Copy Link</a>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialogModule } from '@angular/material/dialog';\nimport { CommonModule } from '@angular/common';\n\ninterface ProductDetails {\n  compItemId: number;\n  compDescription: string;\n  origin: string;\n  notes?: string;\n  woh?: number;\n  unitType?: number;\n  packSize?: string;\n  packLock?: number;\n  compCost?: number;\n  yield?: number;\n  laborPackCost?: number;\n  buyer?: string;\n  compInstructions?: string;\n  sixtySales?: number;\n  tenSales?: number;\n  preOrderHours?: number;\n  photoUrl?: string; // New optional field for image URL\n  thumbnailUrl?: string; // New optional field for thumbnail\n}\n\n@Component({\n  standalone: true,\n  selector: 'app-product-details-dialog',\n  templateUrl: './product-details-dialog.component.html',\n  styleUrls: ['./product-details-dialog.component.css'],\n  imports: [CommonModule, MatDialogModule], // Import MatDialogModule here\n})\nexport class ProductDetailsDialogComponent {\n  constructor(\n    public dialogRef: MatDialogRef<ProductDetailsDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: ProductDetails\n  ) {\n    console.log('Dialog opened with data:', data); // Debug log\n  }\n\n  close(): void {\n    this.dialogRef.close();\n  }\n\n  getUnitType(unitType?: number): string {\n    switch (unitType) {\n      case 1:\n        return 'Cs';\n      case 2:\n        return 'Pcs';\n      case 3:\n        return 'Pck';\n      case 4:\n        return 'lbs';\n      case 5:\n        return 'side';\n      default:\n        return 'Unknown';\n    }\n  }\n}\n","<h2>{{ data.compItemId }} - {{ data.compDescription }}</h2>\n<div class=\"special-instructions\">{{ data.compInstructions || 'N/A' }}</div>\n\n<mat-dialog-content>\n  <!-- Display Image if Available -->\n  <div *ngIf=\"data.photoUrl || data.thumbnailUrl\" class=\"image-container\">\n    <img [src]=\"data.photoUrl || data.thumbnailUrl\" alt=\"Product Image\" class=\"product-image\" />\n  </div>\n  \n\n  <div class=\"margins\">\n    <div class=\"margin-values\">\n      <div class=\"margin-group\">\n        <div class=\"field\">\n          <span class=\"field-label\">16%</span>\n          <span>{{ ((data.compCost ?? 0) * (data.yield ?? 0) + (data.laborPackCost ?? 0)) / 0.84 | number:'1.2-2' }}</span>\n        </div>\n        <div class=\"field\">\n          <span class=\"field-label\">18%</span>\n          <span>{{ ((data.compCost ?? 0) * (data.yield ?? 0) + (data.laborPackCost ?? 0)) / 0.82 | number:'1.2-2' }}</span>\n        </div>\n        <div class=\"field\">\n          <span class=\"field-label\">20%</span>\n          <span>{{ ((data.compCost ?? 0) * (data.yield ?? 0) + (data.laborPackCost ?? 0)) / 0.80 | number:'1.2-2' }}</span>\n        </div>\n        <div class=\"field\">\n          <span class=\"field-label\">22%</span>\n          <span>{{ ((data.compCost ?? 0) * (data.yield ?? 0) + (data.laborPackCost ?? 0)) / 0.78 | number:'1.2-2' }}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"field-group\">\n    <div class=\"field\">\n      <span class=\"field-label\">Cost</span>\n      <span>{{ (data.compCost ?? 0) * (data.yield ?? 0) | number:'1.2-2' }}</span>\n    </div>\n    <div class=\"field\">\n      <span class=\"field-label\">Yield</span>\n      <span>{{ (data.yield ?? 0) * 100 | number:'1.0-0' }}%</span>\n    </div>\n    <div class=\"field\">\n      <span class=\"field-label\">Labor Pack</span>\n      <span>{{ data.laborPackCost | number:'1.2-2' }}</span>\n    </div>\n    <div class=\"field\">\n      <span class=\"field-label\">Finish</span>\n      <span>{{ ((data.compCost ?? 0) * (data.yield ?? 0) + (data.laborPackCost ?? 0)) | number:'1.2-2' }}</span>\n    </div>\n  </div>\n\n  <div class=\"field-group\">\n    <div class=\"field\">\n      <span class=\"field-label\">Origin</span>\n      <span>{{ data.origin }}</span>\n    </div>\n    <div class=\"field\">\n      <span class=\"field-label\">Notes</span>\n      <span>{{ data.notes || 'N/A' }}</span>\n    </div>\n    <div class=\"field\">\n      <span class=\"field-label\">WOH</span>\n      <span>{{ data.woh }}</span>\n    </div>\n    <div class=\"field\">\n      <span class=\"field-label\">Unit Type</span>\n      <span>{{ getUnitType(data.unitType ?? 0) }}</span>\n    </div>\n  </div>\n\n  <div class=\"field-group\">\n    <div class=\"field\">\n      <span class=\"field-label\">Pack Size</span>\n      <span>{{ data.packSize }}</span>\n    </div>\n    <div class=\"field\">\n      <span class=\"field-label\">Buyer</span>\n      <span>{{ data.buyer }}</span>\n    </div>\n    <div class=\"field\">\n      <span class=\"field-label\">Sixty Sales</span>\n      <span>{{ data.sixtySales }}</span>\n    </div>\n  </div>\n\n  <div class=\"field-group\">\n    <div class=\"field\">\n      <span class=\"field-label\">Ten Sales</span>\n      <span>{{ data.tenSales }}</span>\n    </div>\n    <div class=\"field\">\n      <span class=\"field-label\">Pre-Order Hours</span>\n      <span>{{ data.preOrderHours }}</span>\n    </div>\n  </div>\n</mat-dialog-content>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ProductService } from '../../services/products.service';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { InventoryItem } from 'src/app/models/product.model';\nimport { BehaviorSubject, Subject, Subscription } from 'rxjs';\nimport { InfiniteScrollDirective } from 'ngx-infinite-scroll';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, FormControl } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { ProductDetailsDialogComponent } from '../product-details-dialog/product-details-dialog.component';\nimport { HttpEventType } from '@angular/common/http';\n\n@Component({\n  standalone: true,\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css'],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, RouterModule, InfiniteScrollDirective],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductsComponent implements OnInit, OnDestroy {\n  page = 0;\n  size = 50;\n  searchTerm = '';\n  showRelevantItems = false;\n  showSixtySales = false;\n  showWoh = false;\n  showYield = false;\n\n  // Filter dropdowns\n  originFilter: string = '';\n  packSizeFilter: string | number = '';\n  buyerFilter: string | number = '';\n\n  // Min CompCost property\n  minCompCost: number = 0;\n\n  // Form control\n  minCompCostControl = new FormControl('');\n\n  // Unique dropdown options\n  uniqueOrigins: string[] = [];\n  uniquePackSizes: (string | number)[] = [];\n  uniqueBuyers: (string | number)[] = [];\n\n  private searchSubject = new Subject<string>();\n  private searchSubscription!: Subscription;\n\n  private inventoryItemsSubject = new BehaviorSubject<InventoryItem[]>([]);\n  inventoryItems$ = this.inventoryItemsSubject.asObservable();\n\n  constructor(private cdr: ChangeDetectorRef, private productService: ProductService, private dialog: MatDialog) {}\n\n  ngOnInit(): void {\n    this.loadData();\n\n    this.searchSubscription = this.searchSubject.pipe(distinctUntilChanged(this.trimComparator), debounceTime(200)).subscribe((searchTerm) => {\n      this.searchTerm = searchTerm;\n      this.page = 0;\n      this.inventoryItemsSubject.next([]);\n      this.loadData();\n    });\n\n    this.minCompCostControl.valueChanges.subscribe((value) => {\n      this.minCompCost = value ? parseFloat(value) : 0;\n      this.onCompCostChange();\n    });\n  }\n\n  loadData(): void {\n    this.productService.getProducts(this.page, this.size, this.searchTerm).subscribe({\n      next: (response: InventoryItem[]) => {\n        const currentData = this.inventoryItemsSubject.value;\n        const newData = response.filter((item) => !currentData.some((currentItem) => currentItem.compItemId === item.compItemId));\n\n        let filteredData = this.showRelevantItems ? newData.filter((item) => item.tenSales && item.tenSales > 0) : newData;\n\n        if (this.showSixtySales) {\n          filteredData = filteredData.filter((item) => item.sixtySales && item.sixtySales > 0);\n        }\n\n        if (this.showWoh) {\n          filteredData = filteredData.filter((item) => item.woh && item.woh > 0);\n        }\n\n        if (this.showYield) {\n          filteredData = filteredData.filter((item) => item.yield && item.yield < 1);\n        }\n\n        const fullyFilteredData = filteredData.filter((item) => {\n          const compCost = item.compCost ?? 0;\n          return (\n            (this.originFilter ? item.origin === this.originFilter : true) &&\n            (this.packSizeFilter ? item.packSize === this.packSizeFilter : true) &&\n            (this.buyerFilter ? item.buyer === this.buyerFilter : true) &&\n            compCost >= this.minCompCost\n          );\n        });\n\n        this.populateUniqueDropdowns(response);\n        this.inventoryItemsSubject.next([...currentData, ...fullyFilteredData]);\n      },\n    });\n  }\n\n  onRowClick(item: InventoryItem, event: Event): void {\n    const tagName = (event.target as HTMLElement).tagName;\n\n    if (tagName !== 'BUTTON' && tagName !== 'INPUT') {\n      this.dialog.open(ProductDetailsDialogComponent, {\n        data: {\n          ...item,\n        },\n        width: '400px',\n      });\n    }\n  }\n\n  onButtonClick(event: Event): void {\n    event.stopPropagation(); // Prevents the row click event\n  }\n\n  toggleRelevantItemsFilter(): void {\n    this.showRelevantItems = !this.showRelevantItems;\n    this.page = 0;\n    this.inventoryItemsSubject.next([]);\n    this.loadData();\n  }\n\n  toggleSixtySalesFilter(): void {\n    this.showSixtySales = !this.showSixtySales;\n    this.page = 0;\n    this.inventoryItemsSubject.next([]);\n    this.loadData();\n  }\n\n  toggleWohFilter(): void {\n    this.showWoh = !this.showWoh;\n    this.page = 0;\n    this.inventoryItemsSubject.next([]);\n    this.loadData();\n  }\n\n  toggleYieldFilter(): void {\n    this.showYield = !this.showYield;\n    this.page = 0;\n    this.inventoryItemsSubject.next([]);\n    this.loadData();\n  }\n\n  onFilterChange(): void {\n    this.page = 0;\n    this.inventoryItemsSubject.next([]);\n    this.loadData();\n  }\n\n  onCompCostChange(): void {\n    this.page = 0;\n    this.inventoryItemsSubject.next([]);\n    this.loadData();\n  }\n\n  onScroll(): void {\n    this.page++;\n    this.loadData();\n  }\n\n  onSearchChange(event: Event): void {\n    const searchTerm = (event.target as HTMLInputElement).value;\n    this.page = 0;\n    this.searchSubject.next(searchTerm);\n  }\n\n  onFileSelected(item: InventoryItem, event: Event): void {\n    const input = event.target as HTMLInputElement;\n    if (input.files && input.files.length > 0) {\n      this.uploadFile(item, input.files[0]);\n    }\n  }\n\n  uploadFile(item: InventoryItem, file: File): void {\n    this.productService.uploadProductImage(item.compItemId, file).subscribe({\n      next: (event) => {\n        if (event.type === HttpEventType.Response) {\n          const updatedItem = event.body as InventoryItem;\n          Object.assign(item, updatedItem);\n          this.cdr.markForCheck();\n        }\n      },\n    });\n  }\n\n  triggerFileInput(fileInput: HTMLInputElement): void {\n    fileInput.click();\n  }\n\n  private trimComparator(prev: string, curr: string): boolean {\n    return prev.trim() === curr.trim();\n  }\n\n  ngOnDestroy(): void {\n    if (this.searchSubscription) {\n      this.searchSubscription.unsubscribe();\n    }\n  }\n\n  private populateUniqueDropdowns(products: InventoryItem[]): void {\n    this.uniqueOrigins = [...new Set(products.map((item) => item.origin))].filter(Boolean).sort() as string[];\n    this.uniquePackSizes = [...new Set(products.map((item) => item.packSize))].filter(Boolean).sort((a, b) => Number(a) - Number(b)) as (string | number)[];\n    this.uniqueBuyers = [...new Set(products.map((item) => item.buyer))].filter(Boolean).sort() as string[];\n  }\n}\n","<div class=\"content\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"50\" (scrolled)=\"onScroll()\">\n  <div class=\"container\">\n    <!-- Make the entire image-container clickable by wrapping in a link -->\n    <a [routerLink]=\"['/home']\" class=\"image-container\">\n      <img src=\"assets/logo.png\" alt=\"Company Logo\">\n    </a>\n\n    <h2 class=\"inventory-title\">Products</h2>\n\n    <!-- Search Bar Section -->\n    <div class=\"search-bar\">\n      <input type=\"text\" placeholder=\"Search Products\" (input)=\"onSearchChange($event)\">\n    </div>\n\n    <!-- Button Row for Relevant Items and Additional Filters -->\n    <div class=\"button-row\">\n      <!-- Relevant Items Toggle Button -->\n      <button (click)=\"toggleRelevantItemsFilter()\" class=\"relevant-items-btn\">\n        {{ showRelevantItems ? 'Show All Items' : 'Relevant Items' }}\n      </button>\n\n      <!-- Sixty Sales Filter Button -->\n      <button (click)=\"toggleSixtySalesFilter()\" class=\"filter-btn\">\n        {{ showSixtySales ? 'Show All Sixty Sales' : 'Sixty Sales > 0' }}\n      </button>\n\n      <!-- WOH Filter Button -->\n      <button (click)=\"toggleWohFilter()\" class=\"filter-btn\">\n        {{ showWoh ? 'Show All WOH' : 'WOH > 0' }}\n      </button>\n\n      <!-- Yield Filter Button -->\n      <button (click)=\"toggleYieldFilter()\" class=\"filter-btn\">\n        {{ showYield ? 'Show All Yield' : 'Yield < 100%' }} </button>\n    </div>\n\n    <!-- Centered Filters Section -->\n    <div class=\"filters\">\n      <!-- Origin Filter Dropdown -->\n      <div class=\"filter-group\">\n        <label for=\"originFilter\">Origin</label>\n        <select id=\"originFilter\" (change)=\"onFilterChange()\" [(ngModel)]=\"originFilter\">\n          <option value=\"\">All Origins</option>\n          <option *ngFor=\"let origin of uniqueOrigins\" [value]=\"origin\">{{ origin }}</option>\n        </select>\n      </div>\n\n      <!-- CompCost Min Filter -->\n      <div class=\"filter-group minfilter\">\n        <label for=\"comp-cost-min\">Min CompCost</label>\n        <input type=\"number\" id=\"comp-cost-min\" [(ngModel)]=\"minCompCost\" (input)=\"onCompCostChange()\" placeholder=\"Min\" />\n      </div>\n\n      <!-- Pack Size Filter Dropdown -->\n      <div class=\"filter-group\">\n        <label for=\"packSizeFilter\">Pack Size</label>\n        <select id=\"packSizeFilter\" (change)=\"onFilterChange()\" [(ngModel)]=\"packSizeFilter\">\n          <option value=\"\">All Pack Sizes</option>\n          <option *ngFor=\"let packSize of uniquePackSizes\" [value]=\"packSize\">{{ packSize }}</option>\n        </select>\n      </div>\n\n      <!-- Buyer Filter Dropdown -->\n      <div class=\"filter-group\">\n        <label for=\"buyerFilter\">Buyer</label>\n        <select id=\"buyerFilter\" (change)=\"onFilterChange()\" [(ngModel)]=\"buyerFilter\">\n          <option value=\"\">All Buyers</option>\n          <option *ngFor=\"let buyer of uniqueBuyers\" [value]=\"buyer\">{{ buyer }}</option>\n        </select>\n      </div>\n    </div>\n\n    <!-- Inventory Grid Table -->\n    <table class=\"inventory-grid\" *ngIf=\"inventoryItems$ | async as products; else noData\">\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Description</th>\n          <th>WOH</th>\n          <th>Sixty Sales</th>\n          <th>Image</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let item of products\" (click)=\"onRowClick(item, $event)\">\n          <td>{{ item.compItemId }}</td>\n          <td>{{ item.compDescription }}</td>\n          <td>{{ item.woh }}</td>\n          <td>{{ item.sixtySales }}</td>\n          <td>\n            <div *ngIf=\"!item.photoUrl; else uploadedImageBlock\" class=\"custom-file-input\">\n              <input type=\"file\" #fileInput (change)=\"onFileSelected(item, $event)\" accept=\"image/*\" hidden />\n              <button type=\"button\" class=\"button\" (click)=\"triggerFileInput(fileInput)\">\n                Upload Image\n              </button>\n\n            </div>\n            <ng-template #uploadedImageBlock>\n              <div class=\"image-container\">\n                <img [src]=\"item.thumbnailUrl || item.photoUrl\" alt=\"Product Image\" class=\"uploaded-image\" />\n              </div>\n            </ng-template>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <ng-template #noData>\n      <p>No products available.</p>\n    </ng-template>\n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(): boolean {\n    if (this.authService.isLoggedIn()) {\n      return true;\n    } else {\n      // Redirect to login if not authenticated\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n\n  intercept<T>(req: HttpRequest<T>, next: HttpHandler): Observable<HttpEvent<T>> {\n    // Get the token from the AuthService (or other storage like localStorage)\n    const token = this.authService.getToken(); // Make sure to implement getToken() method\n\n    if (token) {\n      // Clone the request and add the authorization header\n      const clonedRequest = req.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      return next.handle(clonedRequest);\n    }\n\n    // If there's no token, continue with the original request\n    return next.handle(req);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../models/user.model ';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private tokenKey = 'authToken';\n  private fullnameKey = 'fullname';\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  login(username: string, password: string): Observable<User> {\n    return this.http.post<User>(`${environment.apiUrl}/public/auth/login`, { username, password });\n  }\n\n  passwordRequest(username: string): Observable<unknown> {\n    return this.http.post<unknown>(`${environment.apiUrl}/public/auth/password-request`, { username });\n  }\n\n  passwordReset(password: string, token: string): Observable<unknown> {\n    return this.http.post<unknown>(`${environment.apiUrl}/public/auth/password-reset`, { password, token });\n  }\n\n  saveFullnameAndToken(fullname: string, token: string): void {\n    localStorage.setItem(this.tokenKey, token);\n    localStorage.setItem(this.fullnameKey, fullname);\n  }\n\n  // Retrieve the token (from sessionStorage first, then fallback to localStorage)\n  getToken(): string | null {\n    const token = localStorage.getItem(this.tokenKey);\n    return token;\n  }\n\n  getFullname(): string | null {\n    const token = localStorage.getItem(this.fullnameKey);\n    return token;\n  }\n\n  // Check if the user is logged in by verifying if a token exists\n  isLoggedIn(): boolean {\n    const token = localStorage.getItem(this.tokenKey);\n    return !!token;\n  }\n\n  // Optional: method to log out\n  logout(): void {\n    localStorage.removeItem(this.tokenKey);\n    this.router.navigate(['/login']);\n  }\n\n  // Check if token exists and is not expired\n  /*\n  isTokenValid(url?: string): boolean {\n    // Skip token validation if the URL matches an excluded path\n    if (url && this.isExcludedPath(url)) {\n      console.log('URL is excluded from authentication, skipping token validation:', url);\n      return true;\n    }\n\n    const token = this.getToken();\n    if (!token) {\n      console.warn('No token found');\n      return false;\n    }\n\n    const payload = this.decodeToken(token);\n    if (!payload || !payload.exp) {\n      console.warn('Invalid token payload');\n      return false;\n    }\n\n    const expiryTime = payload.exp * 1000; // Convert to milliseconds\n    const currentTime = Date.now();\n    const isValid = currentTime < expiryTime;\n    console.log('Token validity:', isValid); // Debug: Log token validity\n    return isValid;\n  }\n\n  // Decode the token to get its payload\n  private decodeToken(token: string): any | null {\n    try {\n      const payloadPart = token.split('.')[1];\n      const decodedPayload = atob(payloadPart);\n      const parsedPayload = JSON.parse(decodedPayload);\n      console.log('Decoded token payload:', parsedPayload); // Debug: Log decoded payload\n      return parsedPayload;\n    } catch (error) {\n      console.error('Failed to decode token:', error);\n      return null;\n    }\n  }\n*/\n}\n","import { HttpClient, HttpEvent, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { DeliveryStop } from '../models/delivery-stop.model';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from './auth.service';\n\ninterface Driver {\n  name: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DriverRouteService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient, private authService: AuthService) {}\n\n  getDrivers(): Observable<Driver[]> {\n    return this.http.get<Driver[]>(`${this.apiUrl}/drivers`);\n  }\n\n  getDeliveryRoute(driverName: string, deliveryDate: string): Observable<DeliveryStop[]> {\n    const params = new HttpParams().set('driverName', driverName).set('deliveryDate', deliveryDate);\n\n    return this.http.get<DeliveryStop[]>(`${this.apiUrl}/delivery-stops`, { params });\n  }\n\n  hasArrived(id: string): Observable<DeliveryStop> {\n    return this.http.patch<DeliveryStop>(`${this.apiUrl}/delivery-stops/${id}`, {});\n  }\n\n  uploadPhoto(deliveryStopId: number, file: File): Observable<HttpEvent<DeliveryStop>> {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    return this.http.post<DeliveryStop>(`${this.apiUrl}/delivery-stops/${deliveryStopId}/photos`, formData, {\n      reportProgress: true,\n      observe: 'events',\n    });\n  }\n}\n","import { ErrorHandler, Injectable } from '@angular/core';\nimport { SnackbarService } from './snackbar.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GlobalErrorHandlerService implements ErrorHandler {\n  constructor(private snackBarService: SnackbarService, private router: Router, private authService: AuthService) {}\n\n  handleError(error: unknown) {\n    if (error instanceof HttpErrorResponse) {\n      // Check network connectivity\n      if (!navigator.onLine) {\n        this.snackBarService.showSnackBar('No internet connection');\n        return;\n      }\n\n      // Handle client-side errors\n      if (error.error instanceof ErrorEvent) {\n        this.snackBarService.showSnackBar(error.error.message);\n        return;\n      }\n\n      // Handle specific HTTP status codes\n      switch (error.status) {\n        case 401:\n          this.authService.logout();\n          this.snackBarService.showSnackBar('Unauthorized. Please enter your credentials.');\n          this.router.navigate(['/login']);\n          break;\n\n        case 403: {\n          this.authService.logout();\n          const errorMessage = error.error?.message || 'Try again.';\n          this.snackBarService.showSnackBar(`Access denied. ${errorMessage}.`);\n          break;\n        }\n        case 423: {\n          this.authService.logout();\n          const errorMessage = error.error?.message || 'Try again.';\n          this.snackBarService.showSnackBar(`Access denied. ${errorMessage}.`);\n          break;\n        }\n        case 404:\n          this.snackBarService.showSnackBar('Resource not found.');\n          break;\n\n        case 413:\n          this.snackBarService.showSnackBar('File too large.');\n          break;\n        case 500: {\n          const errorMessage = error.error?.message || 'Please try again later.';\n          this.snackBarService.showSnackBar(`Error: ${errorMessage}`);\n          break;\n        }\n        default: {\n          console.error('An error occurred:', error);\n          const errorMessage = error.error?.message || 'An unexpected error occurred.';\n          this.snackBarService.showSnackBar(`Error: ${errorMessage}`);\n        }\n      }\n\n      // Log the full error for debugging\n      console.error('Full error details:', {\n        status: error.status,\n        statusText: error.statusText,\n        url: error.url,\n        error: error.error,\n      });\n    } else {\n      // Handle client-side/non-HTTP errors\n      console.error('Client-side error:', error);\n      this.snackBarService.showSnackBar('An unexpected error occurred');\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { OrderRequest } from '../models/order-request.model';\nimport { OrderConfirmation } from '../models/order-confirmation.model';\nimport { environment } from 'src/environments/environment';\nimport { Order } from '../models/order.model';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderFormService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient, private authService: AuthService) {}\n\n  getOrderData(customerId: number): Observable<Order> {\n    return this.http.get<Order>(`${this.apiUrl}/public/customers/${customerId}/profiles`);\n  }\n\n  placeOrder(customerId: number, order: OrderRequest): Observable<OrderConfirmation> {\n    const url = `${this.apiUrl}/public/customers/${customerId}/orders`;\n    return this.http.post<OrderConfirmation>(url, order);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Company } from '../models/company.model';\nimport { Customer } from '../models/customer.model';\nimport { SalesRep } from '../models/sales-rep.model';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderLinksService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient, private authService: AuthService) {}\n\n  getCompanies(): Observable<Company[]> {\n    return this.http.get<Company[]>(`${this.apiUrl}/companies`);\n  }\n\n  getSalesPersons(companyId: number): Observable<SalesRep[]> {\n    return this.http.get<SalesRep[]>(`${this.apiUrl}/companies/${companyId}/sales-reps`);\n  }\n\n  getCustomers(companyId: number, salesRepName: string): Observable<Customer[]> {\n    return this.http.get<Customer[]>(`${this.apiUrl}/companies/${companyId}/sales-reps/${salesRepName}/customers`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Company } from '../models/company.model';\nimport { SalesRep } from '../models/sales-rep.model';\nimport { Order } from '../models/order.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderService {\n  constructor(private http: HttpClient) {}\n\n  public loadCompanies(): Observable<Company[]> {\n    return this.http.get<Company[]>(`${environment.apiUrl}/companies`);\n  }\n\n  public loadOrders(company_id: number, salesrep_name: string, past_hours: number): Observable<Order[]> {\n    const apiUrl = `${environment.apiUrl}/companies/${company_id}/sales-reps/${salesrep_name}/orders?pastHours=${past_hours}`;\n    return this.http.get<Order[]>(apiUrl);\n  }\n\n  public loadSalesRep(company_id: number): Observable<SalesRep[]> {\n    return this.http.get<SalesRep[]>(`${environment.apiUrl}/companies/${company_id}/sales-reps`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { PreOrder } from '../models/preorder.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PreorderService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  getPreOrders(vendorId: string): Observable<PreOrder[]> {\n    return this.http.get<PreOrder[]>(`${this.apiUrl}/public/vendors/${vendorId}/pre-orders`);\n  }\n\n  updatePreOrderWeightAndPrice(vendorId: string, preOrder: PreOrder): Observable<unknown> {\n    const patchUrl = `${this.apiUrl}/vendors/${vendorId}/pre-orders/${preOrder.sodId}`;\n    const body = {\n      weight: preOrder.weight,\n      price: preOrder.price,\n    };\n    return this.http.patch(patchUrl, body);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpEvent } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { InventoryItem } from '../models/product.model';\nimport { AuthService } from './auth.service';\nimport { PaginatedResponse } from '../models/paginate-response.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient, private authService: AuthService) {}\n\n  /**\n   * Fetch products with pagination and search term\n   */\n  getProducts(page: number, size: number, searchTerm: string): Observable<InventoryItem[]> {\n    const params = new HttpParams().set('page', page.toString()).set('size', size.toString()).set('search', searchTerm);\n\n    return this.http.get<PaginatedResponse<InventoryItem>>(`${this.apiUrl}/products`, { params }).pipe(map((response) => response.content));\n  }\n\n  /**\n   * Upload a photo for a specific product\n   */\n  uploadProductImage(productId: number, file: File): Observable<HttpEvent<InventoryItem>> {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    return this.http.post<InventoryItem>(`${this.apiUrl}/products/${productId}/photos`, formData, {\n      reportProgress: true,\n      observe: 'events',\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { \n  MatSnackBar, \n  MatSnackBarHorizontalPosition, \n  MatSnackBarRef, \n  MatSnackBarVerticalPosition, \n  TextOnlySnackBar \n} from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SnackbarService {\n  private snackBarRef!: MatSnackBarRef<TextOnlySnackBar>;\n  private duration = 10000;\n  private verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n  private horizontalPos: MatSnackBarHorizontalPosition = 'center';\n  private action = 'Hide';\n\n  // Define standard styles\n  private styles = {\n    error: 'error-snackbar',\n    success: 'success-snackbar',\n    warning: 'warning-snackbar',\n    info: 'info-snackbar'\n  };\n\n  constructor(private matSnackBar: MatSnackBar) {}\n\n  showSnackBar(\n    message: string, \n    style?: 'error' | 'success' | 'warning' | 'info',\n    duration: number = this.duration\n  ) {\n    // Close any existing snackbar\n    this.closeSnackBar();\n\n    // Get the appropriate style class\n    const panelClass = style ? this.styles[style] : undefined;\n\n    this.snackBarRef = this.matSnackBar.open(message, this.action, {\n      duration: duration,\n      verticalPosition: this.verticalPosition,\n      horizontalPosition: this.horizontalPos,\n      panelClass: panelClass,\n    });\n\n    this.snackBarRef.onAction().subscribe(() => {\n      this.closeSnackBar();\n    });\n\n    return this.snackBarRef;\n  }\n\n  // Convenience methods for different types of messages\n  showError(message: string, duration?: number) {\n    return this.showSnackBar(message, 'error', duration);\n  }\n\n  showSuccess(message: string, duration?: number) {\n    return this.showSnackBar(message, 'success', duration);\n  }\n\n  showWarning(message: string, duration?: number) {\n    return this.showSnackBar(message, 'warning', duration);\n  }\n\n  showInfo(message: string, duration?: number) {\n    return this.showSnackBar(message, 'info', duration);\n  }\n\n  closeSnackBar() {\n    if (this.snackBarRef) {\n      this.snackBarRef.dismiss();\n    }\n  }\n} ","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n// Define the type for the vendor data\nexport interface Vendor {\n  id: number;\n  name: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class VendorsService {\n  private apiUrl = `${environment.apiUrl}/vendors`; // Base API endpoint for vendors\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Fetch the list of vendors from the API\n   * @returns Observable of vendor data\n   */\n  getVendors(): Observable<Vendor[]> {\n    return this.http.get<Vendor[]>(this.apiUrl);\n  }\n}\n","export const environment = {\n  production: false,\n  apiUrl: 'https://uat-pffc.onrender.com/api',\n};\n","import { AppComponent } from './app/app.component';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { CommonModule } from '@angular/common'; // Import CommonModule\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { provideAnimations } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app/app-routing.module';\nimport { BrowserModule, bootstrapApplication } from '@angular/platform-browser';\nimport { GlobalErrorHandlerService } from './app/services/global-error-handler.service';\nimport { ErrorHandler, importProvidersFrom } from '@angular/core';\nimport { HTTP_INTERCEPTORS, provideHttpClient, withInterceptorsFromDi } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { AuthInterceptor } from './app/interceptors/auth.interceptor';\n\nbootstrapApplication(AppComponent, {\n  providers: [\n    importProvidersFrom(\n      BrowserModule,\n      AppRoutingModule,\n      RouterModule,\n      CommonModule, // Add CommonModule here\n      FormsModule,\n      ReactiveFormsModule,\n      MatSlideToggleModule,\n      MatTableModule,\n      MatSidenavModule,\n      MatToolbarModule,\n      MatIconModule,\n      MatListModule,\n      MatMenuModule,\n      MatSnackBarModule,\n      ModalModule.forRoot(),\n    ),\n    { provide: ErrorHandler, useClass: GlobalErrorHandlerService },\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    provideHttpClient(withInterceptorsFromDi()),\n    provideAnimations(),\n  ],\n}).catch((err) => console.error(err));\n"],"names":["RouterModule","DriverRouteComponent","HomeComponent","OrderLinksComponent","LoginComponent","LogoutComponent","ProductsComponent","OrderConfirmationComponent","OrderExistsComponent","OrderFormComponent","DataComponent","OrdersComponent","VendorLinksComponent","PreorderFormComponent","AuthGuard","PasswordRequestComponent","PasswordResetComponent","routes","path","redirectTo","pathMatch","component","title","canActivate","AppRoutingModule","forRoot","imports","i1","exports","isDevMode","NavigationEnd","RouterOutlet","CommonModule","MatToolbarModule","MatIconModule","environment","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","apiUrl","AppComponent","constructor","router","showWarning","isOrderForm","includes","alert","ngOnInit","events","subscribe","event","currentRoute","urlAfterRedirects","ɵɵdirectiveInject","Router","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","AppComponent_div_6_Template","AppComponent_div_7_Template","ɵɵproperty","i2","NgIf","styles","changeDetection","http","snackBar","uploadUrl","downloadOrders","url","get","responseType","response","blob","Blob","type","downloadURL","window","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL","error","console","open","duration","onFileSelected","fileInput","target","files","length","file","uploadFile","formData","FormData","append","post","next","HttpClient","MatSnackBar","DataComponent_Template","ɵɵlistener","DataComponent_Template_button_click_1_listener","ɵɵrestoreView","_r1","ɵɵresetView","DataComponent_Template_button_click_3_listener","fileInput_r2","ɵɵreference","DataComponent_Template_input_change_5_listener","$event","SecurityContext","map","tap","HttpEventType","ImageThumbnailComponent","MatTableModule","driverNames_r4","name","i_r5","ɵɵtextInterpolate1","dataSource_r7","indexOf","element_r6","timeDifference","DriverRouteComponent_table_18_td_3_div_2_Template","deliveryAddress1","ctx_r8","getGoogleMapsUrl","element_r8","deliveryAddress2","deliveryAddress3","ɵɵsanitizeUrl","ɵɵtextInterpolate2","ɵɵpropertyInterpolate1","element_r10","customerPhone","DriverRouteComponent_table_18_td_12_div_1_Template_input_change_1_listener","_r11","element_r12","ɵɵnextContext","$implicit","DriverRouteComponent_table_18_td_12_div_1_Template_button_click_3_listener","fileInput_r13","fileUrl","ɵɵpipeBind2","actualArrivalTime","DriverRouteComponent_table_18_td_12_div_1_Template","DriverRouteComponent_table_18_td_12_ng_template_2_Template","ɵɵtemplateRefExtractor","alreadyArrivedBlock_r14","ɵɵpureFunction1","_c1","row_r15","ɵɵelementContainerStart","DriverRouteComponent_table_18_th_2_Template","DriverRouteComponent_table_18_td_3_Template","DriverRouteComponent_table_18_th_5_Template","DriverRouteComponent_table_18_td_6_Template","DriverRouteComponent_table_18_th_8_Template","DriverRouteComponent_table_18_td_9_Template","DriverRouteComponent_table_18_th_11_Template","DriverRouteComponent_table_18_td_12_Template","DriverRouteComponent_table_18_tr_13_Template","DriverRouteComponent_table_18_tr_14_Template","displayedColumns","driverRouteService","snackBarService","sanitizer","cdr","maxFileSize","selectedFile","today","formatDate","Date","driverNames$","getDrivers","pipe","data","refreshDeliverRoute","date","month","getMonth","slice","day","getDate","year","getFullYear","driverName","deliveryDate","formattedDate","toISOString","split","deliveryRoute$","getDeliveryRoute","deliveryStops","calculateTimeDifferences","deliveryRoute","input","startsWith","size","showSnackBar","uploadPhoto","id","Response","updatedDeliveryStop","body","Object","assign","closeSnackBar","detectChanges","address2","address3","encodeURIComponent","sanitizedUrl","sanitize","bypassSecurityTrustUrl","i","currentStop","previousStop","currentTime","plannedArrivalTime","getTime","previousTime","timeDifferenceInMinutes","Math","round","undefined","DriverRouteService","SnackbarService","i3","DomSanitizer","ChangeDetectorRef","DriverRouteComponent_Template","DriverRouteComponent_Template_select_change_9_listener","driverName_r2","deliveryDate2_r3","value","DriverRouteComponent_option_11_Template","DriverRouteComponent_table_18_Template","ɵɵpureFunction0","_c0","ɵɵpipeBind1","i4","NgClass","NgForOf","AsyncPipe","DatePipe","i5","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","i6","RouterLink","authService","username","getFullname","navigateTo","page","navigate","logout","AuthService","HomeComponent_Template","HomeComponent_Template_button_click_2_listener","HomeComponent_Template_button_click_4_listener","HomeComponent_Template_button_click_6_listener","HomeComponent_Template_button_click_8_listener","HomeComponent_Template_button_click_10_listener","HomeComponent_Template_button_click_12_listener","ImageThumbnailComponent_ng_template_2_Template_button_click_3_listener","_r3","ctx_r3","modalRef","hide","ImageThumbnailComponent_ng_template_2_Template_img_click_7_listener","ImageThumbnailComponent_ng_template_2_Template_img_keyup_7_listener","imageUrl","modalService","openModal","show","class","BsModalService","inputs","ImageThumbnailComponent_Template","ImageThumbnailComponent_Template_div_click_0_listener","imageModal_r2","ImageThumbnailComponent_Template_img_keyup_1_listener","ImageThumbnailComponent_ng_template_2_Template","Validators","MatFormFieldModule","MatInputModule","MatButtonModule","ReactiveFormsModule","catchError","throwError","errorMessage","formBuilder","loading","loginForm","group","required","password","onLogin","invalid","login","loginError","errorCode","status","message","markForCheck","loginResponse","fullname","firstName","lastName","trim","saveFullnameAndToken","token","FormBuilder","LoginComponent_Template","LoginComponent_Template_form_ngSubmit_6_listener","LoginComponent_span_18_Template","LoginComponent_span_19_Template","LoginComponent_div_20_Template","MatFormField","MatLabel","MatInput","i7","MatButton","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","imageBackgroundColor","imageSrc","LogoComponent_Conditional_0_div_1_Template","companyId","LogoComponent_Conditional_1_div_0_Template","LogoComponent","isLoggedIn","ngOnChanges","ɵɵNgOnChangesFeature","LogoComponent_Template","LogoComponent_Conditional_0_Template","LogoComponent_Conditional_1_Template","ɵɵconditional","NgStyle","LogoutComponent_Template","product_r1","profileDescription","unitType","packSize","salesPrice","quantity","ctx_r1","orderData","shipToName","location","history","state","goBack","customerId","Location","OrderConfirmationComponent_Template","OrderConfirmationComponent_tr_21_Template","OrderConfirmationComponent_div_33_Template","OrderConfirmationComponent_Template_button_click_38_listener","customerName","profiles","ɵɵpipeBind3","totalPrice","shipToId","DecimalPipe","CurrencyPipe","MAT_DIALOG_DATA","MatDialogModule","profile_r1","OrderDetailsDialogComponent","order","dialogRef","closeDialog","close","MatDialogRef","OrderDetailsDialogComponent_Template","OrderDetailsDialogComponent_tr_47_Template","customerPo","salesRepName","MatDialogClose","MatDialogTitle","MatDialogActions","MatDialogContent","route","back","ActivatedRoute","OrderExistsComponent_Template","OrderExistsComponent_tr_21_Template","OrderExistsComponent_div_36_Template","OrderExistsComponent_Template_button_click_37_listener","salesRepPhone","shipTo_r3","OrderFormComponent_form_0_div_6_option_5_Template","OrderFormComponent_form_0_div_6_div_6_Template","shipTos","tmp_3_0","orderForm","touched","errors","OrderFormComponent_form_0_div_7_ng_container_20_tr_1_div_6_Template","i_r6","isQuantityEntered","tmp_9_0","profile_r5","ɵɵpipeBind4","getRowTotalPrice","OrderFormComponent_form_0_div_7_ng_container_20_tr_1_Template","isSpecial","OrderFormComponent_form_0_div_7_ng_container_20_Template","profileControls","controls","OrderFormComponent_form_0_ng_container_27_tr_1_div_6_Template","i_r9","tmp_8_0","profile_r8","OrderFormComponent_form_0_ng_container_27_tr_1_Template","item_r11","OrderFormComponent_form_0_div_51_Template_span_click_2_listener","_r10","closeModal","OrderFormComponent_form_0_div_51_tr_22_Template","currentOrderItems","OrderFormComponent_form_0_Template_form_ngSubmit_0_listener","onSubmit","OrderFormComponent_form_0_div_5_Template","OrderFormComponent_form_0_div_6_Template","OrderFormComponent_form_0_div_7_Template","OrderFormComponent_form_0_ng_container_27_Template","OrderFormComponent_form_0_div_28_Template","OrderFormComponent_form_0_div_29_Template","OrderFormComponent_form_0_div_34_Template","OrderFormComponent_form_0_Template_button_click_35_listener","showCurrentOrder","OrderFormComponent_form_0_div_47_Template","OrderFormComponent_form_0_div_48_Template","OrderFormComponent_form_0_div_49_Template","OrderFormComponent_form_0_div_50_Template","OrderFormComponent_form_0_div_51_Template","hasSpecials","submitted","tmp_7_0","hasError","formControls","dirty","showModal","valid","fb","orderService","paramMap","params","NaN","loadOrderData","getOrderData","sort","a","b","localeCompare","some","profile","shipToValidators","dateAfterTomorrowValidator","dateWithinThreeMonthsValidator","dateNotOnSundayValidator","array","createProfileGroup","atLeastOneQuantityValidator","at","price","index","profileDid","min","filter","placeOrder","orderConfirmation","markAllAsTouched","item","control","dateValue","now","twoAmToday","isNaN","dateAfterTomorrow","formArray","hasAtLeastOneQuantity","atLeastOneQuantity","threeMonthsFromNow","dateWithinThreeMonths","getUTCDay","dateNotOnSunday","OrderFormService","OrderFormComponent_Template","OrderFormComponent_form_0_Template","NgSelectOption","ɵNgSelectMultipleOption","NumberValueAccessor","SelectControlValueAccessor","FormGroupName","FormArrayName","Observable","switchMap","company_r1","salesperson_r2","OrderLinksComponent_tr_33_Template_a_click_7_listener","customer_r4","ctx_r4","copyLink","OrderLinksComponent_tr_33_Template_a_keyup_7_listener","snackbarService","orderLinksService","customers","filteredCustomers","form","company","salesPerson","searchText","companies$","getCompanies","companies","defaultCompany","find","setValue","valueChanges","getSalesPersons","salesreps","salesPersons$","observer","complete","salesrep","getCustomers","customer","toLowerCase","generateLink","baseUrl","replace","navigator","clipboard","writeText","then","catch","err","OrderLinksService","OrderLinksComponent_Template","OrderLinksComponent_option_11_Template","OrderLinksComponent_option_17_Template","OrderLinksComponent_tr_33_Template","tmp_2_0","OrdersComponent_tr_37_Template_tr_click_0_listener","item_r4","onRowClick","dialog","orders","filteredOrders","loadCompanies","setupSalesPersonListener","setupOrdersListener","setupCustomerNameFilterListener","loadSalesRep","loadOrders","applyFilters","width","OrderService","MatDialog","OrdersComponent_Template","OrdersComponent_option_11_Template","OrdersComponent_option_17_Template","OrdersComponent_tr_37_Template","passwordRequestForm","email","passwordRequest","PasswordRequestComponent_Template","PasswordRequestComponent_Template_form_ngSubmit_7_listener","mismatchedPassword","passwordResetForm","minLength","specialCharacterValidator","confirmPassword","passwordReset","hasSpecialCharacter","test","noSpecialCharacter","PasswordResetComponent_Template","PasswordResetComponent_Template_form_ngSubmit_7_listener","PasswordResetComponent_div_16_Template","PasswordResetComponent_div_17_Template","PasswordResetComponent_div_18_Template","i8","FormsModule","PreorderFormComponent_tr_27_div_16_Template","PreorderFormComponent_tr_27_div_22_Template","i_r2","preOrder_r1","tmp_5_0","tmp_6_0","ctx_r2","getUnitType","tmp_10_0","tmp_11_0","tmp_12_0","preorderService","preOrderForm","preOrders","vendorId","getPreOrders","setPreOrders","preOrderFormGroups","preOrder","createPreOrderForm","preOrderFormArray","setControl","sodId","dispatchDate","descriptionMemo","unitSize","weight","preOrdersArray","getModifiedPreOrders","preOrderGroup","submitAll","modifiedPreOrders","forEach","updatePreOrderWeightAndPrice","trackByOrderId","unitTypeMap","PreorderService","PreorderFormComponent_Template","PreorderFormComponent_Template_form_ngSubmit_6_listener","PreorderFormComponent_tr_27_Template","MinValidator","VendorLinksComponent_tr_16_Template_a_click_7_listener","vendor_r2","VendorLinksComponent_tr_16_Template_a_keyup_7_listener","vendorsService","vendors$","getVendors","navigateToPreorderForm","origin","VendorsService","VendorLinksComponent_Template","VendorLinksComponent_tr_16_Template","photoUrl","thumbnailUrl","ProductDetailsDialogComponent","log","ProductDetailsDialogComponent_Template","ProductDetailsDialogComponent_div_5_Template","compItemId","compDescription","compInstructions","compCost","yield","laborPackCost","tmp_4_0","notes","woh","tmp_14_0","buyer","sixtySales","tenSales","preOrderHours","debounceTime","distinctUntilChanged","BehaviorSubject","Subject","InfiniteScrollDirective","FormControl","origin_r2","packSize_r3","buyer_r4","ProductsComponent_table_43_tr_14_div_10_Template_input_change_1_listener","_r8","item_r6","ctx_r6","ProductsComponent_table_43_tr_14_div_10_Template_button_click_3_listener","fileInput_r9","triggerFileInput","ProductsComponent_table_43_tr_14_Template_tr_click_0_listener","_r5","ProductsComponent_table_43_tr_14_div_10_Template","ProductsComponent_table_43_tr_14_ng_template_11_Template","uploadedImageBlock_r10","ProductsComponent_table_43_tr_14_Template","products_r11","productService","searchTerm","showRelevantItems","showSixtySales","showWoh","showYield","originFilter","packSizeFilter","buyerFilter","minCompCost","minCompCostControl","uniqueOrigins","uniquePackSizes","uniqueBuyers","searchSubject","inventoryItemsSubject","inventoryItems$","asObservable","loadData","searchSubscription","trimComparator","parseFloat","onCompCostChange","getProducts","currentData","newData","currentItem","filteredData","fullyFilteredData","populateUniqueDropdowns","tagName","onButtonClick","stopPropagation","toggleRelevantItemsFilter","toggleSixtySalesFilter","toggleWohFilter","toggleYieldFilter","onFilterChange","onScroll","onSearchChange","uploadProductImage","updatedItem","prev","curr","ngOnDestroy","unsubscribe","products","Set","Boolean","Number","ProductService","ProductsComponent_Template","ProductsComponent_Template_div_scrolled_0_listener","ProductsComponent_Template_input_input_7_listener","ProductsComponent_Template_button_click_9_listener","ProductsComponent_Template_button_click_11_listener","ProductsComponent_Template_button_click_13_listener","ProductsComponent_Template_button_click_15_listener","ProductsComponent_Template_select_change_21_listener","ɵɵtwoWayListener","ProductsComponent_Template_select_ngModelChange_21_listener","ɵɵtwoWayBindingSet","ProductsComponent_option_24_Template","ProductsComponent_Template_input_ngModelChange_28_listener","ProductsComponent_Template_input_input_28_listener","ProductsComponent_Template_select_change_32_listener","ProductsComponent_Template_select_ngModelChange_32_listener","ProductsComponent_option_35_Template","ProductsComponent_Template_select_change_39_listener","ProductsComponent_Template_select_ngModelChange_39_listener","ProductsComponent_option_42_Template","ProductsComponent_table_43_Template","ProductsComponent_ng_template_45_Template","ɵɵtwoWayProperty","noData_r12","NgModel","ɵɵinject","factory","ɵfac","providedIn","AuthInterceptor","intercept","req","getToken","clonedRequest","clone","setHeaders","Authorization","handle","tokenKey","fullnameKey","localStorage","setItem","getItem","removeItem","HttpParams","set","hasArrived","patch","deliveryStopId","reportProgress","observe","HttpErrorResponse","GlobalErrorHandlerService","handleError","onLine","ErrorEvent","statusText","company_id","salesrep_name","past_hours","patchUrl","toString","content","productId","matSnackBar","verticalPosition","horizontalPos","action","success","warning","info","style","panelClass","snackBarRef","horizontalPosition","onAction","showError","showSuccess","showInfo","dismiss","production","ModalModule","MatSnackBarModule","MatMenuModule","MatListModule","MatSidenavModule","MatSlideToggleModule","provideAnimations","BrowserModule","bootstrapApplication","ErrorHandler","importProvidersFrom","HTTP_INTERCEPTORS","provideHttpClient","withInterceptorsFromDi","providers","provide","useClass","multi"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}