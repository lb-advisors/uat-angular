{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/app-install-prompt/app-install-prompt.component.ts","./src/app/components/app-install-prompt/app-install-prompt.component.html","./src/app/components/data/data.component.ts","./src/app/components/data/data.component.html","./src/app/components/driver-route/driver-route.component.ts","./src/app/components/driver-route/driver-route.component.html","./src/app/components/employee-application/employee-application.component.ts","./src/app/components/employee-application/employee-application.component.html","./src/app/components/employment-verification/employment-verification.component.ts","./src/app/components/employment-verification/employment-verification.component.html","./src/app/components/hire-checklist/hire-checklist.component.ts","./src/app/components/hire-checklist/hire-checklist.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/image-thumbnail/image-thumbnail.component.ts","./src/app/components/image-thumbnail/image-thumbnail.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/logo/logo.component.ts","./src/app/components/logo/logo.component.html","./src/app/components/logout/logout.component.ts","./src/app/components/logout/logout.component.html","./src/app/components/order-confirmation/order-confirmation.component.ts","./src/app/components/order-confirmation/order-confirmation.component.html","./src/app/components/order-details-dialog/order-details-dialog.component.ts","./src/app/components/order-details-dialog/order-details-dialog.component.html","./src/app/components/order-exists/order-exists.component.ts","./src/app/components/order-exists/order-exists.component.html","./src/app/components/order-form/order-form.component.ts","./src/app/components/order-form/order-form.component.html","./src/app/components/order-links/order-links.component.ts","./src/app/components/order-links/order-links.component.html","./src/app/components/orders/orders.component.ts","./src/app/components/orders/orders.component.html","./src/app/components/password-request/password-request.component.ts","./src/app/components/password-request/password-request.component.html","./src/app/components/password-reset/password-reset.component.ts","./src/app/components/password-reset/password-reset.component.html","./src/app/components/preorder-form/preorder-form.component.ts","./src/app/components/preorder-form/preorder-form.component.html","./src/app/components/preorder-links/preorder-links.component.ts","./src/app/components/preorder-links/preorder-links.component.html","./src/app/components/product-details-dialog/product-details-dialog.component.ts","./src/app/components/product-details-dialog/product-details-dialog.component.html","./src/app/components/products/products.component.ts","./src/app/components/products/products.component.html","./src/app/components/w4-form/w4-form.component.ts","./src/app/components/w4-form/w4-form.component.html","./src/app/components/withholding/withholding.component.ts","./src/app/components/withholding/withholding.component.html","./src/app/guards/auth.guard.ts","./src/app/interceptors/auth.interceptor.ts","./src/app/reports/reports.component.ts","./src/app/reports/reports.component.html","./src/app/sales-per-customer/sales-per-customer-chart.component.ts","./src/app/sales-per-customer/sales-per-customer-chart.component.html","./src/app/sales-per-day-chart/sales-per-day-chart.component.ts","./src/app/sales-per-day-chart/sales-per-day-chart.component.html","./src/app/sales-per-sales-rep-chart/sales-per-sales-rep-chart.component.ts","./src/app/sales-per-sales-rep-chart/sales-per-sales-rep-chart.component.html","./src/app/services/auth.service.ts","./src/app/services/driver-route.service.ts","./src/app/services/global-error-handler.service.ts","./src/app/services/order-form.service.ts","./src/app/services/order-links.service.ts","./src/app/services/order.services.ts","./src/app/services/preorder.service.ts","./src/app/services/products.service.ts","./src/app/services/pwa.service.ts","./src/app/services/snackbar.service.ts","./src/app/services/vendors.service.ts","./src/environments/environment.development.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DriverRouteComponent } from './components/driver-route/driver-route.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { OrderLinksComponent } from './components/order-links/order-links.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { LogoutComponent } from './components/logout/logout.component';\nimport { ProductsComponent } from './components/products/products.component';\nimport { OrderConfirmationComponent } from './components/order-confirmation/order-confirmation.component';\nimport { OrderExistsComponent } from './components/order-exists/order-exists.component';\nimport { OrderFormComponent } from './components/order-form/order-form.component';\nimport { DataComponent } from './components/data/data.component';\nimport { OrdersComponent } from './components/orders/orders.component';\nimport { VendorLinksComponent } from './components/preorder-links/preorder-links.component';\nimport { PreorderFormComponent } from './components/preorder-form/preorder-form.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { PasswordRequestComponent } from './components/password-request/password-request.component';\nimport { PasswordResetComponent } from './components/password-reset/password-reset.component';\nimport { ReportsComponent } from './reports/reports.component';\nimport { EmployeeApplicationComponent } from './components/employee-application/employee-application.component';\nimport { HireChecklistComponent } from './components/hire-checklist/hire-checklist.component';\nimport { EmploymentVerificationComponent } from './components/employment-verification/employment-verification.component';\nimport { W4FormComponent } from './components/w4-form/w4-form.component';\nimport { WithholdingComponent } from './components/withholding/withholding.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  { path: 'home', component: HomeComponent, title: 'Home', canActivate: [AuthGuard] },\n  { path: 'driver', component: DriverRouteComponent, title: \"Drivers' Routes\", canActivate: [AuthGuard] },\n  { path: 'order-links', component: OrderLinksComponent, title: 'Order Links' },\n  { path: 'login', component: LoginComponent, title: 'Login' },\n  { path: 'logout', component: LogoutComponent, title: 'Logout' },\n  { path: 'password-request', component: PasswordRequestComponent, title: 'Password Request' },\n  { path: 'password-reset/:token', component: PasswordResetComponent, title: 'Password Reset' },\n  { path: 'products', component: ProductsComponent, title: 'Products', canActivate: [AuthGuard] },\n  { path: 'customer/:id/order-confirmation', component: OrderConfirmationComponent, title: 'Order Confirmation' },\n  { path: 'customer/:id/order-exists', component: OrderExistsComponent, title: 'Order Exists' },\n  { path: 'customer/:id/order-form', component: OrderFormComponent, title: 'Order Form' },\n  { path: 'data', component: DataComponent, title: 'Data', canActivate: [AuthGuard] },\n  { path: 'orders', component: OrdersComponent, title: 'Orders', canActivate: [AuthGuard] },\n  { path: 'preorder-links', component: VendorLinksComponent, title: 'Vendor Links', canActivate: [AuthGuard] },\n  { path: 'preorder-form/:vendorId', component: PreorderFormComponent, title: 'Preorder Form' },\n  { path: 'reports', component: ReportsComponent, title: 'Reports', canActivate: [AuthGuard] },\n  \n  // HR-related routes\n  { path: 'employee-application', component: EmployeeApplicationComponent, title: 'Employee Application', canActivate: [AuthGuard] },\n  { path: 'new-hire-checklist', component: HireChecklistComponent, title: 'New Hire Checklist', canActivate: [AuthGuard] },\n  { path: 'employment-verification', component: EmploymentVerificationComponent, title: 'Employment Verification', canActivate: [AuthGuard] },\n  { path: 'w4-form', component: W4FormComponent, title: 'W4 Form', canActivate: [AuthGuard] },\n  { path: 'withholding', component: WithholdingComponent, title: 'Withholding', canActivate: [AuthGuard] },\n  \n  { path: '**', redirectTo: 'login' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}","import { ChangeDetectionStrategy, Component, isDevMode, OnInit } from '@angular/core';\nimport { Router, RouterOutlet } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { environment } from 'src/environments/environment';\nimport { Title, Meta } from '@angular/platform-browser';\nimport { SwUpdate } from '@angular/service-worker';\n\n@Component({\n  standalone: true,\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  imports: [CommonModule, MatToolbarModule, MatIconModule, RouterOutlet],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent implements OnInit {\n  isDevMode: boolean = isDevMode();\n  apiUrl = environment.apiUrl;\n  showWarning = false;\n  //isOrderForm: boolean = false;\n\n  constructor(private router: Router, private title: Title, private meta: Meta, private swUpdate: SwUpdate) {\n    // Check that UAT is not using the prod backend\n    if (this.isDevMode && this.apiUrl.includes('prod')) {\n      this.showWarning = true;\n      alert('WARNING: Angular is in Dev mode but connected to production !!!');\n    }\n  }\n\n  ngOnInit(): void {\n    this.title.setTitle('Pacific Fresh Fish Company App');\n    this.meta.addTags([\n      { name: 'description', content: 'Pacific Fresh Fish Company application created by lb-advisors' },\n      { name: 'keywords', content: 'PFF, lb-advisors, allintel' },\n      { name: 'robots', content: 'index, follow' },\n    ]);\n\n    this.checkForUpdate();\n  }\n\n  private checkForUpdate() {\n    if (this.swUpdate.isEnabled) {\n      this.swUpdate\n        .checkForUpdate()\n        .then((isUpdateAvailable) => {\n          if (isUpdateAvailable) {\n            const confirmUpdate = confirm('A new version is available. Do you want to load it?');\n            if (confirmUpdate) {\n              this.swUpdate.activateUpdate().then(() => {\n                window.location.reload();\n              });\n            }\n          }\n        })\n        .catch((error) => {\n          console.error('Error while checking for updates:', error);\n        });\n    }\n  }\n}\n","<main>\n    <router-outlet></router-outlet>\n</main>\n\n<!-- Footer -->\n<footer class=\"mat-drawer-container\">\n    <div class=\"container\">\n        <div class=\"text-align-center\">\n            © 2024 - Pacific Fresh Fish Company\n            <div *ngIf=\"isDevMode\" class=\"dev-mode\">UAT ENVIRONMENT</div>\n            <div *ngIf=\"isDevMode\" class=\"dev-mode\">{{apiUrl}}</div>\n        </div>\n    </div>\n</footer>","import { Platform } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PwaService } from 'src/app/services/pwa.service';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\n\n@Component({\n  standalone: true,\n  selector: 'app-install-prompt',\n  imports: [CommonModule],\n  templateUrl: './app-install-prompt.component.html',\n  styleUrls: ['./app-install-prompt.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppInstallPromptComponent implements OnInit, OnDestroy {\n  beforeInstallPromptHandler?: (event: BeforeInstallPromptEvent) => void;\n  deferredPrompt: BeforeInstallPromptEvent | null = null;\n  isPwa$: Observable<boolean>;\n  isIosButNotPwa: boolean;\n  isPwa: boolean;\n  plat: boolean;\n  userAgent = window.navigator.userAgent.toLowerCase();\n\n  constructor(private pwaService: PwaService, private snackbarService: SnackbarService, public platform: Platform) {\n    this.isPwa$ = this.pwaService.isPwa$;\n    this.isPwa = this.isRunningAsPWA();\n    this.isIosButNotPwa = this.isIOS() && !this.isRunningAsPWA();\n    this.plat = this.isIOS();\n  }\n\n  ngOnInit() {\n    this.beforeInstallPromptHandler = (event: BeforeInstallPromptEvent) => {\n      // Prevent the mini-infobar from appearing\n      event.preventDefault();\n      this.deferredPrompt = event;\n      this.pwaService.updateValue(true);\n    };\n\n    window.addEventListener('beforeinstallprompt', this.beforeInstallPromptHandler as EventListener);\n  }\n\n  ngOnDestroy() {\n    window.removeEventListener('beforeinstallprompt', this.beforeInstallPromptHandler as EventListener);\n    this.pwaService.updateValue(false);\n  }\n\n  promptInstall() {\n    if (this.deferredPrompt) {\n      this.deferredPrompt.prompt(); // Show the install prompt\n      this.deferredPrompt.userChoice.then(() => {\n        this.deferredPrompt = null;\n        this.pwaService.updateValue(false);\n      });\n    }\n  }\n\n  showIosInstructions() {\n    this.snackbarService.showInfo(\"To install this web app on your device, tap the Menu button and then 'Add to Home Screen' button\", 20000);\n  }\n\n  private isIOS(): boolean {\n    const userAgent = window.navigator.userAgent.toLowerCase();\n    return /iphone|ipad|ipod|mac/.test(userAgent) || this.platform.IOS;\n  }\n\n  private isRunningAsPWA(): boolean {\n    const isStandalone = window.matchMedia('(display-mode: standalone)').matches;\n    const isIOSStandalone = (navigator as any).standalone === true;\n    const isFullscreen = window.innerHeight === screen.height;\n\n    return isStandalone || isIOSStandalone || isFullscreen;\n  }\n}\n\ninterface BeforeInstallPromptEvent extends Event {\n  readonly platforms: string[];\n  prompt(): Promise<void>;\n  userChoice: Promise<{ outcome: 'accepted' | 'dismissed'; platform: string }>;\n}\n","@if ( (isPwa$ | async) === true) {\n<div class=\"install-banner\">\n  <button mat-raised-button color=\"primary\" (click)=\"promptInstall()\">\n    Install as an Application\n  </button>\n</div>\n} @else if (isIosButNotPwa) {\n<div class=\"install-banner\">\n  <button mat-raised-button color=\"primary\" (click)=\"showIosInstructions()\">\n    Install as an Application\n  </button>\n</div>\n}","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { environment } from 'src/environments/environment'; // Import the environment configuration\n\n@Component({\n  selector: 'app-data',\n  templateUrl: './data.component.html',\n  styleUrls: ['./data.component.css'],\n})\nexport class DataComponent {\n  private apiUrl = environment.apiUrl;\n  uploadUrl: string = `${this.apiUrl}/database/csv/upload/profiles`;\n\n  constructor(private http: HttpClient, private snackBar: MatSnackBar) {}\n\n  downloadOrders() {\n    const url = `${this.apiUrl}/database/csv/download/orders`;\n\n    this.http.get(url, { responseType: 'blob' }).subscribe(\n      (response: Blob) => {\n        const blob = new Blob([response], { type: 'text/csv' });\n        const downloadURL = window.URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = downloadURL;\n        link.download = 'orders.csv';\n        link.click();\n        window.URL.revokeObjectURL(downloadURL);\n      },\n      (error) => {\n        console.error('Download failed:', error);\n        this.snackBar.open('Failed to download orders. Please try again later.', 'Close', { duration: 3000 });\n      },\n    );\n  }\n\n  onFileSelected(event: Event) {\n    const fileInput = event.target as HTMLInputElement;\n    if (fileInput.files && fileInput.files.length > 0) {\n      const file = fileInput.files[0];\n      this.uploadFile(file);\n    }\n  }\n\n  uploadFile(file: File) {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    this.snackBar.open('Processing your CSV file', '', { duration: 20000 });\n\n    this.http.post(this.uploadUrl, formData).subscribe({\n      next: () => {\n        this.snackBar.open('All Done', '', { duration: 3000 });\n      },\n    });\n  }\n}\n","<div class=\"data-container\">\n    <button class=\"action-button download-button\" (click)=\"downloadOrders()\">Download Orders</button>\n    <button class=\"action-button upload-button\" (click)=\"fileInput.click()\">Upload Profiles</button>\n    <input type=\"file\" #fileInput accept=\".csv\" style=\"display: none\" (change)=\"onFileSelected($event)\" />\n</div>\n\n<div class=\"upload-instructions\">\n    <p>CSV file required</p>\n    <p>File with these columns, in this order required:</p>\n    <ul>\n        <li>ProfileDID</li>\n        <li>SalesRepName</li>\n        <li>SalesRepCell</li>\n        <li>SalesRepEmail</li>\n        <li>ProfileID</li>\n        <li>CustomerID</li>\n        <li>CustomerName</li>\n        <li>CompItemID</li>\n        <li>ProfileDescription</li>\n        <li>ProfileInstruction</li>\n        <li>UnitTypePD</li>\n        <li>PackSizePD</li>\n        <li>SalesPrice</li>\n        <li>CustomerContactName</li>\n        <li>CustomerCell</li>\n        <li>CustomerEmail</li>\n        <li>Company</li>\n        <li>CompanyID</li>\n    </ul>\n</div>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, SecurityContext } from '@angular/core';\nimport { DriverRouteService } from '../../services/driver-route.service';\nimport { Observable } from 'rxjs';\nimport { DeliveryStop } from 'src/app/models/delivery-stop.model';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { map, tap } from 'rxjs/operators';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { HttpEventType } from '@angular/common/http';\nimport { ImageThumbnailComponent } from '../image-thumbnail/image-thumbnail.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router'; // Import RouterModule\n\ninterface Driver {\n  name: string;\n}\n\n@Component({\n  standalone: true,\n  selector: 'app-driver-route',\n  templateUrl: './driver-route.component.html',\n  styleUrls: ['./driver-route.component.css'],\n  imports: [CommonModule, MatTableModule, ImageThumbnailComponent, RouterModule], // Add RouterModule here\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DriverRouteComponent implements OnInit {\n  readonly maxFileSize = 4 * 1024 * 1024; // 4 MB\n\n  driverNames$!: Observable<Driver[]>;\n  deliveryRoute$: Observable<DeliveryStop[]> | undefined;\n  today: string;\n  selectedFile: File | null = null;\n\n  displayedColumns: string[] = ['deliveryAddress1', 'address', 'customerPhone', 'actualArrivalTime'];\n\n  constructor(\n    private driverRouteService: DriverRouteService,\n    private snackBarService: SnackbarService,\n    private sanitizer: DomSanitizer,\n    private cdr: ChangeDetectorRef,\n  ) {\n    this.today = this.formatDate(new Date());\n  }\n\n  ngOnInit(): void {\n    this.driverNames$ = this.driverRouteService.getDrivers().pipe(\n      tap((data) => {\n        if (data && data.length > 0) {\n          this.refreshDeliverRoute(data[0].name, this.today);\n        }\n      }),\n    );\n  }\n\n  formatDate(date: Date): string {\n    const month = ('0' + (date.getMonth() + 1)).slice(-2);\n    const day = ('0' + date.getDate()).slice(-2);\n    const year = date.getFullYear();\n    return `${month}/${day}/${year}`;\n  }\n\n  refreshDeliverRoute(driverName: string, deliveryDate: string): void {\n    const formattedDate = new Date(deliveryDate).toISOString().split('T')[0]; // Ensure date is formatted as YYYY-MM-DD\n    this.deliveryRoute$ = this.driverRouteService\n      .getDeliveryRoute(driverName, formattedDate)\n      .pipe(map((deliveryStops) => this.calculateTimeDifferences(deliveryStops)));\n  }\n\n  onFileSelected(deliveryRoute: DeliveryStop, event: Event) {\n    const input = event.target as HTMLInputElement;\n    if (input.files && input.files.length > 0) {\n      const file = input.files[0];\n      if (file && file.type.startsWith('image/')) {\n        if (file.size <= this.maxFileSize) {\n          this.selectedFile = file;\n          this.uploadFile(deliveryRoute, file);\n        } else {\n          this.snackBarService.showError('File size exceeds 4 MB.');\n        }\n      } else {\n        this.snackBarService.showError('Please select an image file');\n        this.selectedFile = null;\n      }\n    }\n  }\n\n  uploadFile(deliveryRoute: DeliveryStop, file: File) {\n    this.snackBarService.showSuccess('Your file is being uploaded');\n    this.driverRouteService.uploadPhoto(deliveryRoute.id, file).subscribe({\n      next: (event) => {\n        switch (event.type) {\n          case HttpEventType.Response: {\n            const updatedDeliveryStop = event.body as DeliveryStop;\n            Object.assign(deliveryRoute, updatedDeliveryStop);\n            this.snackBarService.closeSnackBar();\n            this.cdr.detectChanges();\n          }\n        }\n      },\n    });\n  }\n\n  getGoogleMapsUrl(address2: string, address3: string): SafeUrl {\n    const url = `https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(address2 + ' ' + address3)}`;\n\n    const sanitizedUrl = this.sanitizer.sanitize(SecurityContext.URL, url);\n    if (sanitizedUrl) {\n      return this.sanitizer.bypassSecurityTrustUrl(sanitizedUrl);\n    } else {\n      return '';\n    }\n  }\n\n  private calculateTimeDifferences(deliveryStops: DeliveryStop[]): DeliveryStop[] {\n    for (let i = deliveryStops.length - 1; i > 0; i--) {\n      const currentStop = deliveryStops[i];\n      const previousStop = deliveryStops[i - 1];\n\n      const currentTime = new Date(currentStop.plannedArrivalTime).getTime();\n      const previousTime = new Date(previousStop.plannedArrivalTime).getTime();\n\n      const timeDifferenceInMinutes = Math.round((currentTime - previousTime) / 60000);\n      currentStop.timeDifference = timeDifferenceInMinutes;\n    }\n\n    if (deliveryStops.length > 0) {\n      deliveryStops[0].timeDifference = undefined; // First row will have no time difference\n    }\n    return deliveryStops;\n  }\n}\n","<div class=\"container\">\n  <!-- Make the entire image-container clickable by wrapping in a link -->\n  <a [routerLink]=\"['/home']\" class=\"image-container\">\n    <img src=\"assets/logo.png\" alt=\"Company Logo\">\n  </a>\n\n  <h2 class=\"driver-routes-title\">Driver's Routes</h2>\n\n  <div class=\"filters\">\n    <div class=\"driver-filter\">\n      <label for=\"driver-name\">Driver Name:</label>\n      <select id=\"driver-name\" #driverName (change)=\"refreshDeliverRoute(driverName.value, deliveryDate2.value)\">\n        <option *ngFor=\"let driverNames of (driverNames$ | async); let i = index\" [value]=\"driverNames.name\" [selected]=\"i === 0\">{{driverNames.name}}</option>\n      </select>\n    </div>\n\n    <div class=\"delivery-date-filter\">\n      <label for=\"delivery-date\">Delivery Date:</label>\n      <input type=\"text\" id=\"delivery-date\" #deliveryDate2 [value]=\"today\" readonly class=\"delivery-date-input\">\n    </div>\n  </div>\n\n  <table mat-table *ngIf=\"deliveryRoute$ | async as dataSource\" [dataSource]=\"dataSource\" class=\"mat-elevation-z8 driver-routes-grid\" matSort>\n    <!-- Customer Column -->\n    <ng-container matColumnDef=\"deliveryAddress1\">\n      <th mat-header-cell *matHeaderCellDef class=\"no-bottom-border\">Customer</th>\n      <td mat-cell *matCellDef=\"let element\" class=\"no-bottom-border\">\n        {{element.deliveryAddress1}}\n        <div *ngIf=\"element !== dataSource[dataSource.length - 1]\" class=\"arrow-container\">\n          <i class=\"fas fa-arrow-down\"></i>\n          <span class=\"time-difference-arrow\">+{{ dataSource[dataSource.indexOf(element) + 1].timeDifference + ' m' }}</span>\n        </div>\n      </td>\n    </ng-container>\n\n    <!-- Address Column (Concatenation of Delivery Address 2 and 3) -->\n    <ng-container matColumnDef=\"address\">\n      <th mat-header-cell *matHeaderCellDef>Address</th>\n      <td mat-cell *matCellDef=\"let element\" class=\"address-column\">\n        <a [href]=\"getGoogleMapsUrl(element.deliveryAddress2, element.deliveryAddress3)\" target=\"_blank\">\n          {{element.deliveryAddress2}} {{element.deliveryAddress3}}\n        </a>\n      </td>\n    </ng-container>\n\n    <!-- Customer Phone Column -->\n    <ng-container matColumnDef=\"customerPhone\">\n      <th mat-header-cell *matHeaderCellDef class=\"wrap\">Customer Phone</th>\n      <td mat-cell *matCellDef=\"let element\" class=\"customerPhone\"><a href=\"tel:+1{{element.customerPhone}} \"> {{element.customerPhone}}</a> </td>\n    </ng-container>\n\n    <!-- Actual Arrival Time Column -->\n    <ng-container matColumnDef=\"actualArrivalTime\">\n      <th mat-header-cell *matHeaderCellDef>Arrival</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <div *ngIf=\"!element.actualArrivalTime || !element.fileUrl; else alreadyArrivedBlock\" class=\"custom-file-input\">\n          <input type=\"file\" id=\"file\" #fileInput (change)=\"onFileSelected(element, $event)\" accept=\"image/*\" required hidden>\n          <button type=\"button\" class=\"button\" (click)=\"fileInput.click()\">Arrived</button>\n        </div>\n        <ng-template #alreadyArrivedBlock>\n          <div>\n            <app-image-thumbnail [imageUrl]=\"element.fileUrl\"\n              [title]=\"element.deliveryAddress2 + ' ' + element.deliveryAddress3 + ' (' + (element.actualArrivalTime | date: 'medium') + ')'\"></app-image-thumbnail>\n          </div>\n        </ng-template>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" [ngClass]=\"{'arrived-row': row.actualArrivalTime}\"></tr>\n  </table>\n</div>","import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-employee-application',\n  templateUrl: './employee-application.component.html',\n  styleUrls: ['./employee-application.component.css'],\n  standalone: true,\n  imports: [CommonModule, FormsModule]\n})\nexport class EmployeeApplicationComponent {\n  currentStep = 1;\n\n  employee = {\n    fullName: '',\n    address: '',\n    city: '',\n    state: '',\n    zip: '',\n    phone: '',\n    email: '',\n    dateAvailable: '',\n    socialSecurityNumber: '',\n    desiredSalary: '',\n    positionApplied: '',\n    isCitizen: false,\n    authorizedToWork: false,\n    workedBefore: false,\n    workedBeforeWhen: '',\n    education: {\n      highSchool: { name: '', address: '', from: '', to: '', graduated: false, degree: '' },\n      college: { name: '', address: '', from: '', to: '', graduated: false, degree: '' },\n      other: { name: '', address: '', from: '', to: '', graduated: false, degree: '' }\n    },\n    references: [\n      { fullName: '', relationship: '', company: '', phone: '', address: '' },\n      { fullName: '', relationship: '', company: '', phone: '', address: '' },\n      { fullName: '', relationship: '', company: '', phone: '', address: '' }\n    ],\n    previousEmployment: [\n      { company: '', phone: '', address: '', supervisor: '', jobTitle: '', startingSalary: '', endingSalary: '', responsibilities: '', from: '', to: '', reasonForLeaving: '', contactSupervisor: false },\n      { company: '', phone: '', address: '', supervisor: '', jobTitle: '', startingSalary: '', endingSalary: '', responsibilities: '', from: '', to: '', reasonForLeaving: '', contactSupervisor: false },\n      { company: '', phone: '', address: '', supervisor: '', jobTitle: '', startingSalary: '', endingSalary: '', responsibilities: '', from: '', to: '', reasonForLeaving: '', contactSupervisor: false }\n    ],\n    militaryService: {\n      branch: '',\n      from: '',\n      to: '',\n      rankAtDischarge: '',\n      typeOfDischarge: '',\n      explanation: ''\n    },\n    disclaimer: {\n      signature: '',\n      date: ''\n    }\n  };\n\n  constructor(private router: Router) {}\n\n  goToStep(step: number) {\n    // Basic form validation before allowing navigation\n    if (step >= 1 && step <= 6) {\n      // Optional: Add validation logic here if needed\n      // For example, checking if required fields are filled before allowing to proceed\n      \n      this.currentStep = step;\n    }\n  }\n\n  nextStep() {\n    if (this.currentStep < 6) {\n      this.currentStep++;\n    }\n  }\n\n  prevStep() {\n    if (this.currentStep > 1) {\n      this.currentStep--;\n    }\n  }\n\n  goToHome() {\n    this.router.navigate(['/home']);\n  }\n\n  submitApplication() {\n    console.log('Application submitted:', this.employee);\n    // Add your API submission logic here\n  }\n}","<div class=\"container\">\n    <h2>Employment Application</h2>\n  \n    <div class=\"logo-container\">\n        <img src=\"assets/goldenstateseafood.png\" alt=\"GS Image\" class=\"logo-image\" (click)=\"goToHome()\">\n    </div>\n\n    <!-- Step Indicator -->\n  <div class=\"step-indicator\">\n    <div [class.active]=\"currentStep === 1\" (click)=\"goToStep(1)\">Personal Info</div>\n    <div [class.active]=\"currentStep === 2\" (click)=\"goToStep(2)\">Education</div>\n    <div [class.active]=\"currentStep === 3\" (click)=\"goToStep(3)\">References</div>\n    <div [class.active]=\"currentStep === 4\" (click)=\"goToStep(4)\">Previous Employment</div>\n    <div [class.active]=\"currentStep === 5\" (click)=\"goToStep(5)\">Military Service</div>\n    <div [class.active]=\"currentStep === 6\" (click)=\"goToStep(6)\">Review & Submit</div>\n  </div>\n  \n    \n    \n       \n       <!-- Step 1: Personal Information -->\n<div class=\"step\" [class.active]=\"currentStep === 1\">\n    <h3>Personal Information</h3>\n    \n    <div class=\"form-row\">\n        <div class=\"form-group\">\n            <label>Full Name</label>\n            <input type=\"text\" [(ngModel)]=\"employee.fullName\" />\n        </div>\n        <div class=\"form-group\">\n            <label>Phone</label>\n            <input type=\"text\" [(ngModel)]=\"employee.phone\" />\n        </div>\n    </div>\n\n    <div class=\"form-row\">\n        <div class=\"form-group\">\n            <label>Email Address</label>\n            <input type=\"email\" [(ngModel)]=\"employee.email\" />\n        </div>\n        <div class=\"form-group\">\n            <label>Social Security Number</label>\n            <input type=\"text\" [(ngModel)]=\"employee.socialSecurityNumber\" />\n        </div>\n    </div>\n\n    <hr>\n    <h3>Address</h3>\n\n    <div class=\"form-row\">\n        <div class=\"form-group\">\n            <label>Street Address</label>\n            <input type=\"text\" [(ngModel)]=\"employee.address\" />\n        </div>\n    </div>\n\n    <div class=\"form-row\">\n        <div class=\"form-group\">\n            <label>City</label>\n            <input type=\"text\" [(ngModel)]=\"employee.city\" />\n        </div>\n        <div class=\"form-group\">\n            <label>State</label>\n            <input type=\"text\" [(ngModel)]=\"employee.state\" />\n        </div>\n        <div class=\"form-group\">\n            <label>ZIP Code</label>\n            <input type=\"text\" [(ngModel)]=\"employee.zip\" />\n        </div>\n    </div>\n\n    <hr>\n    <h3>Employment Information</h3>\n\n    <div class=\"form-row\">\n        <div class=\"form-group\">\n            <label>Position Applied For</label>\n            <input type=\"text\" [(ngModel)]=\"employee.positionApplied\" />\n        </div>\n        <div class=\"form-group\">\n            <label>Date Available</label>\n            <input type=\"date\" [(ngModel)]=\"employee.dateAvailable\" />\n        </div>\n    </div>\n\n    <div class=\"form-row\">\n        <div class=\"form-group\">\n            <label>Desired Salary</label>\n            <input type=\"number\" [(ngModel)]=\"employee.desiredSalary\" />\n        </div>\n    </div>\n\n    <hr>\n    <h3>Additional Information</h3>\n\n    <div class=\"form-group\">\n        <label>\n            <input type=\"checkbox\" [(ngModel)]=\"employee.isCitizen\" />\n            Are you a citizen of the United States?\n        </label>\n    </div>\n\n    <div class=\"form-group\" *ngIf=\"!employee.isCitizen\">\n        <label>\n            <input type=\"checkbox\" [(ngModel)]=\"employee.authorizedToWork\" />\n            If no, are you authorized to work in the U.S.?\n        </label>\n    </div>\n\n    <div class=\"form-group\">\n        <label>\n            <input type=\"checkbox\" [(ngModel)]=\"employee.workedBefore\" />\n            Have you ever worked for this company?\n        </label>\n    </div>\n\n    <div class=\"form-group\" *ngIf=\"employee.workedBefore\">\n        <label>If yes, when?</label>\n        <input type=\"text\" [(ngModel)]=\"employee.workedBeforeWhen\" />\n    </div>\n</div>\n        </div>\n    \n\n  <!-- Step 2: Education -->\n<div class=\"container\">\n  <div class=\"step\" [class.active]=\"currentStep === 2\">\n    <h3>Education</h3>\n    <div class=\"form-group\">\n      <label>High School Name</label>\n      <input type=\"text\" [(ngModel)]=\"employee.education.highSchool.name\" />\n      <label>Address</label>\n      <input type=\"text\" [(ngModel)]=\"employee.education.highSchool.address\" />\n      <label>From</label>\n      <input type=\"date\" [(ngModel)]=\"employee.education.highSchool.from\" />\n      <label>To</label>\n      <input type=\"date\" [(ngModel)]=\"employee.education.highSchool.to\" />\n      <label>\n        <input type=\"checkbox\" [(ngModel)]=\"employee.education.highSchool.graduated\" /> Did you graduate?\n      </label>\n      <label>Degree</label>\n      <input type=\"text\" [(ngModel)]=\"employee.education.highSchool.degree\" />\n    </div>\n    <hr>\n    <div class=\"form-group\">\n      <label>College Name</label>\n      <input type=\"text\" [(ngModel)]=\"employee.education.college.name\" />\n      <label>Address</label>\n      <input type=\"text\" [(ngModel)]=\"employee.education.college.address\" />\n      <label>From</label>\n      <input type=\"date\" [(ngModel)]=\"employee.education.college.from\" />\n      <label>To</label>\n      <input type=\"date\" [(ngModel)]=\"employee.education.college.to\" />\n      <label>\n        <input type=\"checkbox\" [(ngModel)]=\"employee.education.college.graduated\" /> Did you graduate?\n      </label>\n      <label>Degree</label>\n      <input type=\"text\" [(ngModel)]=\"employee.education.college.degree\" />\n    </div>\n    <hr>\n    <div class=\"form-group\">\n      <label>Other Education</label>\n      <input type=\"text\" [(ngModel)]=\"employee.education.other.name\" />\n      <label>Address</label>\n      <input type=\"text\" [(ngModel)]=\"employee.education.other.address\" />\n      <label>From</label>\n      <input type=\"date\" [(ngModel)]=\"employee.education.other.from\" />\n      <label>To</label>\n      <input type=\"date\" [(ngModel)]=\"employee.education.other.to\" />\n      <label>\n        <input type=\"checkbox\" [(ngModel)]=\"employee.education.other.graduated\" /> Did you graduate?\n      </label>\n      <label>Degree</label>\n      <input type=\"text\" [(ngModel)]=\"employee.education.other.degree\" />\n    </div>\n  </div>\n</div>\n  <!-- Step 3: References -->\n<div class=\"container\">\n  <div class=\"step\" [class.active]=\"currentStep === 3\">\n    <h3>References</h3>\n    <div *ngFor=\"let reference of employee.references; let i = index\" class=\"reference-section\">\n      <hr>\n      <label>Full Name</label>\n      <input type=\"text\" [(ngModel)]=\"reference.fullName\" />\n      <label>Relationship</label>\n      <input type=\"text\" [(ngModel)]=\"reference.relationship\" />\n      <label>Company</label>\n      <input type=\"text\" [(ngModel)]=\"reference.company\" />\n      <label>Phone</label>\n      <input type=\"text\" [(ngModel)]=\"reference.phone\" />\n      <label>Address</label>\n      <input type=\"text\" [(ngModel)]=\"reference.address\" />\n    </div>\n  </div>\n</div>\n    <!-- Step 4: Previous Employment -->\n<div class=\"container\">\n    <div class=\"step\" [class.active]=\"currentStep === 4\">\n      <h3>Previous Employment</h3>\n      <div *ngFor=\"let job of employee.previousEmployment; let i = index\" class=\"form-group\">\n        <hr>\n        <label>Company</label>\n        <input type=\"text\" [(ngModel)]=\"job.company\" />\n        <label>Phone</label>\n        <input type=\"text\" [(ngModel)]=\"job.phone\" />\n        <label>Address</label>\n        <input type=\"text\" [(ngModel)]=\"job.address\" />\n        <label>Supervisor</label>\n        <input type=\"text\" [(ngModel)]=\"job.supervisor\" />\n        <label>Job Title</label>\n        <input type=\"text\" [(ngModel)]=\"job.jobTitle\" />\n        <label>Starting Salary</label>\n        <input type=\"number\" [(ngModel)]=\"job.startingSalary\" />\n        <label>Ending Salary</label>\n        <input type=\"number\" [(ngModel)]=\"job.endingSalary\" />\n        <label>Responsibilities</label>\n        <input type=\"text\" [(ngModel)]=\"job.responsibilities\" />\n        <label>From</label>\n        <input type=\"date\" [(ngModel)]=\"job.from\" />\n        <label>To</label>\n        <input type=\"date\" [(ngModel)]=\"job.to\" />\n        <label>Reason for Leaving</label>\n        <input type=\"text\" [(ngModel)]=\"job.reasonForLeaving\" />\n        <label>\n          <input type=\"checkbox\" [(ngModel)]=\"job.contactSupervisor\" /> May we contact your previous supervisor for a reference?\n        </label>\n      </div>\n    </div>\n</div>\n  \n    <!-- Step 5: Military Service -->\n<div class=\"container\">\n    <div class=\"step\" [class.active]=\"currentStep === 5\">\n      <h3>Military Service</h3>\n      <div class=\"form-group\">\n        <label>Branch</label>\n        <input type=\"text\" [(ngModel)]=\"employee.militaryService.branch\" />\n        <label>From</label>\n        <input type=\"date\" [(ngModel)]=\"employee.militaryService.from\" />\n        <label>To</label>\n        <input type=\"date\" [(ngModel)]=\"employee.militaryService.to\" />\n        <label>Rank at Discharge</label>\n        <input type=\"text\" [(ngModel)]=\"employee.militaryService.rankAtDischarge\" />\n        <label>Type of Discharge</label>\n        <input type=\"text\" [(ngModel)]=\"employee.militaryService.typeOfDischarge\" />\n        <label>If other than honorable, explain:</label>\n        <input type=\"text\" [(ngModel)]=\"employee.militaryService.explanation\" />\n      </div>\n    </div>\n</div>\n    <!-- Step 6: Review & Submit -->\n<div class=\"container\">\n    <div class=\"step\" [class.active]=\"currentStep === 6\">\n      <h3>Review Your Application</h3>\n      <div class=\"review-section\">\n        <p><strong>Full Name:</strong> {{ employee.fullName }}</p>\n        <p><strong>Address:</strong> {{ employee.address }}, {{ employee.city }}, {{ employee.state }} {{ employee.zip }}</p>\n        <p><strong>Phone:</strong> {{ employee.phone }}</p>\n        <p><strong>Email:</strong> {{ employee.email }}</p>\n        <p><strong>Position Applied:</strong> {{ employee.positionApplied }}</p>\n        <p><strong>Signature:</strong> <input type=\"text\" [(ngModel)]=\"employee.disclaimer.signature\" /></p>\n        <p><strong>Date:</strong> <input type=\"date\" [(ngModel)]=\"employee.disclaimer.date\" /></p>\n      </div>\n    </div>\n</div>\n    <!-- Navigation Buttons -->\n    <div class=\"button-group\">\n      <button (click)=\"prevStep()\" [disabled]=\"currentStep === 1\">Previous</button>\n      <button *ngIf=\"currentStep < 6\" (click)=\"nextStep()\">Next</button>\n      <button *ngIf=\"currentStep === 6\" (click)=\"submitApplication()\">Submit</button>\n    </div>\n\n  ","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@Component({\n  standalone: true,\n  selector: 'app-employment-verification',\n  templateUrl: './employment-verification.component.html',\n  styleUrls: ['./employment-verification.component.css'],\n  imports: [CommonModule, ReactiveFormsModule]\n})\nexport class EmploymentVerificationComponent implements OnInit {\n  verificationForm: FormGroup;\n\n  constructor(private fb: FormBuilder) {\n    this.verificationForm = this.fb.group({\n      // Section 1: Employee Information\n      lastName: ['', Validators.required],\n      firstName: ['', Validators.required],\n      middleInitial: [''],\n      otherNames: [''],\n      address: ['', Validators.required],\n      aptNumber: [''],\n      city: ['', Validators.required],\n      state: ['', Validators.required],\n      zipCode: ['', Validators.required],\n      dateOfBirth: ['', Validators.required],\n      socialSecurity: ['', Validators.required],\n      email: [''],\n      telephone: [''],\n      \n      // Citizenship Status\n      citizenshipStatus: ['', Validators.required],\n      uscisNumber: [''],\n      i94Number: [''],\n      passportNumber: [''],\n      countryOfIssuance: [''],\n\n      // Employee Signature Section\n      employeeSignature: ['', Validators.required],\n      employeeSignatureDate: ['', Validators.required],\n\n      // Section 2: Employer Review\n      documentTitleA: [''],\n      issuingAuthorityA: [''],\n      documentNumberA: [''],\n      expirationDateA: [''],\n      \n      documentTitleB: [''],\n      issuingAuthorityB: [''],\n      documentNumberB: [''],\n      expirationDateB: [''],\n      \n      documentTitleC: [''],\n      issuingAuthorityC: [''],\n      documentNumberC: [''],\n      expirationDateC: [''],\n\n      // Additional Information\n      additionalInformation: [''],\n      alternativeProcedure: [false],\n\n      // Employer Certification\n      firstDayOfEmployment: [''],\n      employerTitle: [''],\n      employerName: [''],\n      employerSignature: [''],\n      employerSignatureDate: [''],\n      businessName: [''],\n      businessAddress: ['']\n    });\n  }\n\n  ngOnInit(): void {\n    // Set default dates\n    const today = new Date().toISOString().split('T')[0];\n    this.verificationForm.patchValue({\n      employeeSignatureDate: today,\n      employerSignatureDate: today\n    });\n  }\n\n  onSubmit() {\n    if (this.verificationForm.valid) {\n      console.log(this.verificationForm.value);\n    } else {\n      Object.keys(this.verificationForm.controls).forEach(key => {\n        const control = this.verificationForm.get(key);\n        if (control?.invalid) {\n          control.markAsTouched();\n        }\n      });\n    }\n  }\n}","<form [formGroup]=\"verificationForm\" (ngSubmit)=\"onSubmit()\" class=\"i9-form\">\n    <div class=\"form-header\">\n      <h2>Employment Eligibility Verification</h2>\n      <p class=\"form-subtitle\">Department of Homeland Security</p>\n      <p class=\"form-subtitle\">U.S. Citizenship and Immigration Services</p>\n    </div>\n  \n    <!-- Section 1: Employee Information -->\n    <div class=\"section\">\n      <h3>Section 1. Employee Information and Attestation</h3>\n      \n      <div class=\"form-row\">\n        <div class=\"form-group\">\n          <label for=\"lastName\">Last Name (Family Name)</label>\n          <input id=\"lastName\" type=\"text\" formControlName=\"lastName\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"firstName\">First Name</label>\n          <input id=\"firstName\" type=\"text\" formControlName=\"firstName\">\n        </div>\n        <div class=\"form-group small\">\n          <label for=\"middleInitial\">Middle Initial</label>\n          <input id=\"middleInitial\" type=\"text\" formControlName=\"middleInitial\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"otherNames\">Other Names Used</label>\n          <input id=\"otherNames\" type=\"text\" formControlName=\"otherNames\">\n        </div>\n      </div>\n  \n      <div class=\"form-row\">\n        <div class=\"form-group large\">\n          <label for=\"address\">Address (Street Number and Name)</label>\n          <input id=\"address\" type=\"text\" formControlName=\"address\">\n        </div>\n        <div class=\"form-group small\">\n          <label for=\"aptNumber\">Apt. Number</label>\n          <input id=\"aptNumber\" type=\"text\" formControlName=\"aptNumber\">\n        </div>\n      </div>\n  \n      <div class=\"form-row\">\n        <div class=\"form-group\">\n          <label for=\"city\">City or Town</label>\n          <input id=\"city\" type=\"text\" formControlName=\"city\">\n        </div>\n        <div class=\"form-group small\">\n          <label for=\"state\">State</label>\n          <input id=\"state\" type=\"text\" formControlName=\"state\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"zipCode\">ZIP Code</label>\n          <input id=\"zipCode\" type=\"text\" formControlName=\"zipCode\">\n        </div>\n      </div>\n  \n      <div class=\"form-row\">\n        <div class=\"form-group\">\n          <label for=\"dateOfBirth\">Date of Birth (mm/dd/yyyy)</label>\n          <input id=\"dateOfBirth\" type=\"date\" formControlName=\"dateOfBirth\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"socialSecurity\">U.S. Social Security Number</label>\n          <input id=\"socialSecurity\" type=\"text\" formControlName=\"socialSecurity\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"email\">Employee's Email Address</label>\n          <input id=\"email\" type=\"email\" formControlName=\"email\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"telephone\">Employee's Telephone Number</label>\n          <input id=\"telephone\" type=\"tel\" formControlName=\"telephone\">\n        </div>\n      </div>\n  \n      <!-- Citizenship Status -->\n      <div class=\"citizenship-section\">\n        <h4>Employee attestation (check one):</h4>\n        <div class=\"radio-group\">\n          <label>\n            <input type=\"radio\" formControlName=\"citizenshipStatus\" value=\"citizen\">\n            A citizen of the United States\n          </label>\n          <label>\n            <input type=\"radio\" formControlName=\"citizenshipStatus\" value=\"noncitizen\">\n            A noncitizen national of the United States\n          </label>\n          <label>\n            <input type=\"radio\" formControlName=\"citizenshipStatus\" value=\"permanent\">\n            A lawful permanent resident\n          </label>\n          <label>\n            <input type=\"radio\" formControlName=\"citizenshipStatus\" value=\"authorized\">\n            An alien authorized to work\n          </label>\n        </div>\n      </div>\n  \n      <!-- Document Numbers Section -->\n      <div class=\"documents-section\" *ngIf=\"verificationForm.get('citizenshipStatus')?.value === 'permanent'\">\n        <div class=\"form-row\">\n          <div class=\"form-group\">\n            <label for=\"uscisNumber\">USCIS Number</label>\n            <input id=\"uscisNumber\" type=\"text\" formControlName=\"uscisNumber\">\n          </div>\n        </div>\n      </div>\n  \n      <!-- Employee Signature -->\n      <div class=\"signature-section\">\n        <div class=\"form-group\">\n          <label for=\"employeeSignature\">Signature of Employee</label>\n          <input id=\"employeeSignature\" type=\"text\" formControlName=\"employeeSignature\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"employeeSignatureDate\">Today's Date (mm/dd/yyyy)</label>\n          <input id=\"employeeSignatureDate\" type=\"date\" formControlName=\"employeeSignatureDate\">\n        </div>\n      </div>\n    </div>\n  \n    <!-- Section 2: Employer Review -->\n    <div class=\"section\">\n      <h3>Section 2. Employer Review and Verification</h3>\n      \n      <div class=\"documents-grid\">\n        <div class=\"document-column\">\n          <h4>List A</h4>\n          <div class=\"form-group\">\n            <label>Document Title</label>\n            <input type=\"text\" formControlName=\"documentTitleA\">\n          </div>\n          <div class=\"form-group\">\n            <label>Issuing Authority</label>\n            <input type=\"text\" formControlName=\"issuingAuthorityA\">\n          </div>\n          <div class=\"form-group\">\n            <label>Document Number</label>\n            <input type=\"text\" formControlName=\"documentNumberA\">\n          </div>\n          <div class=\"form-group\">\n            <label>Expiration Date</label>\n            <input type=\"date\" formControlName=\"expirationDateA\">\n          </div>\n        </div>\n  \n        <div class=\"document-column\">\n          <h4>List B</h4>\n          <div class=\"form-group\">\n            <label>Document Title</label>\n            <input type=\"text\" formControlName=\"documentTitleB\">\n          </div>\n          <div class=\"form-group\">\n            <label>Issuing Authority</label>\n            <input type=\"text\" formControlName=\"issuingAuthorityB\">\n          </div>\n          <div class=\"form-group\">\n            <label>Document Number</label>\n            <input type=\"text\" formControlName=\"documentNumberB\">\n          </div>\n          <div class=\"form-group\">\n            <label>Expiration Date</label>\n            <input type=\"date\" formControlName=\"expirationDateB\">\n          </div>\n        </div>\n  \n        <div class=\"document-column\">\n          <h4>List C</h4>\n          <div class=\"form-group\">\n            <label>Document Title</label>\n            <input type=\"text\" formControlName=\"documentTitleC\">\n          </div>\n          <div class=\"form-group\">\n            <label>Issuing Authority</label>\n            <input type=\"text\" formControlName=\"issuingAuthorityC\">\n          </div>\n          <div class=\"form-group\">\n            <label>Document Number</label>\n            <input type=\"text\" formControlName=\"documentNumberC\">\n          </div>\n          <div class=\"form-group\">\n            <label>Expiration Date</label>\n            <input type=\"date\" formControlName=\"expirationDateC\">\n          </div>\n        </div>\n      </div>\n  \n      <div class=\"additional-info\">\n        <div class=\"form-group\">\n          <label for=\"additionalInformation\">Additional Information</label>\n          <textarea id=\"additionalInformation\" formControlName=\"additionalInformation\"></textarea>\n        </div>\n        <div class=\"form-group checkbox\">\n          <label>\n            <input type=\"checkbox\" formControlName=\"alternativeProcedure\">\n            Check here if you used an alternative procedure\n          </label>\n        </div>\n      </div>\n  \n      <!-- Certification -->\n      <div class=\"certification-section\">\n        <div class=\"form-row\">\n          <div class=\"form-group\">\n            <label>First Day of Employment (mm/dd/yyyy)</label>\n            <input type=\"date\" formControlName=\"firstDayOfEmployment\">\n          </div>\n        </div>\n        \n        <div class=\"form-row\">\n          <div class=\"form-group\">\n            <label>Employer Title</label>\n            <input type=\"text\" formControlName=\"employerTitle\">\n          </div>\n          <div class=\"form-group\">\n            <label>Last Name, First Name of Employer</label>\n            <input type=\"text\" formControlName=\"employerName\">\n          </div>\n        </div>\n  \n        <div class=\"form-row\">\n          <div class=\"form-group\">\n            <label>Signature of Employer</label>\n            <input type=\"text\" formControlName=\"employerSignature\">\n          </div>\n          <div class=\"form-group\">\n            <label>Today's Date</label>\n            <input type=\"date\" formControlName=\"employerSignatureDate\">\n          </div>\n        </div>\n  \n        <div class=\"form-row\">\n          <div class=\"form-group\">\n            <label>Business Name</label>\n            <input type=\"text\" formControlName=\"businessName\">\n          </div>\n          <div class=\"form-group\">\n            <label>Business Address</label>\n            <input type=\"text\" formControlName=\"businessAddress\">\n          </div>\n        </div>\n      </div>\n    </div>\n  \n    <div class=\"button-group\">\n      <button type=\"submit\">Submit Form</button>\n      <button type=\"reset\">Reset Form</button>\n    </div>\n  </form>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@Component({\n  standalone: true,\n  selector: 'app-hire-checklist',\n  templateUrl: './hire-checklist.component.html',\n  styleUrls: ['./hire-checklist.component.css'],\n  imports: [CommonModule, ReactiveFormsModule]\n})\nexport class HireChecklistComponent implements OnInit {\n  checklistForm: FormGroup;\n\n  constructor(private fb: FormBuilder) {\n    this.checklistForm = this.fb.group({\n      name: [''],\n      title: [''],\n      department: [''],\n      \n      // Forms Completed Section\n      employmentApplication: [false],\n      other1: [false],\n      \n      // New Employee Paperwork Section\n      w4Form: [false],\n      i9Form: [false],\n      directDeposit: [false],\n      statusChange: [false],\n      handbookAcknowledgement: [false],\n      harassmentPolicy: [false],\n      propertyReturn: [false],\n      wageProtection: [false],\n\n      // New Hire Packet Section\n      employeeHandbook: [false],\n      jobDescription: [false],\n      insuranceInfo: [false],\n      holidaySchedule: [false],\n      brochures: [false],\n      harassmentPamphlet: [false],\n      workersComp: [false],\n      disabilityInfo: [false],\n      phoneList: [false],\n      other2: [false],\n\n      // Manager Discussion Section\n      companyHistory: [false],\n      orientationPeriod: [false],\n      departmentResponsibilities: [false],\n      positionDuties: [false],\n      workHours: [false],\n      attendance: [false],\n      timeOffProcedure: [false],\n      timeRecords: [false],\n      safetyRequirements: [false],\n      dressCode: [false],\n      other3: [false],\n\n      // Acknowledgment Section\n      employeeSignature: [''],\n      signatureDate: ['']\n    });\n  }\n\n  ngOnInit(): void {\n    // Set default date to today\n    this.checklistForm.patchValue({\n      signatureDate: new Date().toISOString().split('T')[0]\n    });\n  }\n\n  onSubmit() {\n    if (this.checklistForm.valid) {\n      console.log(this.checklistForm.value);\n    }\n  }\n}","<form [formGroup]=\"checklistForm\" (ngSubmit)=\"onSubmit()\" class=\"checklist-form\">\n    <div class=\"header-info\">\n      <div class=\"form-row\">\n        <div class=\"form-group\">\n          <label for=\"name\">Name:</label>\n          <input type=\"text\" id=\"name\" formControlName=\"name\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"title\">Title:</label>\n          <input type=\"text\" id=\"title\" formControlName=\"title\">\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group\">\n          <label for=\"department\">Department:</label>\n          <input type=\"text\" id=\"department\" formControlName=\"department\">\n        </div>\n      </div>\n    </div>\n  \n    <div class=\"section\">\n      <h3>Forms Completed by Job Candidate for Employee File</h3>\n      <div class=\"checkbox-group\">\n        <label>\n          <input type=\"checkbox\" formControlName=\"employmentApplication\">\n          Employment application and resume (if any)\n        </label>\n        <label>\n          <input type=\"checkbox\" formControlName=\"other1\">\n          Other\n        </label>\n      </div>\n    </div>\n  \n    <div class=\"section\">\n      <h3>New Employee to Complete New Hire Paperwork and Return to Accounting/HR</h3>\n      <div class=\"checkbox-group\">\n        <label>\n          <input type=\"checkbox\" formControlName=\"w4Form\">\n          W-4 Form (withholdings)\n        </label>\n        <label>\n          <input type=\"checkbox\" formControlName=\"i9Form\">\n          I-9 Form (employment eligibility verification to be completed no later than 3 days from hire date)\n        </label>\n        <label>\n          <input type=\"checkbox\" formControlName=\"directDeposit\">\n          Direct deposit authorization\n        </label>\n        <label>\n          <input type=\"checkbox\" formControlName=\"statusChange\">\n          Employee status change form and new employee information\n        </label>\n        <label>\n          <input type=\"checkbox\" formControlName=\"handbookAcknowledgement\">\n          Employee handbook acknowledgement & agreement\n        </label>\n        <label>\n          <input type=\"checkbox\" formControlName=\"harassmentPolicy\">\n          Acknowledgement of receipt of Company's policy against harassment\n        </label>\n        <label>\n          <input type=\"checkbox\" formControlName=\"propertyReturn\">\n          Employer property return agreement\n        </label>\n        <label>\n          <input type=\"checkbox\" formControlName=\"wageProtection\">\n          Ca. DLSE 2810.5 wage protection/disclosure form\n        </label>\n      </div>\n    </div>\n  \n    <div class=\"section\">\n      <h3>New Employee Given New Hire Packet That Includes</h3>\n      <div class=\"checkbox-group\">\n        <label>\n          <input type=\"checkbox\" formControlName=\"employeeHandbook\">\n          Employee Handbook\n        </label>\n        <label>\n          <input type=\"checkbox\" formControlName=\"jobDescription\">\n          Job description\n        </label>\n        <label>\n          <input type=\"checkbox\" formControlName=\"insuranceInfo\">\n          Information on current group insurance plans\n        </label>\n        <label>\n          <input type=\"checkbox\" formControlName=\"holidaySchedule\">\n          Holiday schedule for current year\n        </label>\n        <label>\n          <input type=\"checkbox\" formControlName=\"brochures\">\n          Various brochures and pamphlets\n        </label>\n        <label>\n          <input type=\"checkbox\" formControlName=\"harassmentPamphlet\">\n          Sexual harassment pamphlet\n        </label>\n        <label>\n          <input type=\"checkbox\" formControlName=\"workersComp\">\n          California workers' compensation pamphlet\n        </label>\n        <label>\n          <input type=\"checkbox\" formControlName=\"disabilityInfo\">\n          EDD's State Disability Insurance and Paid Family Leave pamphlets\n        </label>\n        <label>\n          <input type=\"checkbox\" formControlName=\"phoneList\">\n          List of telephone extensions and e-mail addresses\n        </label>\n        <label>\n          <input type=\"checkbox\" formControlName=\"other2\">\n          Other\n        </label>\n      </div>\n    </div>\n  \n    <div class=\"section\">\n      <h3>Manager to Discuss with New Employee</h3>\n      <div class=\"checkbox-group\">\n        <label>\n          <input type=\"checkbox\" formControlName=\"companyHistory\">\n          History, mission and purpose of the Company\n        </label>\n        <label>\n          <input type=\"checkbox\" formControlName=\"orientationPeriod\">\n          90-day new employee orientation period\n        </label>\n        <label>\n          <input type=\"checkbox\" formControlName=\"departmentResponsibilities\">\n          Department's responsibilities and assigned office/workstation\n        </label>\n        <label>\n          <input type=\"checkbox\" formControlName=\"positionDuties\">\n          The responsibilities and duties of the position\n        </label>\n        <label>\n          <input type=\"checkbox\" formControlName=\"workHours\">\n          Hours of work, rest breaks, lunch/meal period\n        </label>\n        <label>\n          <input type=\"checkbox\" formControlName=\"attendance\">\n          The importance of maintaining regular attendance\n        </label>\n        <label>\n          <input type=\"checkbox\" formControlName=\"timeOffProcedure\">\n          Proper procedure for requesting time off\n        </label>\n        <label>\n          <input type=\"checkbox\" formControlName=\"timeRecords\">\n          Instructions on completing time records\n        </label>\n        <label>\n          <input type=\"checkbox\" formControlName=\"safetyRequirements\">\n          Workplace safety and security requirements\n        </label>\n        <label>\n          <input type=\"checkbox\" formControlName=\"dressCode\">\n          Proper dress and grooming requirements\n        </label>\n        <label>\n          <input type=\"checkbox\" formControlName=\"other3\">\n          Other\n        </label>\n      </div>\n    </div>\n  \n    <div class=\"section acknowledgment-section\">\n        <h3 class=\"acknowledgment-header\">EMPLOYEE ACKNOWLEDGES RECEIPT OR DISCUSSION OF THE ABOVE ITEMS</h3>\n        <div class=\"form-row acknowledgment-row\">\n          <div class=\"form-group\">\n            <label for=\"employeeSignature\">EMPLOYEE:</label>\n            <input type=\"text\" id=\"employeeSignature\" formControlName=\"employeeSignature\" class=\"signature-input\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"signatureDate\">DATE:</label>\n            <input type=\"date\" id=\"signatureDate\" formControlName=\"signatureDate\" class=\"date-input\">\n          </div>\n        </div>\n        <p class=\"acknowledgment-note\">(Please return this form with completed new hire paperwork to Human Resources)</p>\n      </div>\n    \n      <div class=\"button-group\">\n        <button type=\"submit\">Submit</button>\n        <button type=\"reset\">Reset</button>\n      </div>\n      \n    <div class=\"button-group\">\n      <button type=\"submit\">Submit</button>\n      <button type=\"reset\">Reset</button>\n    </div>\n\n  \n    \n  </form>","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  standalone: true,\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n  imports: [CommonModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HomeComponent implements OnInit {\n  username!: string | null;\n  isHROpen: boolean = false;\n  isSalesOpen: boolean = false;\n\n  constructor(private router: Router, private authService: AuthService) {}\n\n  ngOnInit(): void {\n    this.username = this.authService.getFullname();\n  }\n\n  navigateTo(page: string): void {\n    this.router.navigate([`/${page}`]);\n    if (this.isHROpen) {\n      this.isHROpen = false; // Close HR dropdown after navigation\n    }\n  }\n\n  toggleHR(): void {\n    this.isHROpen = !this.isHROpen;\n  }\n\n  // Optional: Close HR dropdown when clicking outside\n  closeHR(): void {\n    if (this.isHROpen) {\n      this.isHROpen = false;\n    }\n  }\n\n  toggleSales() {\n    this.isSalesOpen = !this.isSalesOpen;\n    // Optionally close HR dropdown when opening Sales\n    if (this.isSalesOpen) {\n      this.isHROpen = false;\n    }\n  }\n\n  \n  logout(): void {\n    this.authService.logout();\n  }\n}","<div class=\"page container\">\n  <div class=\"button-container\">\n    <button class=\"nav-button\" (click)=\"navigateTo('products')\">Products</button>\n\n    <!-- Sales Section -->\n    <div class=\"sales-section\">\n      <button class=\"nav-button\" (click)=\"toggleSales()\">Sales</button>\n      <div class=\"sales-dropdown\" *ngIf=\"isSalesOpen\">\n        <button class=\"nav-button\" (click)=\"navigateTo('order-links')\">New Order</button>\n        <button class=\"nav-button\" (click)=\"navigateTo('orders')\">Existing Orders</button>\n        <button class=\"nav-button\" (click)=\"navigateTo('preorder-links')\">Preorders</button>\n      </div>\n    </div>\n\n    <button class=\"nav-button\" (click)=\"navigateTo('driver')\">Routes</button>\n\n    <!-- HR Section -->\n    <div class=\"hr-section\">\n      <button class=\"nav-button\" (click)=\"toggleHR()\">HR</button>\n      <div class=\"hr-dropdown\" *ngIf=\"isHROpen\">\n        <button class=\"nav-button\" (click)=\"navigateTo('employee-application')\">Employee Application</button>\n        <button class=\"nav-button\" (click)=\"navigateTo('new-hire-checklist')\">New Hire Check List</button>\n        <button class=\"nav-button\" (click)=\"navigateTo('employment-verification')\">Employment Verification</button>\n        <button class=\"nav-button\" (click)=\"navigateTo('w4')\">W4</button>\n        <button class=\"nav-button\" (click)=\"navigateTo('withholding')\">Withholding</button>\n        <button class=\"nav-button\" (click)=\"navigateTo('at-will-employment')\">At Will Employment</button>\n        <button class=\"nav-button\" (click)=\"navigateTo('self-identification')\">Self Identification</button>\n      </div>\n    </div>\n\n    <button class=\"nav-button\" (click)=\"navigateTo('reports')\">Reports</button>\n    <button class=\"nav-button logout-button\" (click)=\"logout()\">Logout</button>\n  </div>\n\n  <div class=\"button-container user-info\">\n    Welcome, {{ username }}!\n  </div>\n\n  <div class=\"image-grid\">\n    <img src=\"assets/goldenstateseafood.png\" alt=\"GS Image\" class=\"grid-image image1\">\n    <img src=\"assets/logo.png\" alt=\"Logo Image\" class=\"grid-image image2\">\n    <img src=\"assets/fogriver3.png\" alt=\"Fog River Image\" class=\"grid-image image3\">\n    <img src=\"assets/naturecure.png\" alt=\"Nature Cure Image\" class=\"grid-image image4\">\n  </div>\n</div>","import { ChangeDetectionStrategy, Component, Input, TemplateRef } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\n\n@Component({\n  standalone: true,\n  selector: 'app-image-thumbnail',\n  templateUrl: './image-thumbnail.component.html',\n  styleUrl: './image-thumbnail.component.css',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ImageThumbnailComponent {\n  @Input() imageUrl: string = '';\n  @Input() title: string | null = ' ';\n\n  modalRef!: BsModalRef;\n\n  constructor(private modalService: BsModalService) {}\n\n  openModal(template: string | TemplateRef<unknown>) {\n    this.modalRef = this.modalService.show(template, Object.assign({}, { class: 'modal-lg' }));\n  }\n}\n","<!-- eslint-disable @angular-eslint/template/click-events-have-key-events -->\n<!-- eslint-disable @angular-eslint/template/interactive-supports-focus -->\n<div (click)=\"openModal(imageModal)\">\n    <img [src]=\"imageUrl\" alt=\"Image Thumbnail\" title=\"Click to enlarge\" class=\"thumbnail\" (keyup)=\"modalRef.hide()\">\n</div>\n\n<ng-template #imageModal>\n    <div class=\" modal-header\">\n        <h4 class=\"modal-title\">{{title}}</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body text-center\">\n        <img [src]=\"imageUrl\" alt=\"Full Image\" class=\"full-image\" (click)=\"modalRef.hide()\" (keyup)=\"modalRef.hide()\">\n    </div>\n</ng-template>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\nimport { Router, RouterModule } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { catchError, throwError } from 'rxjs';\nimport { LoginResponse } from 'src/app/models/login-response.model ';\nimport { AppInstallPromptComponent } from '../app-install-prompt/app-install-prompt.component';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  standalone: true,\n  imports: [CommonModule, MatFormFieldModule, MatInputModule, MatButtonModule, ReactiveFormsModule, RouterModule, AppInstallPromptComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoginComponent {\n  loginForm: FormGroup;\n  loading = false;\n  errorMessage: string | null = null;\n\n  constructor(private router: Router, private cdr: ChangeDetectorRef, private formBuilder: FormBuilder, private authService: AuthService) {\n    this.loginForm = this.formBuilder.group({\n      username: ['', [Validators.required]],\n      password: ['', Validators.required],\n    });\n  }\n\n  onLogin() {\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    this.errorMessage = null;\n    const { username, password } = this.loginForm.value;\n\n    this.authService\n      .login(username, password)\n      .pipe(\n        catchError((loginError) => {\n          const errorCode = loginError.status;\n          let errorMessage = loginError.error?.message || 'Please check your username and password';\n          if (errorCode == 401) {\n            errorMessage = 'Please check your username and password';\n          }\n          this.loading = false;\n          this.errorMessage = `Login failed. ${errorMessage}.`;\n          this.cdr.markForCheck();\n\n          // Rethrow the error for the global error handler\n          return throwError(() => loginError);\n        }),\n      )\n      .subscribe({\n        next: (loginResponse: LoginResponse) => {\n          const fullname = `${loginResponse.firstName ?? ''} ${loginResponse.lastName ?? ''}`.trim();\n          this.authService.saveFullnameAndToken(fullname, loginResponse.token);\n          this.router.navigate(['/products']);\n        },\n      });\n  }\n}\n","<div class=\"container\">\n    <div class=\"login-container\">\n        <div class=\"logo-container\">\n            <img src=\"assets/logo.png\" alt=\"Company Logo\" class=\"logo\">\n        </div>\n\n        <h1>Login</h1>\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin()\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Username</mat-label>\n                <input matInput type=\"text\" formControlName=\"username\" placeholder=\"Enter your username\" autocomplete=\"username\">\n            </mat-form-field>\n\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Password</mat-label>\n                <input matInput type=\"password\" formControlName=\"password\" placeholder=\"Enter your password\" autocomplete=\"current-password\">\n            </mat-form-field>\n\n            <a [routerLink]=\"['/password-request']\">\n                Forgot password?\n            </a>\n\n            <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"loading || loginForm.invalid\">\n                <span *ngIf=\"!loading\">Login</span>\n                <span *ngIf=\"loading\">Logging in...</span>\n            </button>\n        </form>\n\n        <div *ngIf=\"errorMessage\" class=\"error-message\">\n            {{ errorMessage }}\n        </div>\n    </div>\n</div>\n\n<app-install-prompt></app-install-prompt>","import { CommonModule } from '@angular/common';\nimport { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-logo',\n  standalone: true,\n  imports: [CommonModule, RouterModule],\n  templateUrl: './logo.component.html',\n  styleUrls: ['./logo.component.css'],\n})\nexport class LogoComponent implements OnInit, OnChanges {\n  @Input() companyId: number = 1;\n\n  imageSrc = 'assets/logo.png';\n  imageBackgroundColor = '#000000';\n  isLoggedIn: boolean = false;\n\n  constructor(private authService: AuthService) {\n    this.isLoggedIn = authService.isLoggedIn();\n  }\n\n  ngOnInit() {\n    this.updateLogo();\n  }\n\n  ngOnChanges(): void {\n    this.updateLogo();\n  }\n\n  updateLogo() {\n    if (this.companyId === 14) {\n      this.imageSrc = 'assets/fogriver.png';\n      this.imageBackgroundColor = '#000000'; // Black background\n    } else {\n      this.imageSrc = 'assets/logo.png';\n      this.imageBackgroundColor = 'rgba(0, 16, 46, 1)'; // Dark blue background\n    }\n  }\n}\n","@if(isLoggedIn)\n{\n<a [routerLink]=\"['/home']\">\n    <div *ngIf=\"companyId\" class=\"image-container\" [ngStyle]=\"{'background-color': imageBackgroundColor}\">\n        <img [src]=\"imageSrc\" alt=\"Company Logo\">\n    </div>\n</a>\n} @else {\n<div *ngIf=\"companyId\" class=\"image-container\" [ngStyle]=\"{'background-color': imageBackgroundColor}\">\n    <img [src]=\"imageSrc\" alt=\"Company Logo\">\n</div>\n}","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n})\nexport class LogoutComponent {\n  constructor(private authService: AuthService) {\n    this.authService.logout();\n  }\n}\n","<br /><br /><br />\n\n<h1 style=\"padding-left: 200px;\">You have been logged out.</h1>\n\n<br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Location, CommonModule } from '@angular/common';\nimport { LogoComponent } from '../logo/logo.component';\nimport { OrderConfirmation } from 'src/app/models/order-confirmation.model';\n\n@Component({\n  standalone: true,\n  selector: 'app-order-confirmation',\n  templateUrl: './order-confirmation.component.html',\n  styleUrls: ['./order-confirmation.component.css'],\n  imports: [CommonModule, LogoComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationComponent implements OnInit {\n  orderData!: OrderConfirmation;\n  companyId!: number;\n\n  constructor(private router: Router, private location: Location) {}\n\n  ngOnInit(): void {\n    this.orderData = history.state['order']; // Access the passed data here'\n    this.companyId = history.state['companyId'];\n  }\n\n  goBack(): void {\n    this.router.navigate([`/customer/${this.orderData.customerId}/order-form`]);\n  }\n}\n","<div class=\"container\">\n\n  <app-logo [companyId]=\"companyId\"></app-logo>\n\n  <h2>Hello {{ orderData.customerName }},</h2>\n  <p>Thank you for your order. Here are the details of your order:</p>\n  <br>\n  <table class=\"order-grid\" id=\"order-grid\">\n    <thead class=\"sticky\">\n      <tr>\n        <th>Description</th>\n        <th>Unit Type</th>\n        <th>Pack Size</th>\n        <th>Price</th>\n        <th>Qty</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let product of orderData.profiles\">\n        <td>{{ product.profileDescription }}</td>\n        <td>{{ product.unitType }}</td>\n        <td>{{ product.packSize }}</td>\n        <td class=\"price\">{{ product.salesPrice | number:'1.2-2' }}</td>\n        <td>{{ product.quantity }}</td>\n      </tr>\n    </tbody>\n  </table>\n\n  <div>\n    <div class=\"total\"><strong>Total: </strong>\n      <span id=\"total-amount\">{{ orderData.totalPrice| currency:'USD':true }}</span>\n    </div>\n  </div>\n\n  <div>\n    <p>Delivery date: {{orderData.deliveryDate | date: 'MM/dd/yyyy'}}</p>\n  </div>\n  <div *ngIf=\"orderData.shipToId\">\n    <p>Delivery location: {{orderData.shipToName}}</p>\n  </div>\n\n\n  <p>Thank you,<br>Your Sales Team</p>\n  <button class=\"button\" (click)=\"goBack()\">Back</button>\n</div>","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { CommonModule } from '@angular/common';\nimport { Order } from 'src/app/models/order.model';\n\n@Component({\n  standalone: true,\n  selector: 'app-order-details-dialog',\n  templateUrl: './order-details-dialog.component.html',\n  styleUrls: ['./order-details-dialog.component.css'],\n  imports: [CommonModule, MatDialogModule, MatButtonModule],\n})\nexport class OrderDetailsDialogComponent {\n  constructor(@Inject(MAT_DIALOG_DATA) public order: Order, private dialogRef: MatDialogRef<OrderDetailsDialogComponent>) {}\n\n  closeDialog(): void {\n    this.dialogRef.close();\n  }\n}\n","<h2 mat-dialog-title>Order Details</h2>\n<mat-dialog-content>\n  <p><strong>Customer Name:</strong> {{ order.customerName }}</p>\n  <p><strong>Order Date:</strong> {{ order.deliveryDate | date }}</p>\n  <p><strong>Customer PO:</strong> {{ order.customerPo }}</p>\n  <p><strong>Sales Rep:</strong> {{ order.salesRepName }}</p>\n  <p><strong>Ship To:</strong> {{ order.shipToName }}</p>\n  <p><strong>Total Price:</strong> {{ order.totalPrice | currency }}</p>\n\n  <!-- Profiles section -->\n  <h3>Profiles</h3>\n  <table class=\"profile-table\">\n    <thead>\n      <tr>\n        <th>ID</th>\n        <th class=\"description-column\">Description</th>\n        <th>Unit Type</th>\n        <th>Pack Size</th>\n        <th>Quantity</th>\n        <th>Sales Price</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let profile of order.profiles\">\n        <td>{{ profile.id }}</td>\n        <td class=\"description-column\">{{ profile.profileDescription }}</td>\n        <td>{{ profile.unitType }}</td>\n        <td>{{ profile.packSize }}</td>\n        <td>{{ profile.quantity }}</td>\n        <td>{{ profile.salesPrice | currency }}</td>\n      </tr>\n    </tbody>\n  </table>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-button mat-dialog-close>Close</button>\n</mat-dialog-actions>","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { LogoComponent } from '../logo/logo.component';\nimport { OrderConfirmation } from 'src/app/models/order-confirmation.model';\n\n@Component({\n  standalone: true,\n  selector: 'app-order-exists',\n  templateUrl: './order-exists.component.html',\n  styleUrls: ['./order-exists.component.css'],\n  imports: [CommonModule, LogoComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderExistsComponent implements OnInit {\n  orderData!: OrderConfirmation;\n  companyId!: number;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.orderData = history.state['order']; // Access the passed data here\n    this.companyId = history.state['companyId'];\n  }\n\n  goBack(): void {\n    window.history.back();\n  }\n}\n","<div class=\"container\">\n  <app-logo [companyId]=\"companyId\"></app-logo>\n\n  <h2>Existing Order</h2>\n  <div class=\"error-message\" style=\"color: red;\">\n    We already have an order for you placed on this delivery date. If you would like it changed please contact your sales rep.\n  </div>\n  <br>\n  <table class=\"order-grid\" id=\"order-grid\">\n    <thead class=\"\" sticky>\n      <tr>\n        <th>Product Description</th>\n        <th>Unit Type</th>\n        <th>Pack Size</th>\n        <th>Price</th>\n        <th>Qty</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let profile of orderData.profiles\">\n        <td>{{ profile.profileDescription }}</td>\n        <td>{{ profile.unitType }}</td>\n        <td>{{ profile.packSize }}</td>\n        <td class=\"price\">{{ profile.salesPrice| currency:'USD':true }}</td>\n        <td>{{ profile.quantity }}</td>\n      </tr>\n    </tbody>\n  </table>\n\n  <div>\n    <div class=\"total\"><strong>Total: </strong>\n      <span id=\"total-amount\">{{ orderData.totalPrice| currency:'USD':true }}</span>\n    </div>\n  </div>\n\n  <div>\n    <p>Sales rep: {{orderData.salesRepName}}</p>\n  </div>\n  <div>\n    <p>Delivery date: {{orderData.deliveryDate | date: 'MM/dd/yyyy'}}</p>\n  </div>\n  <div *ngIf=\"orderData.shipToId\">\n    <p>Delivery location: {{orderData.shipToName}}</p>\n  </div>\n\n\n\n  <button class=\"button\" (click)=\"goBack()\">Back</button>\n</div>","import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormGroup, ReactiveFormsModule, ValidationErrors, Validators } from '@angular/forms';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LogoComponent } from '../logo/logo.component';\nimport { Order } from 'src/app/models/order.model';\nimport { OrderRequest } from 'src/app/models/order-request.model';\nimport { ProfileRequest } from 'src/app/models/profile-request.model';\nimport { OrderFormService } from 'src/app/services/order-form.service';\nimport { Profile } from 'src/app/models/profile.model';\nimport { ParamMap } from '@angular/router';\n\n@Component({\n  standalone: true,\n  selector: 'app-order-form',\n  templateUrl: './order-form.component.html',\n  styleUrls: ['./order-form.component.css'],\n  imports: [CommonModule, ReactiveFormsModule, LogoComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderFormComponent implements OnInit {\n  order!: Order;\n  hasSpecials = false;\n  orderForm!: FormGroup;\n  submitted: boolean = false;\n  customerId!: number;\n\n  // New properties for modal functionality\n  showModal = false;\n  currentOrderItems: any[] = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private snackBarService: SnackbarService,\n    private orderService: OrderFormService,\n    private route: ActivatedRoute,\n    private cdr: ChangeDetectorRef,\n  ) {}\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params: ParamMap) => {\n      const id = params.get('id');\n      this.customerId = id ? +id : NaN;\n      this.loadOrderData(this.customerId);\n    });\n  }\n\n  loadOrderData(customerId: number): void {\n    this.orderService.getOrderData(customerId).subscribe({\n      next: (order: Order) => {\n        order.profiles.sort((a, b) => a.profileDescription.localeCompare(b.profileDescription));\n        this.order = order;\n        this.hasSpecials = this.order.profiles.some((profile) => profile.isSpecial);\n        const shipToValidators = order.shipTos?.length ? [Validators.required] : [];\n\n        this.orderForm = this.fb.group({\n          customerId: [order.customerId],\n          deliveryDate: ['', [Validators.required, this.dateAfterTomorrowValidator, this.dateWithinThreeMonthsValidator, this.dateNotOnSundayValidator]],\n          shipToId: ['', shipToValidators],\n          customerPo: [''],\n          totalPrice: [0],\n          profiles: this.fb.array(\n            this.order.profiles.map((profile) => this.createProfileGroup(profile)),\n            [this.atLeastOneQuantityValidator],\n          ),\n        });\n        this.cdr.markForCheck();\n      },\n    });\n  }\n\n  get formControls() {\n    return this.orderForm.controls;\n  }\n\n  get profileControls(): FormArray {\n    return this.orderForm.get('profiles') as FormArray;\n  }\n\n  get totalPrice(): number {\n    let totalPrice = 0;\n    for (let i = 0; i < this.order.profiles.length; i++) {\n      const quantity = this.profileControls.at(i).get('quantity')?.value || 0;\n      const packSize = this.order.profiles[i].packSize || 0;\n      const price = this.order.profiles[i].salesPrice || 0;\n      totalPrice += quantity * packSize * price;\n    }\n    return totalPrice;\n  }\n\n  getRowTotalPrice(index: number): number {\n    const quantity = this.profileControls.at(index).get('quantity')?.value || 0;\n    const packSize = this.order.profiles[index].packSize || 0;\n    const price = this.order.profiles[index].salesPrice || 0;\n    return quantity * packSize * price;\n  }\n\n  createProfileGroup(profile: Profile): FormGroup {\n    return this.fb.group({\n      profileDid: [profile.id],\n      quantity: ['', Validators.min(1)],\n    });\n  }\n\n  onSubmit() {\n    this.snackBarService.showInfo('Submitting Order...');\n\n    if (this.orderForm.valid) {\n      const order: OrderRequest = this.orderForm.value;\n\n      // Remove profiles with a quantity of 0 and set total price\n      order.profiles = order.profiles.filter((profile: ProfileRequest) => profile.quantity > 0);\n      order.totalPrice = this.totalPrice;\n\n      // Set shipToId to an empty string if it's not set\n      if (!order.shipToId) {\n        order.shipToId = ''; // Ensures \"\" is submitted instead of 0 or null\n      }\n\n      this.orderService.placeOrder(this.customerId, order).subscribe({\n        next: (orderConfirmation) => {\n          this.router.navigate(['/customer', this.customerId, 'order-confirmation'], {\n            state: { order: orderConfirmation, companyId: this.order.companyId },\n          });\n          this.snackBarService.showSuccess('Order submitted successfully');\n        },\n        error: (error) => {\n          const errorCode = error.status;\n          const errorMessage = errorCode == 409 ? 'An order already exists for that day' : 'Error submitting order';\n          if (errorCode == 409) {\n            this.router.navigate(['/customer', this.customerId, 'order-exists'], {\n              state: { order: error.error, companyId: this.order.companyId },\n            });\n          }\n          this.snackBarService.showError(errorMessage);\n\n          console.error('Error submitting order', error);\n        },\n      });\n\n      this.submitted = true;\n    } else {\n      this.orderForm.markAllAsTouched();\n    }\n  }\n\n  isQuantityEntered(index: number): boolean {\n    const quantity = this.profileControls.at(index).get('quantity')?.value;\n    return typeof quantity === 'number' && quantity > 0;\n  }\n\n  showCurrentOrder() {\n    this.currentOrderItems = this.order.profiles\n      .map((profile, index) => ({\n        ...profile,\n        quantity: this.profileControls.at(index).get('quantity')?.value,\n        totalPrice: (this.profileControls.at(index).get('quantity')?.value || 0) * (profile.packSize || 0) * (profile.salesPrice || 0),\n      }))\n      .filter((item) => item.quantity > 0);\n    this.showModal = true;\n    this.cdr.markForCheck();\n    console.error(this.currentOrderItems);\n  }\n\n  // New method to close the modal\n  closeModal() {\n    this.showModal = false;\n  }\n\n  dateAfterTomorrowValidator(control: AbstractControl): ValidationErrors | null {\n    const dateValue = new Date(control.value);\n    const now = new Date();\n    const twoAmToday = new Date(now.getFullYear(), now.getMonth(), now.getDate(), 2, 0, 0);\n\n    // Check if the date is valid and after 2 AM of today\n    if (!isNaN(dateValue.getTime()) && dateValue < twoAmToday) {\n      return { dateAfterTomorrow: true }; // Return error key if date is invalid\n    }\n    return null; // Return null if date is valid\n  }\n\n  atLeastOneQuantityValidator(control: AbstractControl): ValidationErrors | null {\n    const formArray = control as FormArray;\n    const hasAtLeastOneQuantity = formArray.controls.some((group) => group.get('quantity')?.value > 0);\n    return hasAtLeastOneQuantity ? null : { atLeastOneQuantity: true };\n  }\n\n  dateWithinThreeMonthsValidator(control: AbstractControl): ValidationErrors | null {\n    const dateValue = new Date(control.value);\n    const now = new Date();\n    const threeMonthsFromNow = new Date(now.getFullYear(), now.getMonth() + 3, now.getDate());\n\n    // Check if the date is within three months\n    if (!isNaN(dateValue.getTime()) && dateValue > threeMonthsFromNow) {\n      return { dateWithinThreeMonths: true }; // Return error key if date is out of range\n    }\n    return null; // Return null if date is valid\n  }\n\n  dateNotOnSundayValidator(control: AbstractControl): ValidationErrors | null {\n    if (!control.value) {\n      return null; // If there's no date, validation passes\n    }\n\n    const dateValue = new Date(control.value);\n\n    // Check if the parsed date is valid and if it's a Sunday\n    if (!isNaN(dateValue.getTime()) && dateValue.getUTCDay() === 0) {\n      return { dateNotOnSunday: true }; // Trigger error if Sunday\n    }\n\n    return null; // Otherwise, validation passes\n  }\n}\n","<form *ngIf=\"order\" [formGroup]=\"orderForm\" (ngSubmit)=\"onSubmit()\" class=\"order-form\">\n  <div class=\"container\">\n    <app-logo [companyId]=\"order.companyId\"></app-logo>\n    <h2 class=\"page-title\">Order Form</h2>\n\n    <div *ngIf=\"order.customerName && order.salesRepName\" class=\"customer-sales-info\">\n      <p><strong>Customer:</strong> <br>{{ order.customerName }}</p>\n      <div class=\"sales-rep-info\">\n        <strong>Sales Rep:</strong> <br>{{ order.salesRepName }}\n        <br><a [href]=\"'tel:' + order.salesRepPhone\">{{ order.salesRepPhone }}</a>\n      </div>\n    </div>\n\n    <div *ngIf=\"order.shipTos\" class=\"shipto-dropdown\">\n      <label for=\"ship-to\"><strong>Ship to:</strong></label>\n      <select id=\"ship-to\" formControlName=\"shipToId\" class=\"input-select\">\n        <option *ngFor=\"let shipTo of order.shipTos\" [value]=\"shipTo.id\">{{ shipTo.shipToName }}</option>\n      </select>\n      <div *ngIf=\"orderForm.get('shipToId')?.touched && orderForm.get('shipToId')?.errors?.['required']\" class=\"error\">\n        Ship to is required.\n      </div>\n    </div>\n\n    <div *ngIf=\"hasSpecials\">\n      <h3 class=\"section-title\">Specials</h3>\n      <div formArrayName=\"profiles\" class=\"profiles\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th>Description</th>\n              <th>Qty</th>\n              <th>Unit Type</th>\n              <th>Pack Size</th>\n              <th>Price</th>\n              <th>Total</th>\n            </tr>\n          </thead>\n          <tbody>\n            <ng-container *ngFor=\"let profile of profileControls.controls; let i = index\">\n              <tr *ngIf=\"order.profiles[i].isSpecial\" [formGroupName]=\"i\" [ngStyle]=\"{'background-color': isQuantityEntered(i) ? 'whitesmoke': 'white'}\">\n                <input type=\"hidden\" formControlName=\"profileDid\" class=\"input-text hidden-column\">\n                <td>{{ order.profiles[i].profileDescription }}</td>\n                <td>\n                  <input type=\"number\" formControlName=\"quantity\" class=\"input-number\">\n                  <div *ngIf=\"profile.get('quantity')?.errors?.['min']\" class=\"error\">The number must be greater than zero.</div>\n                </td>\n                <td>{{ order.profiles[i].unitType }}</td>\n                <td>{{ order.profiles[i].packSize }}</td>\n                <td>{{ order.profiles[i].salesPrice | currency:'USD':'symbol':'1.2-2'}}</td>\n                <td>{{ getRowTotalPrice(i) | currency:'USD':'symbol':'1.2-2' }}</td>\n              </tr>\n            </ng-container>\n          </tbody>\n        </table>\n      </div>\n    </div>\n\n    <h3 class=\"section-title\">Products</h3>\n    <div formArrayName=\"profiles\" class=\"profiles\">\n      <table class=\"table\">\n        <thead class=\"sticky\">\n          <tr>\n            <th>Description</th>\n            <th>Qty</th>\n            <th>Unit Type</th>\n            <th>Pack Size</th>\n            <th>Price</th>\n            <th>Total</th>\n          </tr>\n        </thead>\n        <tbody>\n          <ng-container *ngFor=\"let profile of profileControls.controls; let i = index\">\n            <tr *ngIf=\"!order.profiles[i].isSpecial\" [formGroupName]=\"i\" [ngStyle]=\"{'background-color': isQuantityEntered(i) ? 'whitesmoke': 'white'}\">\n              <td>\n                <input type=\"text\" type=\"hidden\" formControlName=\"profileDid\">\n                {{ order.profiles[i].profileDescription }}\n              </td>\n              <td>\n                <input type=\"number\" formControlName=\"quantity\" class=\"input-number\">\n                <div *ngIf=\"profile.get('quantity')?.errors?.['min']\" class=\"error\">The number must be greater than zero.</div>\n              </td>\n              <td>{{ order.profiles[i].unitType }}</td>\n              <td>{{ order.profiles[i].packSize }}</td>\n              <td>{{ order.profiles[i].salesPrice | currency:'USD':'symbol':'1.2-2'}}</td>\n              <td>{{ getRowTotalPrice(i) | currency:'USD':'symbol':'1.2-2' }}</td>\n            </tr>\n          </ng-container>\n        </tbody>\n      </table>\n      <div *ngIf=\"submitted && orderForm.get('profiles')?.hasError('atLeastOneQuantity')\" class=\"error\">\n        At least one quantity is required.\n      </div>\n    </div>\n\n    <div *ngIf=\"profileControls.touched && profileControls.errors?.['atLeastOneQuantity']\" class=\"error\">\n      Enter at least one quantity.\n    </div>\n\n    <div class=\"total-price\">\n      <br>Total price: {{totalPrice | currency:'USD':'symbol':'1.2-2'}}\n      <div *ngIf=\"totalPrice > 10000\" class=\"error\">The total has to be less than $10,000.</div>\n    </div>\n\n    <!-- Current Order Button -->\n    <button type=\"button\" (click)=\"showCurrentOrder()\" class=\"current-order-btn\">Current Order</button>\n\n    <div>\n      <label for=\"customer-po\"><strong>Customer PO: </strong></label>\n      <input id=\"customer-po\" formControlName=\"customerPo\" type=\"text\" class=\"customer-po\">\n    </div>\n\n    <div class=\"delivery-date\">\n      <label for=\"delivery-date\"><strong>Delivery Date:</strong></label>\n      <input id=\"delivery-date\" formControlName=\"deliveryDate\" type=\"date\" class=\"input-date\">\n      <div *ngIf=\"formControls['deliveryDate'].touched && formControls['deliveryDate'].errors?.['required']\" class=\"error\">\n        Delivery date is required.\n      </div>\n      <div *ngIf=\"formControls['deliveryDate'].dirty && formControls['deliveryDate'].errors?.['dateAfterTomorrow']\" class=\"error\">\n        Delivery date cannot be in the past or after 2am of today's date.\n      </div>\n      <div *ngIf=\"formControls['deliveryDate'].dirty && formControls['deliveryDate'].errors?.['dateWithinThreeMonths']\" class=\"error\">\n        Delivery date must be within 3 months.\n      </div>\n      <div *ngIf=\"formControls['deliveryDate'].dirty && formControls['deliveryDate'].errors?.['dateNotOnSunday']\" class=\"error\">\n        Delivery date cannot be on Sunday.\n      </div>\n    </div>\n\n    <!-- Pop-up Modal for Current Order -->\n    <div *ngIf=\"showModal\" class=\"modal\">\n      <div class=\"modal-content\">\n        <span class=\"close\" (click)=\"closeModal()\">&times;</span>\n        <h3>Current Order</h3>\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th>Description</th>\n              <th>Qty</th>\n              <th>Unit Type</th>\n              <th>Pack Size</th>\n              <th>Price</th>\n              <th>Total</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let item of currentOrderItems\">\n              <td>{{ item.profileDescription }}</td>\n              <td>{{ item.quantity }}</td>\n              <td>{{ item.unitType }}</td>\n              <td>{{ item.packSize }}</td>\n              <td>{{ item.salesPrice | currency:'USD':'symbol':'1.2-2' }}</td>\n              <td>{{ item.totalPrice | currency:'USD':'symbol':'1.2-2' }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n\n    <br><button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"!orderForm.valid\" class=\"submit-btn\">Submit</button>\n  </div>\n</form>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { Observable, switchMap, tap } from 'rxjs';\nimport { FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { Company } from 'src/app/models/company.model';\nimport { Customer } from 'src/app/models/customer.model';\nimport { SalesRep } from 'src/app/models/sales-rep.model';\nimport { OrderLinksService } from 'src/app/services/order-links.service';\nimport { CommonModule } from '@angular/common';\nimport { LogoComponent } from '../logo/logo.component';\n\n@Component({\n  standalone: true,\n  selector: 'app-order-links',\n  templateUrl: './order-links.component.html',\n  styleUrls: ['./order-links.component.css'],\n  imports: [CommonModule, ReactiveFormsModule, RouterModule, LogoComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderLinksComponent implements OnInit {\n  form!: FormGroup;\n  companies$!: Observable<Company[]>;\n  salesPersons$!: Observable<SalesRep[]>;\n  customers: Customer[] = [];\n  filteredCustomers: Customer[] = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private cdr: ChangeDetectorRef,\n    private snackbarService: SnackbarService,\n    private orderLinksService: OrderLinksService,\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      company: [],\n      salesPerson: [],\n      searchText: '',\n    });\n\n    // Load companies and set default to 'PFF'\n    this.companies$ = this.orderLinksService.getCompanies().pipe(\n      tap((companies) => {\n        const defaultCompany = companies.find((company) => company.name === 'PFF');\n        if (defaultCompany) {\n          this.form.get('company')!.setValue(defaultCompany);\n        }\n      }),\n    );\n\n    // Load salespersons based on selected company\n    this.form\n      .get('company')!\n      .valueChanges.pipe(\n        switchMap((company) =>\n          this.orderLinksService.getSalesPersons(company.id).pipe(\n            tap((salesreps) => {\n              salesreps.sort((a, b) => a.name.localeCompare(b.name));\n              this.salesPersons$ = new Observable<SalesRep[]>((observer) => {\n                observer.next(salesreps);\n                observer.complete();\n              });\n              if (salesreps.length > 0) {\n                this.form.get('salesPerson')!.setValue(salesreps[0]);\n              }\n            }),\n          ),\n        ),\n      )\n      .subscribe();\n\n    // Load customers based on selected salesperson\n    this.form\n      .get('salesPerson')!\n      .valueChanges.pipe(\n        switchMap((salesrep) => {\n          const company = this.form.get('company')!.value;\n          return this.orderLinksService.getCustomers(company.id, salesrep.name);\n        }),\n      )\n      .subscribe({\n        next: (customers) => {\n          this.customers = [...customers];\n          this.customers.sort((a, b) => a.name.localeCompare(b.name));\n          this.filteredCustomers = [...this.customers];\n          this.cdr.markForCheck();\n        },\n      });\n\n    // Apply search filter on customer names\n    this.form.get('searchText')!.valueChanges.subscribe((searchText: string) => {\n      this.filteredCustomers = this.customers.filter((customer) => customer.name.toLowerCase().includes(searchText.toLowerCase()));\n    });\n  }\n\n  // Generate Order Link\n  generateLink(customerId: number): string {\n    const baseUrl = window.location.href.replace('/order-links', '');\n    return `${baseUrl}/customer/${customerId}/order-form`;\n  }\n\n  // Copy Order Link to Clipboard\n  copyLink(customerId: number): void {\n    const link = this.generateLink(customerId);\n    navigator.clipboard\n      .writeText(link)\n      .then(() => {\n        this.snackbarService.showSuccess('Link copied to clipboard!');\n      })\n      .catch((err) => {\n        this.snackbarService.showError('Failed to copy link: ', err);\n        console.error('Failed to copy link: ', err);\n      });\n  }\n}\n","<form [formGroup]=\"form\">\n  <div class=\"container\">\n    <!-- Logo Component with Navigation -->\n    <a [routerLink]=\"['/home']\">\n      <app-logo [companyId]=\"form.get('company')?.value?.id\"></app-logo>\n    </a>\n\n    <h2 class=\"underlined\">Customers</h2>\n\n    <!-- Filters Section -->\n    <div class=\"filters\">\n      <!-- Company Filter -->\n      <div class=\"filter-group\">\n        <label for=\"company-filter\" class=\"filter-label\">Company:</label>\n        <select id=\"company-filter\" formControlName=\"company\">\n          <option *ngFor=\"let company of companies$ | async\" [ngValue]=\"company\">{{ company.name }}</option>\n        </select>\n      </div>\n\n      <!-- Sales Rep Filter -->\n      <div class=\"filter-group\">\n        <label for=\"salesname-filter\" class=\"filter-label\">Sales Rep:</label>\n        <select id=\"salesname-filter\" formControlName=\"salesPerson\">\n          <option *ngFor=\"let salesperson of salesPersons$ | async\" [ngValue]=\"salesperson\">{{ salesperson.name }}</option>\n        </select>\n      </div>\n\n      <!-- Customer Search Filter -->\n      <div class=\"filter-group\">\n        <label for=\"customer-search\" class=\"filter-label\">Customer:</label>\n        <input type=\"text\" id=\"customer-search\" placeholder=\"Search Customers\" formControlName=\"searchText\" />\n      </div>\n    </div>\n\n    <!-- Order Grid Table -->\n    <table class=\"order-grid\">\n      <thead>\n        <tr>\n          <th>Customer Name</th>\n          <th>Order Form</th>\n          <th>Copy Link</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let customer of filteredCustomers;\">\n          <td>{{ customer.name }}</td>\n          <td>\n            <a [routerLink]=\"['/customer', customer.id, 'order-form']\">Order Form</a>\n          </td>\n          <td>\n            <a href=\"javascript:void(0)\" (click)=\"copyLink(customer.id)\" (keyup)=\"copyLink(customer.id)\">Copy Link</a>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</form>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { Observable, switchMap, tap } from 'rxjs';\nimport { FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { Company } from 'src/app/models/company.model';\nimport { SalesRep } from 'src/app/models/sales-rep.model';\nimport { CommonModule } from '@angular/common';\nimport { LogoComponent } from '../logo/logo.component';\nimport { OrderDetailsDialogComponent } from 'src/app/components/order-details-dialog/order-details-dialog.component';\nimport { OrderService } from 'src/app/services/order.services';\nimport { Order } from 'src/app/models/order.model';\n\n@Component({\n  standalone: true,\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css'],\n  imports: [CommonModule, ReactiveFormsModule, RouterModule, LogoComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrdersComponent implements OnInit {\n  form!: FormGroup;\n  companies$!: Observable<Company[]>;\n  salesPersons$!: Observable<SalesRep[]>;\n  orders: Order[] = [];\n  filteredOrders: Order[] = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private cdr: ChangeDetectorRef,\n    private snackbarService: SnackbarService,\n    private orderService: OrderService,\n    private dialog: MatDialog,\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      company: [],\n      salesPerson: [],\n      customerName: [''],\n    });\n\n    this.loadCompanies();\n    this.setupSalesPersonListener();\n    this.setupOrdersListener();\n    this.setupCustomerNameFilterListener();\n  }\n\n  private loadCompanies(): void {\n    this.companies$ = this.orderService.loadCompanies().pipe(\n      tap((companies) => {\n        if (companies && companies.length > 0) {\n          this.form.get('company')!.setValue(companies[0]);\n        }\n      }),\n    );\n  }\n\n  private setupSalesPersonListener(): void {\n    this.form\n      .get('company')!\n      .valueChanges.pipe(\n        switchMap((company: Company) => {\n          return this.orderService.loadSalesRep(company.id);\n        }),\n        tap((salesreps) => {\n          this.salesPersons$ = new Observable<SalesRep[]>((observer) => {\n            observer.next(salesreps);\n            observer.complete();\n          });\n\n          if (salesreps && salesreps.length > 0) {\n            this.form.get('salesPerson')!.setValue(salesreps[0]);\n          }\n\n          this.loadOrders();\n        }),\n      )\n      .subscribe({\n        error: (error) => {\n          console.error('Failed to load sales reps:', error);\n          this.snackbarService.showError('Failed to load sales reps.');\n        },\n      });\n  }\n\n  private setupOrdersListener(): void {\n    this.form.get('salesPerson')!.valueChanges.subscribe(() => {\n      this.loadOrders();\n    });\n  }\n\n  private loadOrders(): void {\n    const company = this.form.get('company')!.value;\n    const salesrep = this.form.get('salesPerson')!.value;\n\n    if (!company || !salesrep) {\n      return;\n    }\n    this.orderService.loadOrders(company.id, salesrep.name, 72).subscribe({\n      next: (orders) => {\n        this.orders = orders;\n        this.applyFilters();\n      },\n      error: (error) => {\n        console.error('Failed to load orders:', error);\n        this.snackbarService.showError('Failed to load orders.');\n      },\n    });\n  }\n\n  private setupCustomerNameFilterListener(): void {\n    this.form.get('customerName')!.valueChanges.subscribe(() => this.applyFilters());\n  }\n\n  private applyFilters(): void {\n    const customerName = this.form.get('customerName')!.value?.toLowerCase() || '';\n    this.filteredOrders = this.orders.filter((order) => order.customerName.toLowerCase().includes(customerName));\n    this.cdr.markForCheck();\n  }\n\n  onRowClick(order: Order): void {\n    this.dialog.open(OrderDetailsDialogComponent, {\n      data: order,\n      width: '800px',\n    });\n  }\n}\n","<form [formGroup]=\"form\">\n  <div class=\"container\">\n    <!-- Logo Component with Navigation -->\n    <a [routerLink]=\"['/home']\">\n      <app-logo [companyId]=\"form.get('company')?.value?.id\"></app-logo>\n    </a>\n\n    <h2 class=\"page-title\">Existing Orders</h2>\n\n    <!-- Filters Section -->\n    <div class=\"filters\">\n      <!-- Company Filter -->\n      <div class=\"filter-group\">\n        <label for=\"company-filter\" class=\"filter-label\">Company:</label>\n        <select id=\"company-filter\" formControlName=\"company\">\n          <option *ngFor=\"let company of companies$ | async\" [ngValue]=\"company\">{{ company.name }}</option>\n        </select>\n      </div>\n\n      <!-- Sales Rep Filter -->\n      <div class=\"filter-group\">\n        <label for=\"salesname-filter\" class=\"filter-label\">Sales Rep:</label>\n        <select id=\"salesname-filter\" formControlName=\"salesPerson\">\n          <option *ngFor=\"let salesperson of salesPersons$ | async\" [ngValue]=\"salesperson\">{{ salesperson.name }}</option>\n        </select>\n      </div>\n\n      <!-- Customer Name Filter -->\n      <div class=\"filter-group\">\n        <label for=\"customer-filter\" class=\"filter-label\">Customer Name:</label>\n        <input\n          id=\"customer-filter\"\n          type=\"text\"\n          formControlName=\"customerName\"\n          placeholder=\"Search Customer Name\"\n        />\n      </div>\n    </div>\n\n    <!-- Orders Table -->\n    <table class=\"order-grid\">\n      <thead>\n        <tr>\n          <th>Order ID</th>\n          <th>Delivery Date</th>\n          <th>Customer Name</th>\n          <th>Ship To</th>\n          <th>Total Price</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let item of filteredOrders\" (click)=\"onRowClick(item)\" class=\"clickable-row\">\n          <td>{{ item.id }}</td>\n          <td>{{ item.deliveryDate | date }}</td>\n          <td>{{ item.customerName }}</td>\n          <td>{{ item.shipToName }}</td>\n          <td>{{ item.totalPrice | currency }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</form>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\nimport { Router, RouterModule } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\n\n@Component({\n  selector: 'app-password-request',\n  templateUrl: './password-request.component.html',\n  styleUrls: ['./password-request.component.css'],\n  standalone: true,\n  imports: [CommonModule, MatFormFieldModule, MatInputModule, MatButtonModule, ReactiveFormsModule, RouterModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PasswordRequestComponent {\n  passwordRequestForm: FormGroup;\n\n  constructor(\n    private router: Router,\n    private cdr: ChangeDetectorRef,\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private snackbarService: SnackbarService,\n  ) {\n    this.passwordRequestForm = this.formBuilder.group({\n      username: ['', [Validators.required, Validators.email]],\n    });\n  }\n\n  onSubmit() {\n    const { username } = this.passwordRequestForm.value;\n\n    this.authService.passwordRequest(username).subscribe({\n      next: () => {\n        this.snackbarService.showInfo(`An email has been sent to ${username} to reset your password`);\n        this.router.navigate(['/login']);\n      },\n    });\n  }\n}\n","<div class=\"container\">\n    <div class=\"login-container\">\n\n        <div class=\"logo-container\">\n            <a [routerLink]=\"['/home']\">\n                <img src=\"assets/logo.png\" alt=\"Company Logo\" class=\"logo\">\n            </a>\n        </div>\n\n        <h1>New password request</h1>\n        <form [formGroup]=\"passwordRequestForm\" (ngSubmit)=\"onSubmit()\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Username</mat-label>\n                <input matInput type=\"text\" formControlName=\"username\" placeholder=\"Enter your username\" autocomplete=\"username\">\n            </mat-form-field>\n\n            <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"passwordRequestForm.invalid\">\n                <span>Submit password request</span>\n            </button>\n        </form>\n    </div>\n</div>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, RouterModule, ParamMap } from '@angular/router';\nimport { AbstractControl, FormBuilder, FormGroup, ValidationErrors, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\n\n@Component({\n  selector: 'app-password-reset',\n  templateUrl: './password-reset.component.html',\n  styleUrls: ['./password-reset.component.css'],\n  standalone: true,\n  imports: [CommonModule, MatFormFieldModule, MatInputModule, MatButtonModule, ReactiveFormsModule, RouterModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PasswordResetComponent implements OnInit {\n  passwordResetForm: FormGroup;\n  token: string = '';\n  mismatchedPassword: boolean = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private cdr: ChangeDetectorRef,\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private snackbarService: SnackbarService,\n  ) {\n    this.passwordResetForm = this.formBuilder.group({\n      password: ['', [Validators.required, Validators.minLength(5), this.specialCharacterValidator]],\n      confirmPassword: ['', [Validators.required, Validators.minLength(5), this.specialCharacterValidator]],\n    });\n  }\n\n  ngOnInit(): void {\n    this.passwordResetForm.get('confirmPassword')?.valueChanges.subscribe(() => {\n      this.mismatchedPassword = false;\n    });\n\n    this.route.paramMap.subscribe((params: ParamMap) => {\n      this.token = params.get('token') || '';\n      if (!this.token) {\n        // no JWT found\n        this.router.navigate(['/login']);\n      }\n    });\n  }\n\n  onSubmit() {\n    const { password, confirmPassword } = this.passwordResetForm.value;\n\n    if (password !== confirmPassword) {\n      this.mismatchedPassword = true;\n      return;\n    }\n\n    this.authService.passwordReset(password, this.token).subscribe({\n      next: () => {\n        this.snackbarService.showSuccess('Your password has been reset');\n        this.router.navigate(['/login']); // Navigate to /products on success\n      },\n    });\n  }\n\n  specialCharacterValidator(control: AbstractControl): ValidationErrors | null {\n    const value = control.value;\n    // Regular expression for special characters\n    const hasSpecialCharacter = /[!@#$%^&*(),.?\":{}|<>]/.test(value);\n    return hasSpecialCharacter ? null : { noSpecialCharacter: true };\n  }\n}\n","<div class=\"container\">\n    <div class=\"login-container\">\n\n        <div class=\"logo-container\">\n            <a [routerLink]=\"['/home']\">\n                <img src=\"assets/logo.png\" alt=\"Company Logo\" class=\"logo\">\n            </a>\n        </div>\n\n        <h1>New password</h1>\n        <form [formGroup]=\"passwordResetForm\" (ngSubmit)=\"onSubmit()\">\n\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Password</mat-label>\n                <input matInput type=\"password\" formControlName=\"password\" placeholder=\"Enter your password\" autocomplete=\"current-password\">\n            </mat-form-field>\n\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Re-enter your password</mat-label>\n                <input matInput type=\"password\" formControlName=\"confirmPassword\" placeholder=\"Enter your password\" autocomplete=\"current-password\">\n            </mat-form-field>\n\n            <div *ngIf=\"passwordResetForm.get('password')?.touched && passwordResetForm.get('password')?.errors?.['minlength']\" class=\"error\">\n                Your password needs to have at least 5 characters.\n            </div>\n\n            <div *ngIf=\"passwordResetForm.get('password')?.touched && passwordResetForm.get('password')?.errors?.['noSpecialCharacter']\" class=\"error\">\n                Your password needs to contain at least one special character: {{ '[!@#$%^&*(),.?\":{}|<>]' }}\n            </div>\n\n            <div *ngIf=\"mismatchedPassword\" class=\"error\">\n                The 2 entries do not match.\n            </div>\n\n            <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"passwordResetForm.invalid\">\n                <span>Submit new password</span>\n            </button>\n        </form>\n    </div>\n</div>","import { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { ActivatedRoute, RouterModule } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { FormArray, FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms'; // Import FormsModule\nimport { PreOrder } from 'src/app/models/preorder.model';\nimport { PreorderService } from 'src/app/services/preorder.service';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { LogoComponent } from '../logo/logo.component';\n\n@Component({\n  standalone: true,\n  imports: [CommonModule, RouterModule, FormsModule, ReactiveFormsModule, LogoComponent],\n  selector: 'app-preorder-form',\n  templateUrl: './preorder-form.component.html',\n  styleUrls: ['./preorder-form.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PreorderFormComponent implements OnInit {\n  preOrderForm!: FormGroup;\n  vendorId!: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private http: HttpClient,\n    private preorderService: PreorderService,\n    private cdr: ChangeDetectorRef,\n    private fb: FormBuilder,\n    private snackBarService: SnackbarService,\n  ) {}\n\n  ngOnInit(): void {\n    this.preOrderForm = this.fb.group({\n      preOrders: this.fb.array([]),\n    });\n\n    this.route.params.subscribe((params) => {\n      this.vendorId = params['vendorId'];\n      this.preorderService.getPreOrders(this.vendorId).subscribe((preOrders) => {\n        this.setPreOrders(preOrders);\n        this.cdr.markForCheck();\n      });\n    });\n  }\n\n  // Populate the form with the products\n  setPreOrders(preOrders: PreOrder[]): void {\n    const preOrderFormGroups = preOrders.map((preOrder) => this.createPreOrderForm(preOrder));\n    const preOrderFormArray = this.fb.array(preOrderFormGroups);\n    this.preOrderForm.setControl('preOrders', preOrderFormArray);\n  }\n\n  // Create a FormGroup for each product\n  createPreOrderForm(preOrder: PreOrder): FormGroup {\n    return this.fb.group({\n      id: [preOrder.id],\n      sodId: [preOrder.sodId],\n      dispatchDate: [preOrder.dispatchDate],\n      customerName: [preOrder.customerName],\n      descriptionMemo: [preOrder.descriptionMemo],\n      unitSize: [preOrder.unitSize],\n      unitType: [preOrder.unitType],\n      weight: [preOrder.weight, [Validators.required, Validators.min(0)]],\n      price: [preOrder.price, [Validators.required, Validators.min(0)]],\n    });\n  }\n\n  // Getter for the FormArray\n  get preOrdersArray(): FormArray {\n    return this.preOrderForm.get('preOrders') as FormArray;\n  }\n\n  getModifiedPreOrders(): PreOrder[] {\n    // Filter out preOrders where any of the controls are dirty\n    return this.preOrderForm.value.preOrders.filter((preOrder: PreOrder, index: number) => {\n      const preOrderGroup = this.preOrdersArray.at(index);\n      return preOrderGroup.dirty;\n    });\n  }\n\n  submitAll(): void {\n    const modifiedPreOrders = this.getModifiedPreOrders();\n    modifiedPreOrders.forEach((preOrder) => {\n      this.preorderService.updatePreOrderWeightAndPrice(this.vendorId, preOrder).subscribe(() => {\n        this.snackBarService.showSuccess('The data has been updated.');\n      });\n    });\n  }\n\n  trackByOrderId(index: number, order: PreOrder): number {\n    return order.id;\n  }\n\n  // TODO: should not be hard-coded here\n  getUnitType(unitType: number): string {\n    const unitTypeMap: { [key: number]: string } = {\n      '1': 'Case',\n      '2': 'Piece',\n      '3': 'Pack',\n      '4': 'Pound',\n      '5': 'Side',\n    };\n    return unitTypeMap[unitType] || 'Unknown';\n  }\n}\n","<div class=\"container\">\n  <!-- Header Section -->\n  <div class=\"header-section\">\n    <app-logo></app-logo>\n  </div>\n\n  <!-- Page Title -->\n  <h2 class=\"page-title\">PreOrders</h2>\n\n  <!-- PreOrders Table -->\n  <form [formGroup]=\"preOrderForm\" (ngSubmit)=\"submitAll()\">\n    <table class=\"table\">\n      <thead class=\"sticky\">\n        <tr>\n          <th>ID</th>\n          <th>Dispatch Date</th>\n          <th>Customer Name</th>\n          <th>Description</th>\n          <th>Unit Size</th>\n          <th>Unit Type</th>\n          <th>Weight (Lbs)</th>\n          <th>Price</th>\n        </tr>\n      </thead>\n      <tbody formArrayName=\"preOrders\">\n        <tr *ngFor=\"let preOrder of preOrdersArray.controls; let i = index\" [formGroupName]=\"i\" [ngStyle]=\"{'background-color': preOrder.dirty ? 'whitesmoke' : 'white'}\">\n\n          <td>{{ preOrder.get('id')?.value }}</td>\n          <td class=\"nowrap\">{{ preOrder.get('dispatchDate')?.value | date: 'mediumDate' }}</td>\n          <td>{{ preOrder.get('customerName')?.value }}</td>\n          <td>{{ preOrder.get('descriptionMemo')?.value }}</td>\n          <td>{{ preOrder.get('unitSize')?.value }}</td>\n          <td>{{ getUnitType(preOrder.get('unitType')?.value) }}</td>\n          <td>\n            <input type=\"number\" formControlName=\"price\" min=\"0\" />\n            <div *ngIf=\"preOrder.get('price')?.touched && preOrder.get('price')?.hasError('min')\" class=\"error\">\n              Weight must be greater than 0</div>\n          </td>\n          <td>\n            <div class=\"currency-input\">\n              <span class=\"currency-symbol\">$</span>\n              <input type=\"number\" formControlName=\"weight\" step=\"0.01\" min=\"0\" />\n              <div *ngIf=\"preOrder.get('weight')?.touched && preOrder.get('weight')?.hasError('min')\" class=\"error\">\n                Price must be greater than 0</div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <!-- Submit Button -->\n    <div class=\"text-center\">\n      <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!preOrderForm.dirty || !preOrderForm.valid\">\n        Submit\n      </button>\n    </div>\n  </form>\n\n</div>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Router, RouterModule } from '@angular/router';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { VendorsService, Vendor } from 'src/app/services/vendors.service'; // Import Vendor type\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  standalone: true,\n  selector: 'app-vendor-links',\n  templateUrl: './preorder-links.component.html',\n  styleUrls: ['./preorder-links.component.css'],\n  imports: [CommonModule, RouterModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VendorLinksComponent implements OnInit {\n  vendors$!: Observable<Vendor[]>;\n\n  constructor(private cdr: ChangeDetectorRef, private snackbarService: SnackbarService, private vendorsService: VendorsService, private router: Router) {}\n  ngOnInit(): void {\n    this.vendors$ = this.vendorsService.getVendors();\n  }\n\n  // Navigate to Preorder Form for the selected vendor\n  navigateToPreorderForm(vendorId: number): void {\n    this.router.navigate(['/preorder-form', vendorId]); // Navigate with vendorId as route parameter\n  }\n\n  // Copy Vendor Link to Clipboard\n  copyLink(vendorId: number): void {\n    const baseUrl = window.location.href.replace('/preorder-links', '');\n    const link = `${baseUrl}/preorder-form/${vendorId}`;\n    window.location.href.replace('/order-links', '');\n    navigator.clipboard\n      .writeText(link)\n      .then(() => {\n        this.snackbarService.showSuccess('Link copied to clipboard!');\n      })\n      .catch((err) => {\n        this.snackbarService.showError('Failed to copy link: ', err);\n        console.error('Failed to copy link: ', err);\n      });\n  }\n}\n","<div class=\"container\">\n  <a [routerLink]=\"['/home']\">\n    <div class=\"image-container\">\n      <img src=\"assets/logo.png\" alt=\"Company Logo\">\n    </div>\n  </a>\n\n  <h2 class=\"underlined\">Vendors</h2>\n\n  <table class=\"order-grid\">\n    <thead>\n      <tr>\n        <th>Vendor Name</th>\n        <th>Preorder Form</th>\n        <th>Copy Link</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let vendor of vendors$ | async\">\n        <td>{{ vendor.name }}</td>\n        <td>\n          <a [routerLink]=\"['/preorder-form', vendor.id]\">Preorder Form</a>\n        </td>\n        <td>\n          <a href=\"javascript:void(0)\" (click)=\"copyLink(vendor.id)\" (keyup)=\"copyLink(vendor.id)\">Copy Link</a>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialogModule } from '@angular/material/dialog';\nimport { CommonModule } from '@angular/common';\nimport { HttpEventType } from '@angular/common/http';\nimport { ProductService } from '../../services/products.service'; // Ensure the correct path\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { InventoryItem } from 'src/app/models/product.model';\nimport { DOC_ORIENTATION, NgxImageCompressService } from 'ngx-image-compress';\n\n@Component({\n  standalone: true,\n  selector: 'app-product-details-dialog',\n  templateUrl: './product-details-dialog.component.html',\n  styleUrls: ['./product-details-dialog.component.css'],\n  imports: [CommonModule, MatDialogModule],\n})\nexport class ProductDetailsDialogComponent {\n  showInfo = false; // Controls visibility of the info section\n\n  constructor(\n    private snackBarService: SnackbarService,\n    public dialogRef: MatDialogRef<ProductDetailsDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: InventoryItem,\n    private productService: ProductService,\n    private imageCompress: NgxImageCompressService,\n  ) {}\n\n  toggleInfoVisibility(): void {\n    this.showInfo = !this.showInfo;\n  }\n\n  close(): void {\n    this.dialogRef.close();\n  }\n\n  getUnitType(unitType?: number): string {\n    switch (unitType) {\n      case 1:\n        return 'Cs';\n      case 2:\n        return 'Pcs';\n      case 3:\n        return 'Pck';\n      case 4:\n        return 'lbs';\n      case 5:\n        return 'side';\n      default:\n        return 'Unknown';\n    }\n  }\n\n  triggerFileInput(fileInput: HTMLInputElement): void {\n    fileInput.click();\n  }\n\n  onFileSelected(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    if (input.files && input.files.length > 0) {\n      this.snackBarService.showInfo('Uploading file...');\n      const file = input.files[0];\n\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        const imageBase64 = reader.result as string;\n\n        this.imageCompress.compressFile(imageBase64, DOC_ORIENTATION.Default, 50, 50, 960, 540).then((compressedImage) => {\n          // Convert base64 back to Blob\n          const blob = this.dataURItoBlob(compressedImage);\n\n          const compressedFile = new File([blob], file.name.replace(/\\..+$/, '.jpeg'), {\n            type: 'image/jpeg',\n          });\n\n          this.productService.uploadProductImage(this.data.compItemId, compressedFile).subscribe({\n            next: (event) => {\n              if (event.type === HttpEventType.Response) {\n                const updatedItem = event.body as InventoryItem;\n                this.data.photoUrl = updatedItem.photoUrl;\n                this.snackBarService.showSuccess('File uploaded successfully');\n              }\n            },\n          });\n        });\n      };\n    }\n  }\n\n  deletePhoto(): void {\n    if (confirm('Are you sure you want to delete this photo?')) {\n      this.productService.deleteProductPhoto(this.data.compItemId).subscribe({\n        next: () => {\n          this.data.photoUrl = undefined;\n          this.snackBarService.showSuccess('Photo deleted successfully.');\n        },\n      });\n    }\n  }\n\n  // Utility to convert base64 to Blob\n  private dataURItoBlob(dataURI: string): Blob {\n    // Split the URI into data and mime type\n    const byteString = atob(dataURI.split(',')[1]);\n    const mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n\n    // Convert the byte string into an array of bytes (Uint8Array)\n    const arrayBuffer = new ArrayBuffer(byteString.length);\n    const intArray = new Uint8Array(arrayBuffer);\n    for (let i = 0; i < byteString.length; i++) {\n      intArray[i] = byteString.charCodeAt(i);\n    }\n\n    // Return a Blob with the appropriate MIME type\n    return new Blob([intArray], { type: mimeString });\n  }\n}\n","<h2>{{ data.compItemId }} - {{ data.compDescription }}</h2>\n<div class=\"special-instructions\">{{ data.compInstructions || 'N/A' }}</div>\n\n<mat-dialog-content>\n  <!-- Display Image if Available -->\n  <div class=\"image-container\">\n    <ng-container *ngIf=\"data.photoUrl; else uploadButton\">\n      <div class=\"image-wrapper\">\n        <img [src]=\"data.photoUrl\" alt=\"Product Image\" class=\"product-image\" />\n        <div class=\"delete-icon\" (click)=\"deletePhoto()\">&#x2715;</div>\n      </div>\n    </ng-container>\n    <ng-template #uploadButton>\n      <input type=\"file\" #fileInput (change)=\"onFileSelected($event)\" accept=\"image/*\" hidden />\n      <button type=\"button\" class=\"button\" (click)=\"triggerFileInput(fileInput)\">Upload Image</button>\n    </ng-template>\n  </div>\n\n  <!-- Toggleable Information -->\n  <button class=\"toggle-button\" (click)=\"toggleInfoVisibility()\">\n    {{ showInfo ? 'Hide Info' : 'Show Info' }}\n  </button>\n\n  <div class=\"info-section\" *ngIf=\"showInfo\">\n    <div class=\"margins\">\n      <div class=\"margin-values\">\n        <div class=\"margin-group\">\n          <div class=\"field\">\n            <span class=\"field-label\">16%</span>\n            <span>{{ ((data.compCost ?? 0) * (data.yield ?? 0) + (data.laborPackCost ?? 0)) / 0.84 | number:'1.2-2' }}</span>\n          </div>\n          <div class=\"field\">\n            <span class=\"field-label\">18%</span>\n            <span>{{ ((data.compCost ?? 0) * (data.yield ?? 0) + (data.laborPackCost ?? 0)) / 0.82 | number:'1.2-2' }}</span>\n          </div>\n          <div class=\"field\">\n            <span class=\"field-label\">20%</span>\n            <span>{{ ((data.compCost ?? 0) * (data.yield ?? 0) + (data.laborPackCost ?? 0)) / 0.80 | number:'1.2-2' }}</span>\n          </div>\n          <div class=\"field\">\n            <span class=\"field-label\">22%</span>\n            <span>{{ ((data.compCost ?? 0) * (data.yield ?? 0) + (data.laborPackCost ?? 0)) / 0.78 | number:'1.2-2' }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"field-group\">\n      <div class=\"field\">\n        <span class=\"field-label\">Cost</span>\n        <span>{{ (data.compCost ?? 0) * (data.yield ?? 0) | number:'1.2-2' }}</span>\n      </div>\n      <div class=\"field\">\n        <span class=\"field-label\">Yield</span>\n        <span>{{ (data.yield ?? 0) * 100 | number:'1.0-0' }}%</span>\n      </div>\n      <div class=\"field\">\n        <span class=\"field-label\">Labor Pack</span>\n        <span>{{ data.laborPackCost | number:'1.2-2' }}</span>\n      </div>\n      <div class=\"field\">\n        <span class=\"field-label\">Finish</span>\n        <span>{{ ((data.compCost ?? 0) * (data.yield ?? 0) + (data.laborPackCost ?? 0)) | number:'1.2-2' }}</span>\n      </div>\n    </div>\n  </div>\n\n\n  <div class=\"field-group\">\n    <div class=\"field\">\n      <span class=\"field-label\">Origin</span>\n      <span>{{ data.origin }}</span>\n    </div>\n    <div class=\"field\">\n      <span class=\"field-label\">Notes</span>\n      <span>{{ data.notes || 'N/A' }}</span>\n    </div>\n    <div class=\"field\">\n      <span class=\"field-label\">WOH</span>\n      <span>{{ data.woh }}</span>\n    </div>\n    <div class=\"field\">\n      <span class=\"field-label\">Unit Type</span>\n      <span>{{ getUnitType(data.unitType ?? 0) }}</span>\n    </div>\n  </div>\n\n  <div class=\"field-group\">\n    <div class=\"field\">\n      <span class=\"field-label\">Pack Size</span>\n      <span>{{ data.packSize }}</span>\n    </div>\n    <div class=\"field\">\n      <span class=\"field-label\">Buyer</span>\n      <span>{{ data.buyer }}</span>\n    </div>\n    <div class=\"field\">\n      <span class=\"field-label\">Sixty Sales</span>\n      <span>{{ data.sixtySales }}</span>\n    </div>\n  </div>\n\n  <div class=\"field-group\">\n    <div class=\"field\">\n      <span class=\"field-label\">Ten Sales</span>\n      <span>{{ data.tenSales }}</span>\n    </div>\n    <div class=\"field\">\n      <span class=\"field-label\">Pre-Order Hours</span>\n      <span>{{ data.preOrderHours }}</span>\n    </div>\n  </div>\n</mat-dialog-content>","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ProductService } from '../../services/products.service';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { InventoryItem } from 'src/app/models/product.model';\nimport { BehaviorSubject, Subject, Subscription } from 'rxjs';\nimport { InfiniteScrollDirective } from 'ngx-infinite-scroll';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, FormControl } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { ProductDetailsDialogComponent } from '../product-details-dialog/product-details-dialog.component';\n\n@Component({\n  standalone: true,\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css'],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, RouterModule, InfiniteScrollDirective],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductsComponent implements OnInit, OnDestroy {\n  page = 0;\n  size = 50;\n  searchTerm = '';\n  showRelevantItems = false;\n  showSixtySales = false;\n  showWoh = false;\n  showYield = false;\n  showWithImages = false; // New filter for rows with images\n\n  // Filter dropdowns\n  originFilter: string = '';\n  packSizeFilter: string | number = '';\n  buyerFilter: string | number = '';\n\n  // Min CompCost property\n  minCompCost: number = 0;\n\n  // Form control\n  minCompCostControl = new FormControl('');\n\n  // Unique dropdown options\n  uniqueOrigins: string[] = [];\n  uniquePackSizes: (string | number)[] = [];\n  uniqueBuyers: (string | number)[] = [];\n\n  private searchSubject = new Subject<string>();\n  private searchSubscription!: Subscription;\n\n  private inventoryItemsSubject = new BehaviorSubject<InventoryItem[]>([]);\n  inventoryItems$ = this.inventoryItemsSubject.asObservable();\n\n  constructor(private productService: ProductService, private dialog: MatDialog) {}\n\n  ngOnInit(): void {\n    this.loadData();\n\n    this.searchSubscription = this.searchSubject.pipe(distinctUntilChanged(this.trimComparator), debounceTime(200)).subscribe((searchTerm) => {\n      this.searchTerm = searchTerm;\n      this.page = 0;\n      this.inventoryItemsSubject.next([]);\n      this.loadData();\n    });\n\n    this.minCompCostControl.valueChanges.subscribe((value) => {\n      this.minCompCost = value ? parseFloat(value) : 0;\n      this.onCompCostChange();\n    });\n  }\n\n  loadData(): void {\n    this.productService.getProducts(this.page, this.size, this.searchTerm).subscribe({\n      next: (response: InventoryItem[]) => {\n        const currentData = this.inventoryItemsSubject.value;\n        const newData = response.filter((item) => !currentData.some((currentItem) => currentItem.compItemId === item.compItemId));\n\n        let filteredData = this.showRelevantItems ? newData.filter((item) => item.tenSales && item.tenSales > 0) : newData;\n\n        if (this.showSixtySales) {\n          filteredData = filteredData.filter((item) => item.sixtySales !== null && item.sixtySales !== undefined && item.sixtySales > 0);\n        }\n\n        if (this.showWoh) {\n          filteredData = filteredData.filter((item) => item.woh !== null && item.woh !== undefined && item.woh > 0);\n        }\n\n        if (this.showYield) {\n          filteredData = filteredData.filter((item) => item.yield && item.yield < 1);\n        }\n\n        if (this.showWithImages) {\n          filteredData = filteredData.filter((item) => item.photoUrl);\n        }\n\n        const fullyFilteredData = filteredData.filter((item) => {\n          const compCost = item.compCost ?? 0;\n          return (\n            (this.originFilter ? item.origin === this.originFilter : true) &&\n            (this.packSizeFilter ? item.packSize === this.packSizeFilter : true) &&\n            (this.buyerFilter ? item.buyer === this.buyerFilter : true) &&\n            compCost >= this.minCompCost\n          );\n        });\n\n        this.populateUniqueDropdowns(response);\n        this.inventoryItemsSubject.next([...currentData, ...fullyFilteredData]);\n      },\n    });\n  }\n\n  onRowClick(item: InventoryItem, event: Event): void {\n    const target = event.target as HTMLElement;\n    const tagName = target.tagName;\n\n    // Prevent pop-up for button or input clicks\n    if (tagName !== 'BUTTON' && tagName !== 'INPUT') {\n      this.dialog.open(ProductDetailsDialogComponent, {\n        data: {\n          ...item,\n        },\n        width: '550px',\n      });\n    }\n  }\n\n  toggleRelevantItemsFilter(): void {\n    this.showRelevantItems = !this.showRelevantItems;\n    this.page = 0;\n    this.inventoryItemsSubject.next([]);\n    this.loadData();\n  }\n\n  toggleSixtySalesFilter(): void {\n    this.showSixtySales = !this.showSixtySales;\n    this.page = 0;\n    this.inventoryItemsSubject.next([]);\n    this.loadData();\n  }\n\n  toggleWohFilter(): void {\n    this.showWoh = !this.showWoh;\n    this.page = 0;\n    this.inventoryItemsSubject.next([]);\n    this.loadData();\n  }\n\n  toggleYieldFilter(): void {\n    this.showYield = !this.showYield;\n    this.page = 0;\n    this.inventoryItemsSubject.next([]);\n    this.loadData();\n  }\n\n  toggleWithImagesFilter(): void {\n    this.showWithImages = !this.showWithImages;\n    this.page = 0;\n    this.inventoryItemsSubject.next([]);\n    this.loadData();\n  }\n\n  onFilterChange(): void {\n    this.page = 0;\n    this.inventoryItemsSubject.next([]);\n    this.loadData();\n  }\n\n  onCompCostChange(): void {\n    this.page = 0;\n    this.inventoryItemsSubject.next([]);\n    this.loadData();\n  }\n\n  onScroll(): void {\n    this.page++;\n    this.loadData();\n  }\n\n  onSearchChange(event: Event): void {\n    const searchTerm = (event.target as HTMLInputElement).value;\n    this.page = 0;\n    this.searchSubject.next(searchTerm);\n  }\n\n  private trimComparator(prev: string, curr: string): boolean {\n    return prev.trim() === curr.trim();\n  }\n\n  ngOnDestroy(): void {\n    if (this.searchSubscription) {\n      this.searchSubscription.unsubscribe();\n    }\n  }\n\n  private populateUniqueDropdowns(products: InventoryItem[]): void {\n    this.uniqueOrigins = [...new Set(products.map((item) => item.origin))].filter(Boolean).sort() as string[];\n    this.uniquePackSizes = [...new Set(products.map((item) => item.packSize))].filter(Boolean).sort((a, b) => Number(a) - Number(b)) as (string | number)[];\n    this.uniqueBuyers = [...new Set(products.map((item) => item.buyer))].filter(Boolean).sort() as string[];\n  }\n}\n","<div class=\"content\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"50\" (scrolled)=\"onScroll()\">\n  <div class=\"container\">\n    <!-- Make the entire image-container clickable by wrapping in a link -->\n    <a [routerLink]=\"['/home']\" class=\"image-container\">\n      <img src=\"assets/logo.png\" alt=\"Company Logo\">\n    </a>\n\n    <h2 class=\"inventory-title\">Products</h2>\n\n    <!-- Search Bar Section -->\n    <div class=\"search-bar\">\n      <input type=\"text\" placeholder=\"Search Products\" (input)=\"onSearchChange($event)\">\n    </div>\n\n    <!-- Button Row for Relevant Items and Additional Filters -->\n    <div class=\"button-row\">\n      <button (click)=\"toggleRelevantItemsFilter()\" class=\"relevant-items-btn\">\n        {{ showRelevantItems ? 'Show All Items' : 'Relevant Items' }}\n      </button>\n      <button (click)=\"toggleSixtySalesFilter()\" class=\"filter-btn\">\n        {{ showSixtySales ? 'Show All Sixty Sales' : 'Sixty Sales > 0' }}\n      </button>\n      <button (click)=\"toggleWohFilter()\" class=\"filter-btn\">\n        {{ showWoh ? 'Show All WOH' : 'WOH > 0' }}\n      </button>\n      <button (click)=\"toggleYieldFilter()\" class=\"filter-btn\">\n        {{ showYield ? 'Show All Yield' : 'Yield < 100%' }} </button>\n      <button (click)=\"toggleWithImagesFilter()\" class=\"filter-btn\">\n        {{ showWithImages ? 'Show All Items' : 'With Images' }}\n      </button>\n    </div>\n\n    <!-- Centered Filters Section -->\n    <div class=\"filters\">\n      <div class=\"filter-group\">\n        <label for=\"originFilter\">Origin</label>\n        <select id=\"originFilter\" (change)=\"onFilterChange()\" [(ngModel)]=\"originFilter\">\n          <option value=\"\">All Origins</option>\n          <option *ngFor=\"let origin of uniqueOrigins\" [value]=\"origin\">{{ origin }}</option>\n        </select>\n      </div>\n      <div class=\"filter-group minfilter\">\n        <label for=\"comp-cost-min\">Min CompCost</label>\n        <input type=\"number\" id=\"comp-cost-min\" [(ngModel)]=\"minCompCost\" (input)=\"onCompCostChange()\" placeholder=\"Min\" />\n      </div>\n      <div class=\"filter-group\">\n        <label for=\"buyerFilter\">Buyer</label>\n        <select id=\"buyerFilter\" (change)=\"onFilterChange()\" [(ngModel)]=\"buyerFilter\">\n          <option value=\"\">All Buyers</option>\n          <option *ngFor=\"let buyer of uniqueBuyers\" [value]=\"buyer\">{{ buyer }}</option>\n        </select>\n      </div>\n    </div>\n\n    <!-- Inventory Grid Table -->\n    <table class=\"inventory-grid\" *ngIf=\"inventoryItems$ | async as products; else noData\">\n      <thead class=\"sticky\">\n        <tr>\n          <th>ID</th>\n          <th>Description</th>\n          <th>WOH</th>\n          <th>Sixty Sales</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr\n          *ngFor=\"let item of products\"\n          (click)=\"onRowClick(item, $event)\"\n          [class.has-image]=\"item.photoUrl\"\n        >\n          <td>{{ item.compItemId }}</td>\n          <td>\n            <div class=\"description-cell\">\n              {{ item.compDescription }}\n            </div>\n          </td>\n          <td>{{ item.woh }}</td>\n          <td>{{ item.sixtySales }}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <!-- Message for No Data -->\n    <ng-template #noData>\n      <p>No products available.</p>\n    </ng-template>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@Component({\n  standalone: true,\n  selector: 'app-w4-form',\n  templateUrl: './w4-form.component.html',\n  styleUrls: ['./w4-form.component.css'],\n  imports: [CommonModule, ReactiveFormsModule]\n})\nexport class W4FormComponent implements OnInit {\n  w4Form: FormGroup;\n\n  constructor(private fb: FormBuilder) {\n    this.w4Form = this.fb.group({\n      // Step 1: Personal Information\n      firstName: ['', Validators.required],\n      middleInitial: [''],\n      lastName: ['', Validators.required],\n      socialSecurity: ['', Validators.required],\n      address: ['', Validators.required],\n      cityStateZip: ['', Validators.required],\n      filingStatus: ['', Validators.required],\n      \n      // Step 2: Multiple Jobs\n      multipleJobs: [false],\n      \n      // Step 3: Claim Dependents\n      qualifyingChildren: ['0'],\n      otherDependents: ['0'],\n      totalDependents: ['0'],\n      \n      // Step 4: Other Adjustments\n      otherIncome: [''],\n      deductions: [''],\n      extraWithholding: [''],\n      \n      // Step 5: Signature\n      employeeSignature: ['', Validators.required],\n      signatureDate: ['', Validators.required],\n      \n      // Employer Section\n      employerName: [''],\n      employerAddress: [''],\n      firstDateEmployment: [''],\n      employerEIN: ['']\n    });\n  }\n\n  ngOnInit(): void {\n    // Set default date\n    const today = new Date().toISOString().split('T')[0];\n    this.w4Form.patchValue({\n      signatureDate: today\n    });\n  }\n\n  calculateDependents() {\n    const children = Number(this.w4Form.get('qualifyingChildren')?.value || 0) * 2000;\n    const others = Number(this.w4Form.get('otherDependents')?.value || 0) * 500;\n    const total = children + others;\n    this.w4Form.patchValue({\n      totalDependents: total\n    });\n  }\n\n  onSubmit() {\n    if (this.w4Form.valid) {\n      console.log(this.w4Form.value);\n    } else {\n      Object.keys(this.w4Form.controls).forEach(key => {\n        const control = this.w4Form.get(key);\n        if (control?.invalid) {\n          control.markAsTouched();\n        }\n      });\n    }\n  }\n}","<form [formGroup]=\"w4Form\" (ngSubmit)=\"onSubmit()\" class=\"w4-form\">\n    <div class=\"form-header\">\n      <h2>Employee's Withholding Certificate</h2>\n      <p>Complete Form W-4 so that your employer can withhold the correct federal income tax from your pay.</p>\n    </div>\n  \n    <!-- Step 1: Personal Information -->\n    <div class=\"section\">\n      <h3>Step 1: Enter Personal Information</h3>\n      <div class=\"form-row\">\n        <div class=\"form-group\">\n          <label>First name and middle initial</label>\n          <div class=\"name-group\">\n            <input type=\"text\" formControlName=\"firstName\" placeholder=\"First name\">\n            <input type=\"text\" formControlName=\"middleInitial\" class=\"middle-initial\" placeholder=\"MI\">\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label>Last name</label>\n          <input type=\"text\" formControlName=\"lastName\">\n        </div>\n        <div class=\"form-group\">\n          <label>Social security number</label>\n          <input type=\"text\" formControlName=\"socialSecurity\">\n        </div>\n      </div>\n  \n      <div class=\"form-row\">\n        <div class=\"form-group full-width\">\n          <label>Address</label>\n          <input type=\"text\" formControlName=\"address\">\n        </div>\n      </div>\n  \n      <div class=\"form-row\">\n        <div class=\"form-group full-width\">\n          <label>City or town, state, and ZIP code</label>\n          <input type=\"text\" formControlName=\"cityStateZip\">\n        </div>\n      </div>\n  \n      <div class=\"filing-status\">\n        <label>Filing Status:</label>\n        <div class=\"radio-group\">\n          <label>\n            <input type=\"radio\" formControlName=\"filingStatus\" value=\"single\">\n            Single or Married filing separately\n          </label>\n          <label>\n            <input type=\"radio\" formControlName=\"filingStatus\" value=\"married\">\n            Married filing jointly\n          </label>\n          <label>\n            <input type=\"radio\" formControlName=\"filingStatus\" value=\"head\">\n            Head of household\n          </label>\n        </div>\n      </div>\n    </div>\n  \n    <!-- Step 2: Multiple Jobs -->\n    <div class=\"section\">\n      <h3>Step 2: Multiple Jobs or Spouse Works</h3>\n      <div class=\"checkbox-group\">\n        <label>\n          <input type=\"checkbox\" formControlName=\"multipleJobs\">\n          Check here if you have multiple jobs or spouse works\n        </label>\n      </div>\n    </div>\n  \n    <!-- Step 3: Claim Dependents -->\n    <div class=\"section\">\n      <h3>Step 3: Claim Dependents</h3>\n      <div class=\"form-row\">\n        <div class=\"form-group\">\n          <label>Multiply the number of qualifying children under age 17 by $2,000</label>\n          <div class=\"input-group\">\n            <span class=\"currency\">$</span>\n            <input type=\"number\" formControlName=\"qualifyingChildren\" (change)=\"calculateDependents()\">\n          </div>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group\">\n          <label>Multiply the number of other dependents by $500</label>\n          <div class=\"input-group\">\n            <span class=\"currency\">$</span>\n            <input type=\"number\" formControlName=\"otherDependents\" (change)=\"calculateDependents()\">\n          </div>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group\">\n          <label>Total amount</label>\n          <div class=\"input-group\">\n            <span class=\"currency\">$</span>\n            <input type=\"number\" formControlName=\"totalDependents\" readonly>\n          </div>\n        </div>\n      </div>\n    </div>\n  \n    <!-- Step 4: Other Adjustments -->\n    <div class=\"section\">\n      <h3>Step 4 (optional): Other Adjustments</h3>\n      <div class=\"form-row\">\n        <div class=\"form-group\">\n          <label>(a) Other income</label>\n          <div class=\"input-group\">\n            <span class=\"currency\">$</span>\n            <input type=\"number\" formControlName=\"otherIncome\">\n          </div>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group\">\n          <label>(b) Deductions</label>\n          <div class=\"input-group\">\n            <span class=\"currency\">$</span>\n            <input type=\"number\" formControlName=\"deductions\">\n          </div>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group\">\n          <label>(c) Extra withholding</label>\n          <div class=\"input-group\">\n            <span class=\"currency\">$</span>\n            <input type=\"number\" formControlName=\"extraWithholding\">\n          </div>\n        </div>\n      </div>\n    </div>\n  \n    <!-- Step 5: Signature -->\n    <div class=\"section\">\n      <h3>Step 5: Sign Here</h3>\n      <div class=\"form-row\">\n        <div class=\"form-group\">\n          <label>Employee's signature</label>\n          <input type=\"text\" formControlName=\"employeeSignature\">\n        </div>\n        <div class=\"form-group\">\n          <label>Date</label>\n          <input type=\"date\" formControlName=\"signatureDate\">\n        </div>\n      </div>\n    </div>\n  \n    <!-- Employers Only Section -->\n    <div class=\"section employers-section\">\n      <h3>Employers Only</h3>\n      <div class=\"form-row\">\n        <div class=\"form-group\">\n          <label>Employer's name and address</label>\n          <input type=\"text\" formControlName=\"employerName\">\n          <input type=\"text\" formControlName=\"employerAddress\">\n        </div>\n        <div class=\"form-group\">\n          <label>First date of employment</label>\n          <input type=\"date\" formControlName=\"firstDateEmployment\">\n        </div>\n        <div class=\"form-group\">\n          <label>Employer identification number (EIN)</label>\n          <input type=\"text\" formControlName=\"employerEIN\">\n        </div>\n      </div>\n    </div>\n  \n    <div class=\"button-group\">\n      <button type=\"submit\">Submit Form</button>\n      <button type=\"reset\">Reset Form</button>\n    </div>\n  </form>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@Component({\n  standalone: true,\n  selector: 'app-withholding',\n  templateUrl: './withholding.component.html',\n  styleUrls: ['./withholding.component.css'],\n  imports: [CommonModule, ReactiveFormsModule]\n})\nexport class WithholdingComponent implements OnInit {\n  withholdingForm: FormGroup;\n\n  constructor(private fb: FormBuilder) {\n    this.withholdingForm = this.fb.group({\n      // Personal Information\n      fullName: ['', Validators.required],\n      socialSecurity: ['', Validators.required],\n      address: ['', Validators.required],\n      city: ['', Validators.required],\n      state: ['CA', Validators.required],\n      zipCode: ['', Validators.required],\n      \n      // Filing Status\n      filingStatus: ['', Validators.required],\n      \n      // Allowances\n      regularAllowances: ['0'],\n      estimatedDeductions: ['0'],\n      totalAllowances: ['0'],\n      \n      // Additional Withholding\n      additionalAmount: [''],\n      \n      // Exemption Options\n      exemptionClaim: [false],\n      militaryExemption: [false],\n      \n      // Signature\n      employeeSignature: ['', Validators.required],\n      signatureDate: ['', Validators.required],\n      \n      // Employer Section\n      employerName: [''],\n      employerAddress: [''],\n      payrollTaxNumber: ['']\n    });\n  }\n\n  ngOnInit(): void {\n    // Set default date\n    const today = new Date().toISOString().split('T')[0];\n    this.withholdingForm.patchValue({\n      signatureDate: today\n    });\n  }\n\n  calculateTotalAllowances() {\n    const regular = Number(this.withholdingForm.get('regularAllowances')?.value || 0);\n    const estimated = Number(this.withholdingForm.get('estimatedDeductions')?.value || 0);\n    const total = regular + estimated;\n    \n    this.withholdingForm.patchValue({\n      totalAllowances: total\n    });\n  }\n\n  onSubmit() {\n    if (this.withholdingForm.valid) {\n      console.log(this.withholdingForm.value);\n    } else {\n      Object.keys(this.withholdingForm.controls).forEach(key => {\n        const control = this.withholdingForm.get(key);\n        if (control?.invalid) {\n          control.markAsTouched();\n        }\n      });\n    }\n  }\n}","<form [formGroup]=\"withholdingForm\" (ngSubmit)=\"onSubmit()\" class=\"withholding-form\">\n    <div class=\"form-header\">\n      <h2>Employee's Withholding Allowance Certificate</h2>\n      <p>Complete this form so that your employer can withhold the correct California state income tax from your pay.</p>\n    </div>\n  \n    <!-- Personal Information -->\n    <div class=\"section\">\n      <h3>Personal Information</h3>\n      <div class=\"form-row\">\n        <div class=\"form-group full-width\">\n          <label>First, Middle, Last Name</label>\n          <input type=\"text\" formControlName=\"fullName\">\n        </div>\n      </div>\n  \n      <div class=\"form-row\">\n        <div class=\"form-group\">\n          <label>Social Security Number</label>\n          <input type=\"text\" formControlName=\"socialSecurity\">\n        </div>\n      </div>\n  \n      <div class=\"form-row\">\n        <div class=\"form-group full-width\">\n          <label>Address</label>\n          <input type=\"text\" formControlName=\"address\">\n        </div>\n      </div>\n  \n      <div class=\"form-row\">\n        <div class=\"form-group\">\n          <label>City</label>\n          <input type=\"text\" formControlName=\"city\">\n        </div>\n        <div class=\"form-group small\">\n          <label>State</label>\n          <input type=\"text\" formControlName=\"state\">\n        </div>\n        <div class=\"form-group small\">\n          <label>ZIP Code</label>\n          <input type=\"text\" formControlName=\"zipCode\">\n        </div>\n      </div>\n  \n      <div class=\"filing-status\">\n        <label>Filing Status</label>\n        <div class=\"radio-group\">\n          <label>\n            <input type=\"radio\" formControlName=\"filingStatus\" value=\"single\">\n            Single or Married (with two or more incomes)\n          </label>\n          <label>\n            <input type=\"radio\" formControlName=\"filingStatus\" value=\"married\">\n            Married (one income)\n          </label>\n          <label>\n            <input type=\"radio\" formControlName=\"filingStatus\" value=\"head\">\n            Head of Household\n          </label>\n        </div>\n      </div>\n    </div>\n  \n    <!-- Allowances Section -->\n    <div class=\"section\">\n      <div class=\"form-row\">\n        <div class=\"form-group\">\n          <label>1a. Number of Regular Withholding Allowances (Worksheet A)</label>\n          <input type=\"number\" formControlName=\"regularAllowances\" (change)=\"calculateTotalAllowances()\">\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group\">\n          <label>1b. Number of allowances from Estimated Deductions (Worksheet B)</label>\n          <input type=\"number\" formControlName=\"estimatedDeductions\" (change)=\"calculateTotalAllowances()\">\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group\">\n          <label>1c. Total Number of Allowances you are claiming</label>\n          <input type=\"number\" formControlName=\"totalAllowances\" readonly>\n        </div>\n      </div>\n    </div>\n  \n    <!-- Additional Withholding -->\n    <div class=\"section\">\n      <div class=\"form-row\">\n        <div class=\"form-group\">\n          <label>2. Additional amount you want withheld each pay period (if employer agrees)</label>\n          <div class=\"input-group\">\n            <span class=\"currency\">$</span>\n            <input type=\"number\" formControlName=\"additionalAmount\">\n          </div>\n        </div>\n      </div>\n    </div>\n  \n    <!-- Exemption Section -->\n    <div class=\"section\">\n      <h3>Exemption from Withholding</h3>\n      <div class=\"checkbox-group\">\n        <label>\n          <input type=\"checkbox\" formControlName=\"exemptionClaim\">\n          3. I claim exemption from withholding for 2025, and I certify I meet both conditions for exemption.\n        </label>\n        <label>\n          <input type=\"checkbox\" formControlName=\"militaryExemption\">\n          4. I certify under penalty of perjury that I am not subject to California withholding under the Service Member Civil Relief Act.\n        </label>\n      </div>\n    </div>\n  \n    <!-- Signature Section -->\n    <div class=\"section\">\n      <div class=\"certification-text\">\n        Under penalty of perjury, I certify that the number of withholding allowances claimed on this certificate does not exceed the number to which I am entitled or, if claiming exemption from withholding, that I am entitled to claim the exempt status.\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group\">\n          <label>Employee's Signature</label>\n          <input type=\"text\" formControlName=\"employeeSignature\">\n        </div>\n        <div class=\"form-group\">\n          <label>Date</label>\n          <input type=\"date\" formControlName=\"signatureDate\">\n        </div>\n      </div>\n    </div>\n  \n    <!-- Employer Section -->\n    <div class=\"section employer-section\">\n      <h3>Employer's Section</h3>\n      <div class=\"form-row\">\n        <div class=\"form-group full-width\">\n          <label>Employer's Name and Address</label>\n          <input type=\"text\" formControlName=\"employerName\">\n          <input type=\"text\" formControlName=\"employerAddress\">\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group\">\n          <label>California Employer Payroll Tax Account Number</label>\n          <input type=\"text\" formControlName=\"payrollTaxNumber\">\n        </div>\n      </div>\n    </div>\n  \n    <div class=\"button-group\">\n      <button type=\"submit\">Submit Form</button>\n      <button type=\"reset\">Reset Form</button>\n    </div>\n  </form>","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(): boolean {\n    if (this.authService.isLoggedIn()) {\n      return true;\n    } else {\n      // Redirect to login if not authenticated\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n\n  intercept<T>(req: HttpRequest<T>, next: HttpHandler): Observable<HttpEvent<T>> {\n    // Get the token from the AuthService (or other storage like localStorage)\n    const token = this.authService.getToken(); // Make sure to implement getToken() method\n\n    if (token) {\n      // Clone the request and add the authorization header\n      const clonedRequest = req.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      return next.handle(clonedRequest);\n    }\n\n    // If there's no token, continue with the original request\n    return next.handle(req);\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ChartConfiguration, ChartOptions } from 'chart.js';\nimport { BaseChartDirective } from 'ng2-charts';\nimport { LogoComponent } from '../components/logo/logo.component';\nimport { map, Observable } from 'rxjs';\nimport { OrderService } from '../services/order.services';\nimport { CommonModule } from '@angular/common';\nimport { SalesPerDayChartComponent } from '../sales-per-day-chart/sales-per-day-chart.component';\nimport { SalesPerSalesRepChartComponent } from '../sales-per-sales-rep-chart/sales-per-sales-rep-chart.component';\nimport { SalesPerSalesRepCustomerComponent } from '../sales-per-customer/sales-per-customer-chart.component';\n\n@Component({\n  selector: 'app-reports',\n  standalone: true,\n  imports: [RouterModule, CommonModule, LogoComponent, SalesPerDayChartComponent, SalesPerSalesRepChartComponent, SalesPerSalesRepCustomerComponent],\n  templateUrl: './reports.component.html',\n  styleUrl: './reports.component.css',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReportsComponent implements OnInit {\n  pastMonths: number = 3;\n\n  ngOnInit(): void {\n    this.fetchChartData('6');\n  }\n\n  fetchChartData(months: string): void {\n    this.pastMonths = Number(months);\n  }\n\n  //////////////////////////////////\n  // Line\n\n  lineChartLegend = true;\n\n  public lineChartData: ChartConfiguration<'line'>['data'] = {\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [\n      {\n        data: [65, 59, 80, 81, 56, 55, 40],\n        label: 'Sales',\n        fill: true,\n        tension: 0.5,\n        borderColor: 'black',\n        backgroundColor: 'rgba(255,0,0,0.3)',\n      },\n      {\n        data: [30, 40, 45, 50, 45, 40, 25],\n        label: 'Volume',\n        fill: true,\n        tension: 0.5,\n        borderColor: 'black',\n        backgroundColor: 'rgba(55,0,0,0.3)',\n      },\n    ],\n  };\n  public lineChartOptions: ChartOptions<'line'> = {\n    responsive: false,\n  };\n\n  //////////////////////////////////\n  // Pie\n  public pieChartOptions: ChartOptions<'pie'> = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'bottom', // Positions the legend at the bottom\n      },\n    },\n  };\n  public pieChartLabels = [['Download', 'Sales'], ['In', 'Store', 'Sales'], 'Mail Sales'];\n  public pieChartDatasets = [\n    {\n      data: [300, 500, 100],\n    },\n  ];\n  public pieChartLegend = true;\n  public pieChartPlugins = [];\n\n  //////////////////////////////////\n  // Bar\n  public barChartLegend = true;\n  public barChartPlugins = [];\n\n  public barChartData: ChartConfiguration<'bar'>['data'] = {\n    labels: ['2006', '2007', '2008', '2009', '2010', '2011', '2012'],\n    datasets: [\n      { data: [65, 59, 80, 81, 56, 55, 40], label: 'Series A' },\n      { data: [28, 48, 40, 19, 86, 27, 90], label: 'Series B' },\n    ],\n  };\n\n  //////////////////////////////////\n  // Doughnut\n  public doughnutChartLabels: string[] = ['Download Sales', 'In-Store Sales', 'Mail-Order Sales'];\n  public doughnutChartDatasets: ChartConfiguration<'doughnut'>['data']['datasets'] = [\n    { data: [350, 450, 100], label: 'Series A' },\n    { data: [50, 150, 120], label: 'Series B' },\n    { data: [250, 130, 70], label: 'Series C' },\n  ];\n\n  public doughnutChartOptions: ChartConfiguration<'doughnut'>['options'] = {\n    responsive: false,\n  };\n}\n","<div class=\"container\">\n    <a [routerLink]=\"['/home']\">\n        <app-logo></app-logo>\n    </a>\n\n    <h2 class=\"inventory-title\">Reports</h2>\n\n\n    <label for=\"months\">Total sales for the </label>\n    <select #months id=\"months\" (change)=\"fetchChartData(months.value)\">\n        <option value=\"1\">Last 1 month</option>\n        <option value=\"3\" selected>Last 3 months</option>\n        <option value=\"6\">Last 6 months</option>\n        <option value=\"12\">Last 12 months</option>\n    </select>\n\n\n    <app-sales-per-day-chart [pastMonths]=\"pastMonths\"></app-sales-per-day-chart>\n\n    <div class=\"charts\">\n\n        <app-sales-per-sales-rep-chart [pastMonths]=\"pastMonths\"></app-sales-per-sales-rep-chart>\n        <app-sales-per-customer-chart [pastMonths]=\"pastMonths\"></app-sales-per-customer-chart>\n\n    </div>\n\n\n\n\n\n    <!--\n    <canvas *ngIf=\"chartData$ | async as chartData; else loading\" baseChart [data]=\"chartData\" [type]=\"'bar'\" [options]=\"barChartOptions\"></canvas>\n\n    <ng-template #loading>\n        <canvas baseChart [data]=\"\" [type]=\"'bar'\" [options]=\"\"></canvas>\n    </ng-template>\n\n    <div class=\"charts\">\n        <canvas baseChart width=\"350\" height=\"350\" [type]=\"'line'\" [data]=\"lineChartData\" [options]=\"lineChartOptions\" [legend]=\"lineChartLegend\">\n        </canvas>\n\n        <canvas baseChart width=\"350\" height=\"350\" [type]=\"'pie'\" [datasets]=\"pieChartDatasets\" [labels]=\"pieChartLabels\" [options]=\"pieChartOptions\" [plugins]=\"pieChartPlugins\"\n            [legend]=\"pieChartLegend\">\n        </canvas>\n\n\n        <canvas baseChart width=\"350\" height=\"350\" [data]=\"barChartData\" [options]=\"barChartOptions\" [plugins]=\"barChartPlugins\" [legend]=\"barChartLegend\" [type]=\"'bar'\">\n        </canvas>\n\n        <canvas baseChart width=\"350\" height=\"350\" [labels]=\"doughnutChartLabels\" [datasets]=\"doughnutChartDatasets\" [options]=\"doughnutChartOptions\" [legend]=\"true\"\n            [type]=\"'doughnut'\">\n        </canvas>\n\n    </div>\n-->\n\n</div>","import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, Input, OnInit, SimpleChanges, OnChanges } from '@angular/core';\nimport { ChartOptions } from 'chart.js';\nimport { BaseChartDirective } from 'ng2-charts';\nimport { OrderService } from '../services/order.services';\nimport { Observable, tap } from 'rxjs';\nimport { TotalAmountPerCustomer } from '../models/total-amoount-per-customer.model';\n\n@Component({\n  selector: 'app-sales-per-customer-chart',\n  standalone: true,\n  imports: [CommonModule, BaseChartDirective],\n  templateUrl: './sales-per-customer-chart.component.html',\n  styleUrl: './sales-per-customer-chart.component.css',\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class SalesPerSalesRepCustomerComponent implements OnInit, OnChanges {\n  @Input() pastMonths: number = 3;\n\n  public chartData$?: Observable<TotalAmountPerCustomer[]>;\n\n  public pieChartLabels: string[] = [];\n  public pieChartDatasets: { data: number[] }[] = [];\n\n  constructor(private orderService: OrderService) {}\n\n  ngOnInit(): void {\n    this.fetchChartData(this.pastMonths);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['pastMonths']) {\n      this.fetchChartData(this.pastMonths);\n    }\n  }\n\n  fetchChartData(pastMonths: number): void {\n    this.chartData$ = this.orderService.getTotalAmountPerCustomer(pastMonths).pipe(\n      tap((data) => {\n        this.pieChartLabels = data.map((item) => item.customerName);\n        this.pieChartDatasets = [{ data: data.map((item) => item.totalAmount) }];\n      }),\n    );\n  }\n\n  public pieChartOptions: ChartOptions<'pie'> = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'bottom', // Positions the legend at the bottom\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            const value = context.raw as number; // The raw data value\n            return ` $${value.toLocaleString()}`; // Format with $ sign and thousands separator\n          },\n        },\n      },\n    },\n  };\n  /*\n  public pieChartLabels = ['Download', 'In', 'Mail Sales'];\n  public pieChartDatasets = [\n    {\n      data: [300, 500, 100],\n    },\n  ];\n  */\n  public pieChartLegend = true;\n  public pieChartPlugins = [];\n}\n","<canvas *ngIf=\"chartData$ | async as chartData; else loading\" baseChart [type]=\"'pie'\" [datasets]=\"pieChartDatasets\" [labels]=\"pieChartLabels\" [options]=\"pieChartOptions\"\n    [plugins]=\"pieChartPlugins\" [legend]=\"pieChartLegend\">\n</canvas>\n\n<ng-template #loading>\n    <canvas baseChart [data]=\"\" [type]=\"'pie'\" [options]=\"pieChartOptions\"></canvas>\n</ng-template>\n\nSales per Customer (top 5)","import { ChangeDetectionStrategy, Component, Input, OnInit, SimpleChanges, OnChanges } from '@angular/core';\nimport { BaseChartDirective } from 'ng2-charts';\nimport { map, Observable } from 'rxjs';\nimport { OrderService } from '../services/order.services';\nimport { ChartOptions } from 'chart.js';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-sales-per-day-chart',\n  standalone: true,\n  imports: [CommonModule, BaseChartDirective],\n  templateUrl: './sales-per-day-chart.component.html',\n  styleUrl: './sales-per-day-chart.component.css',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SalesPerDayChartComponent implements OnInit, OnChanges {\n  @Input() pastMonths: number = 3;\n\n  public chartData$?: Observable<{\n    labels: string[];\n    datasets: { data: number[]; label: string }[];\n  }>;\n\n  barChartOptions: ChartOptions = {\n    responsive: true,\n    scales: {\n      y: {\n        beginAtZero: true,\n        ticks: {\n          callback: function (value) {\n            return `$${value.toLocaleString()}`;\n          },\n        },\n      },\n    },\n\n    plugins: {\n      legend: {\n        display: false, // Disable the legend\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            const value = context.raw as number; // The raw data value\n            return ` $${value.toLocaleString()}`; // Format with $ sign and thousands separator\n          },\n        },\n      },\n    },\n  };\n\n  constructor(private orderService: OrderService) {}\n\n  ngOnInit(): void {\n    this.fetchChartData(this.pastMonths);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['pastMonths']) {\n      this.fetchChartData(this.pastMonths);\n    }\n  }\n\n  fetchChartData(pastMonths: number): void {\n    this.chartData$ = this.orderService.getTotalAmountPerDay(pastMonths).pipe(\n      map((data) => ({\n        labels: data.map((entry) => this.convertDateFormat(entry.date)),\n        datasets: [\n          {\n            data: data.map((entry) => entry.totalAmount),\n            label: 'Total Sales ($)',\n          },\n        ],\n      })),\n    );\n  }\n\n  private convertDateFormat(dateString: string): string {\n    if (!dateString) return '';\n    const parts = dateString.split('-');\n    if (parts.length === 3) {\n      const year = parts[0];\n      const month = parts[1];\n      const day = parts[2];\n      return `${month}/${day}/${year}`;\n    }\n    return '';\n  }\n}\n","<canvas *ngIf=\"chartData$ | async as chartData; else loading\" baseChart [data]=\"chartData\" [type]=\"'bar'\" [options]=\"barChartOptions\"></canvas>\n\n<ng-template #loading>\n    <canvas baseChart [data]=\"\" [type]=\"'bar'\" [options]=\"barChartOptions\"></canvas>\n</ng-template>\nSales per Day","import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, Input, OnInit, SimpleChanges, OnChanges } from '@angular/core';\nimport { ChartOptions } from 'chart.js';\nimport { BaseChartDirective } from 'ng2-charts';\nimport { OrderService } from '../services/order.services';\nimport { Observable, tap } from 'rxjs';\nimport { TotalAmountPerSalesRep } from '../models/total-amoount-per-sales-rep.model';\n\n@Component({\n  selector: 'app-sales-per-sales-rep-chart',\n  standalone: true,\n  imports: [CommonModule, BaseChartDirective],\n  templateUrl: './sales-per-sales-rep-chart.component.html',\n  styleUrl: './sales-per-sales-rep-chart.component.css',\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class SalesPerSalesRepChartComponent implements OnInit, OnChanges {\n  @Input() pastMonths: number = 3;\n\n  public chartData$?: Observable<TotalAmountPerSalesRep[]>;\n\n  public pieChartLabels: string[] = [];\n  public pieChartDatasets: { data: number[] }[] = [];\n\n  constructor(private orderService: OrderService) {}\n\n  ngOnInit(): void {\n    this.fetchChartData(this.pastMonths);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['pastMonths']) {\n      this.fetchChartData(this.pastMonths);\n    }\n  }\n\n  fetchChartData(pastMonths: number): void {\n    this.chartData$ = this.orderService.getTotalAmountPerSalesRep(pastMonths).pipe(\n      tap((data) => {\n        this.pieChartLabels = data.map((item) => item.salesRepName);\n        this.pieChartDatasets = [{ data: data.map((item) => item.totalAmount) }];\n      }),\n    );\n  }\n\n  public pieChartOptions: ChartOptions<'pie'> = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'bottom', // Positions the legend at the bottom\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            const value = context.raw as number; // The raw data value\n            return ` $${value.toLocaleString()}`; // Format with $ sign and thousands separator\n          },\n        },\n      },\n    },\n  };\n  /*\n  public pieChartLabels = ['Download', 'In', 'Mail Sales'];\n  public pieChartDatasets = [\n    {\n      data: [300, 500, 100],\n    },\n  ];\n  */\n  public pieChartLegend = true;\n  public pieChartPlugins = [];\n}\n","<canvas *ngIf=\"chartData$ | async as chartData; else loading\" baseChart [type]=\"'pie'\" [datasets]=\"pieChartDatasets\" [labels]=\"pieChartLabels\" [options]=\"pieChartOptions\"\n    [plugins]=\"pieChartPlugins\" [legend]=\"pieChartLegend\">\n</canvas>\n\n<ng-template #loading>\n    <canvas baseChart [data]=\"\" [type]=\"'pie'\" [options]=\"pieChartOptions\"></canvas>\n</ng-template>\n\nSales per Rep","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../models/user.model ';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private tokenKey = 'authToken';\n  private fullnameKey = 'fullname';\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  login(username: string, password: string): Observable<User> {\n    return this.http.post<User>(`${environment.apiUrl}/public/auth/login`, { username, password });\n  }\n\n  passwordRequest(username: string): Observable<unknown> {\n    return this.http.post<unknown>(`${environment.apiUrl}/public/auth/password-request`, { username });\n  }\n\n  passwordReset(password: string, token: string): Observable<unknown> {\n    return this.http.post<unknown>(`${environment.apiUrl}/public/auth/password-reset`, { password, token });\n  }\n\n  saveFullnameAndToken(fullname: string, token: string): void {\n    localStorage.setItem(this.tokenKey, token);\n    localStorage.setItem(this.fullnameKey, fullname);\n  }\n\n  // Retrieve the token (from sessionStorage first, then fallback to localStorage)\n  getToken(): string | null {\n    const token = localStorage.getItem(this.tokenKey);\n    return token;\n  }\n\n  getFullname(): string | null {\n    const token = localStorage.getItem(this.fullnameKey);\n    return token;\n  }\n\n  // Check if the user is logged in by verifying if a token exists\n  isLoggedIn(): boolean {\n    const token = localStorage.getItem(this.tokenKey);\n    return !!token;\n  }\n\n  // Optional: method to log out\n  logout(): void {\n    localStorage.removeItem(this.tokenKey);\n    this.router.navigate(['/login']);\n  }\n\n  // Check if token exists and is not expired\n  /*\n  isTokenValid(url?: string): boolean {\n    // Skip token validation if the URL matches an excluded path\n    if (url && this.isExcludedPath(url)) {\n      console.log('URL is excluded from authentication, skipping token validation:', url);\n      return true;\n    }\n\n    const token = this.getToken();\n    if (!token) {\n      console.warn('No token found');\n      return false;\n    }\n\n    const payload = this.decodeToken(token);\n    if (!payload || !payload.exp) {\n      console.warn('Invalid token payload');\n      return false;\n    }\n\n    const expiryTime = payload.exp * 1000; // Convert to milliseconds\n    const currentTime = Date.now();\n    const isValid = currentTime < expiryTime;\n    console.log('Token validity:', isValid); // Debug: Log token validity\n    return isValid;\n  }\n\n  // Decode the token to get its payload\n  private decodeToken(token: string): any | null {\n    try {\n      const payloadPart = token.split('.')[1];\n      const decodedPayload = atob(payloadPart);\n      const parsedPayload = JSON.parse(decodedPayload);\n      console.log('Decoded token payload:', parsedPayload); // Debug: Log decoded payload\n      return parsedPayload;\n    } catch (error) {\n      console.error('Failed to decode token:', error);\n      return null;\n    }\n  }\n*/\n}\n","import { HttpClient, HttpEvent, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { DeliveryStop } from '../models/delivery-stop.model';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from './auth.service';\n\ninterface Driver {\n  name: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DriverRouteService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient, private authService: AuthService) {}\n\n  getDrivers(): Observable<Driver[]> {\n    return this.http.get<Driver[]>(`${this.apiUrl}/drivers`);\n  }\n\n  getDeliveryRoute(driverName: string, deliveryDate: string): Observable<DeliveryStop[]> {\n    const params = new HttpParams().set('driverName', driverName).set('deliveryDate', deliveryDate);\n\n    return this.http.get<DeliveryStop[]>(`${this.apiUrl}/delivery-stops`, { params });\n  }\n\n  hasArrived(id: string): Observable<DeliveryStop> {\n    return this.http.patch<DeliveryStop>(`${this.apiUrl}/delivery-stops/${id}`, {});\n  }\n\n  uploadPhoto(deliveryStopId: number, file: File): Observable<HttpEvent<DeliveryStop>> {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    return this.http.post<DeliveryStop>(`${this.apiUrl}/delivery-stops/${deliveryStopId}/photos`, formData, {\n      reportProgress: true,\n      observe: 'events',\n    });\n  }\n}\n","import { ErrorHandler, Injectable } from '@angular/core';\nimport { SnackbarService } from './snackbar.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GlobalErrorHandlerService implements ErrorHandler {\n  constructor(private snackBarService: SnackbarService, private router: Router, private authService: AuthService) {}\n\n  handleError(error: unknown) {\n    if (error instanceof HttpErrorResponse) {\n      // Check network connectivity\n      if (!navigator.onLine) {\n        this.snackBarService.showError('No internet connection');\n        return;\n      }\n\n      // Handle client-side errors\n      if (error.error instanceof ErrorEvent) {\n        this.snackBarService.showError(error.error.message);\n        return;\n      }\n\n      // Handle specific HTTP status codes\n      switch (error.status) {\n        case 401:\n          this.authService.logout();\n          this.snackBarService.showError('Unauthorized. Please enter your credentials.');\n          this.router.navigate(['/login']);\n          break;\n\n        case 403: {\n          this.authService.logout();\n          const errorMessage = error.error?.message || 'Try again.';\n          this.snackBarService.showError(`Access denied. ${errorMessage}.`);\n          break;\n        }\n        case 423: {\n          this.authService.logout();\n          const errorMessage = error.error?.message || 'Try again.';\n          this.snackBarService.showError(`Access denied. ${errorMessage}.`);\n          break;\n        }\n        case 404:\n          this.snackBarService.showError('Resource not found.');\n          break;\n\n        case 413:\n          this.snackBarService.showError('File too large.');\n          break;\n        case 500: {\n          const errorMessage = error.error?.message || 'Please try again later.';\n          this.snackBarService.showError(`Error: ${errorMessage}`);\n          break;\n        }\n        default: {\n          console.error('An error occurred:', error);\n          const errorMessage = error.error?.message || 'An unexpected error occurred.';\n          this.snackBarService.showError(`Error: ${errorMessage}`);\n        }\n      }\n\n      // Log the full error for debugging\n      console.error('Full error details:', {\n        status: error.status,\n        statusText: error.statusText,\n        url: error.url,\n        error: error.error,\n      });\n    } else {\n      // Handle client-side/non-HTTP errors\n      console.error('Client-side error:', error);\n      this.snackBarService.showError('An unexpected error occurred');\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { OrderRequest } from '../models/order-request.model';\nimport { OrderConfirmation } from '../models/order-confirmation.model';\nimport { environment } from 'src/environments/environment';\nimport { Order } from '../models/order.model';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderFormService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient, private authService: AuthService) {}\n\n  getOrderData(customerId: number): Observable<Order> {\n    return this.http.get<Order>(`${this.apiUrl}/public/customers/${customerId}/profiles`);\n  }\n\n  placeOrder(customerId: number, order: OrderRequest): Observable<OrderConfirmation> {\n    const url = `${this.apiUrl}/public/customers/${customerId}/orders`;\n    return this.http.post<OrderConfirmation>(url, order);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Company } from '../models/company.model';\nimport { Customer } from '../models/customer.model';\nimport { SalesRep } from '../models/sales-rep.model';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderLinksService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient, private authService: AuthService) {}\n\n  getCompanies(): Observable<Company[]> {\n    return this.http.get<Company[]>(`${this.apiUrl}/companies`);\n  }\n\n  getSalesPersons(companyId: number): Observable<SalesRep[]> {\n    return this.http.get<SalesRep[]>(`${this.apiUrl}/companies/${companyId}/sales-reps`);\n  }\n\n  getCustomers(companyId: number, salesRepName: string): Observable<Customer[]> {\n    return this.http.get<Customer[]>(`${this.apiUrl}/companies/${companyId}/sales-reps/${salesRepName}/customers`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Company } from '../models/company.model';\nimport { SalesRep } from '../models/sales-rep.model';\nimport { Order } from '../models/order.model';\nimport { TotalAmountPerDay } from '../models/total-amoount-per-day.model';\nimport { TotalAmountPerSalesRep } from '../models/total-amoount-per-sales-rep.model';\nimport { TotalAmountPerCustomer } from '../models/total-amoount-per-customer.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderService {\n  constructor(private http: HttpClient) {}\n\n  public loadCompanies(): Observable<Company[]> {\n    return this.http.get<Company[]>(`${environment.apiUrl}/companies`);\n  }\n\n  public loadOrders(company_id: number, salesrep_name: string, past_hours: number): Observable<Order[]> {\n    const apiUrl = `${environment.apiUrl}/companies/${company_id}/sales-reps/${salesrep_name}/orders?pastHours=${past_hours}`;\n    return this.http.get<Order[]>(apiUrl);\n  }\n\n  public loadSalesRep(company_id: number): Observable<SalesRep[]> {\n    return this.http.get<SalesRep[]>(`${environment.apiUrl}/companies/${company_id}/sales-reps`);\n  }\n\n  getTotalAmountPerDay(months: number): Observable<TotalAmountPerDay[]> {\n    return this.http.get<TotalAmountPerDay[]>(`${environment.apiUrl}/sales-per-days?months=${months}`);\n  }\n\n  getTotalAmountPerSalesRep(months: number): Observable<TotalAmountPerSalesRep[]> {\n    return this.http.get<TotalAmountPerSalesRep[]>(`${environment.apiUrl}/sales-per-sales-reps?months=${months}`);\n  }\n\n  getTotalAmountPerCustomer(months: number): Observable<TotalAmountPerCustomer[]> {\n    return this.http.get<TotalAmountPerCustomer[]>(`${environment.apiUrl}/sales-per-top-5-customers?months=${months}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { PreOrder } from '../models/preorder.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PreorderService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  getPreOrders(vendorId: string): Observable<PreOrder[]> {\n    return this.http.get<PreOrder[]>(`${this.apiUrl}/public/vendors/${vendorId}/pre-orders`);\n  }\n\n  updatePreOrderWeightAndPrice(vendorId: string, preOrder: PreOrder): Observable<unknown> {\n    const patchUrl = `${this.apiUrl}/vendors/${vendorId}/pre-orders/${preOrder.sodId}`;\n    const body = {\n      weight: preOrder.weight,\n      price: preOrder.price,\n    };\n    return this.http.patch(patchUrl, body);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpEvent } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { InventoryItem } from '../models/product.model';\nimport { AuthService } from './auth.service';\nimport { PaginatedResponse } from '../models/paginate-response.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient, private authService: AuthService) {}\n\n  /**\n   * Fetch products with pagination and search term\n   */\n  getProducts(page: number, size: number, searchTerm: string): Observable<InventoryItem[]> {\n    const params = new HttpParams().set('page', page.toString()).set('size', size.toString()).set('search', searchTerm);\n\n    return this.http.get<PaginatedResponse<InventoryItem>>(`${this.apiUrl}/products`, { params }).pipe(map((response) => response.content));\n  }\n\n  /**\n   * Upload a photo for a specific product\n   */\n  uploadProductImage(productId: number, file: File): Observable<HttpEvent<InventoryItem>> {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    return this.http.post<InventoryItem>(`${this.apiUrl}/products/${productId}/photos`, formData, {\n      reportProgress: true,\n      observe: 'events',\n    });\n  }\n\n  /**\n   * Delete a photo for a specific product\n   */\n  deleteProductPhoto(productId: number): Observable<void> {\n    const url = `${this.apiUrl}/products/${productId}/photos`; // Full API endpoint\n    return this.http.delete<void>(url); // Use DELETE HTTP method\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PwaService {\n  private isPwa = new BehaviorSubject<boolean>(false);\n  isPwa$ = this.isPwa.asObservable();\n\n  updateValue(isPwa: boolean): void {\n    this.isPwa.next(isPwa);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarRef, MatSnackBarVerticalPosition, TextOnlySnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SnackbarService {\n  private snackBarRef!: MatSnackBarRef<TextOnlySnackBar>;\n  private duration = 10000;\n  private verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n  private horizontalPos: MatSnackBarHorizontalPosition = 'center';\n  private action = 'Hide';\n\n  // Define standard styles\n  private styles = {\n    error: 'error-snackbar',\n    success: 'success-snackbar',\n    warning: 'warning-snackbar',\n    info: 'info-snackbar',\n  };\n\n  constructor(private matSnackBar: MatSnackBar) {}\n\n  private showSnackBar(message: string, style?: 'error' | 'success' | 'warning' | 'info', duration: number = this.duration) {\n    // Close any existing snackbar\n    this.closeSnackBar();\n\n    // Get the appropriate style class\n    const panelClass = style ? this.styles[style] : undefined;\n\n    this.snackBarRef = this.matSnackBar.open(message, this.action, {\n      duration: duration,\n      verticalPosition: this.verticalPosition,\n      horizontalPosition: this.horizontalPos,\n      panelClass: panelClass,\n    });\n\n    this.snackBarRef.onAction().subscribe(() => {\n      this.closeSnackBar();\n    });\n\n    return this.snackBarRef;\n  }\n\n  // Convenience methods for different types of messages\n  showError(message: string, duration?: number) {\n    return this.showSnackBar(message, 'error', duration);\n  }\n\n  showSuccess(message: string, duration?: number) {\n    return this.showSnackBar(message, 'success', duration);\n  }\n\n  showWarning(message: string, duration?: number) {\n    return this.showSnackBar(message, 'warning', duration);\n  }\n\n  showInfo(message: string, duration?: number) {\n    return this.showSnackBar(message, 'info', duration);\n  }\n\n  closeSnackBar() {\n    if (this.snackBarRef) {\n      this.snackBarRef.dismiss();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n// Define the type for the vendor data\nexport interface Vendor {\n  id: number;\n  name: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class VendorsService {\n  private apiUrl = `${environment.apiUrl}/vendors`; // Base API endpoint for vendors\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Fetch the list of vendors from the API\n   * @returns Observable of vendor data\n   */\n  getVendors(): Observable<Vendor[]> {\n    return this.http.get<Vendor[]>(this.apiUrl);\n  }\n}\n","export const environment = {\n  production: false,\n  apiUrl: 'https://uat-pffc.onrender.com/api',\n};\n","import { AppComponent } from './app/app.component';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { CommonModule } from '@angular/common'; \nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { provideAnimations } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app/app-routing.module';\nimport { BrowserModule, bootstrapApplication } from '@angular/platform-browser';\nimport { GlobalErrorHandlerService } from './app/services/global-error-handler.service';\nimport { ErrorHandler, importProvidersFrom, isDevMode } from '@angular/core';\nimport { HTTP_INTERCEPTORS, provideHttpClient, withInterceptorsFromDi } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { AuthInterceptor } from './app/interceptors/auth.interceptor';\nimport { provideServiceWorker } from '@angular/service-worker';\nimport { provideCharts, withDefaultRegisterables } from 'ng2-charts';\n\nbootstrapApplication(AppComponent, {\n  providers: [\n    importProvidersFrom(\n      BrowserModule,\n      AppRoutingModule,\n      RouterModule,\n      CommonModule, \n      FormsModule,  // Ensure FormsModule is imported for ngModel\n      ReactiveFormsModule,\n      MatSlideToggleModule,\n      MatTableModule,\n      MatSidenavModule,\n      MatToolbarModule,\n      MatIconModule,\n      MatListModule,\n      MatMenuModule,\n      MatSnackBarModule,\n      ModalModule.forRoot(),\n    ),\n    { provide: ErrorHandler, useClass: GlobalErrorHandlerService },\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    provideHttpClient(withInterceptorsFromDi()),\n    provideAnimations(), \n    provideServiceWorker('ngsw-worker.js', {\n      enabled: !isDevMode(),\n      registrationStrategy: 'registerWhenStable:30000'\n    }), \n    provideCharts(withDefaultRegisterables()),\n  ],\n}).catch((err) => console.error(err));\n"],"names":["RouterModule","DriverRouteComponent","HomeComponent","OrderLinksComponent","LoginComponent","LogoutComponent","ProductsComponent","OrderConfirmationComponent","OrderExistsComponent","OrderFormComponent","DataComponent","OrdersComponent","VendorLinksComponent","PreorderFormComponent","AuthGuard","PasswordRequestComponent","PasswordResetComponent","ReportsComponent","EmployeeApplicationComponent","HireChecklistComponent","EmploymentVerificationComponent","W4FormComponent","WithholdingComponent","routes","path","redirectTo","pathMatch","component","title","canActivate","AppRoutingModule","forRoot","imports","i1","exports","isDevMode","RouterOutlet","CommonModule","MatToolbarModule","MatIconModule","environment","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","apiUrl","AppComponent","constructor","router","meta","swUpdate","showWarning","includes","alert","ngOnInit","setTitle","addTags","name","content","checkForUpdate","isEnabled","then","isUpdateAvailable","confirmUpdate","confirm","activateUpdate","window","location","reload","catch","error","console","ɵɵdirectiveInject","Router","i2","Title","Meta","i3","SwUpdate","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","AppComponent_div_6_Template","AppComponent_div_7_Template","ɵɵproperty","i4","NgIf","styles","changeDetection","ɵɵlistener","AppInstallPromptComponent_Conditional_0_Template_button_click_1_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","promptInstall","AppInstallPromptComponent_Conditional_2_Template_button_click_1_listener","_r3","showIosInstructions","AppInstallPromptComponent","pwaService","snackbarService","platform","deferredPrompt","userAgent","navigator","toLowerCase","isPwa$","isPwa","isRunningAsPWA","isIosButNotPwa","isIOS","plat","beforeInstallPromptHandler","event","preventDefault","updateValue","addEventListener","ngOnDestroy","removeEventListener","prompt","userChoice","showInfo","test","IOS","isStandalone","matchMedia","matches","isIOSStandalone","isFullscreen","innerHeight","screen","height","PwaService","SnackbarService","Platform","AppInstallPromptComponent_Template","AppInstallPromptComponent_Conditional_0_Template","AppInstallPromptComponent_Conditional_2_Template","ɵɵconditional","ɵɵpipeBind1","AsyncPipe","http","snackBar","uploadUrl","downloadOrders","url","get","responseType","subscribe","response","blob","Blob","type","downloadURL","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL","open","duration","onFileSelected","fileInput","target","files","length","file","uploadFile","formData","FormData","append","post","next","HttpClient","MatSnackBar","DataComponent_Template","DataComponent_Template_button_click_1_listener","DataComponent_Template_button_click_3_listener","fileInput_r2","ɵɵreference","DataComponent_Template_input_change_5_listener","$event","SecurityContext","map","tap","HttpEventType","ImageThumbnailComponent","MatTableModule","driverNames_r4","i_r5","ɵɵtextInterpolate1","dataSource_r7","indexOf","element_r6","timeDifference","DriverRouteComponent_table_18_td_3_div_2_Template","deliveryAddress1","ctx_r8","getGoogleMapsUrl","element_r8","deliveryAddress2","deliveryAddress3","ɵɵsanitizeUrl","ɵɵtextInterpolate2","ɵɵpropertyInterpolate1","element_r10","customerPhone","DriverRouteComponent_table_18_td_12_div_1_Template_input_change_1_listener","_r11","element_r12","$implicit","DriverRouteComponent_table_18_td_12_div_1_Template_button_click_3_listener","fileInput_r13","fileUrl","ɵɵpipeBind2","actualArrivalTime","DriverRouteComponent_table_18_td_12_div_1_Template","DriverRouteComponent_table_18_td_12_ng_template_2_Template","ɵɵtemplateRefExtractor","alreadyArrivedBlock_r14","ɵɵpureFunction1","_c1","row_r15","ɵɵelementContainerStart","DriverRouteComponent_table_18_th_2_Template","DriverRouteComponent_table_18_td_3_Template","DriverRouteComponent_table_18_th_5_Template","DriverRouteComponent_table_18_td_6_Template","DriverRouteComponent_table_18_th_8_Template","DriverRouteComponent_table_18_td_9_Template","DriverRouteComponent_table_18_th_11_Template","DriverRouteComponent_table_18_td_12_Template","DriverRouteComponent_table_18_tr_13_Template","DriverRouteComponent_table_18_tr_14_Template","displayedColumns","driverRouteService","snackBarService","sanitizer","cdr","maxFileSize","selectedFile","today","formatDate","Date","driverNames$","getDrivers","pipe","data","refreshDeliverRoute","date","month","getMonth","slice","day","getDate","year","getFullYear","driverName","deliveryDate","formattedDate","toISOString","split","deliveryRoute$","getDeliveryRoute","deliveryStops","calculateTimeDifferences","deliveryRoute","input","startsWith","size","showError","showSuccess","uploadPhoto","id","Response","updatedDeliveryStop","body","Object","assign","closeSnackBar","detectChanges","address2","address3","encodeURIComponent","sanitizedUrl","sanitize","bypassSecurityTrustUrl","i","currentStop","previousStop","currentTime","plannedArrivalTime","getTime","previousTime","timeDifferenceInMinutes","Math","round","undefined","DriverRouteService","DomSanitizer","ChangeDetectorRef","DriverRouteComponent_Template","DriverRouteComponent_Template_select_change_9_listener","driverName_r2","deliveryDate2_r3","value","DriverRouteComponent_option_11_Template","DriverRouteComponent_table_18_Template","ɵɵpureFunction0","_c0","NgClass","NgForOf","DatePipe","i5","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","i6","RouterLink","FormsModule","ɵɵtwoWayListener","EmployeeApplicationComponent_div_84_Template_input_ngModelChange_2_listener","ɵɵtwoWayBindingSet","employee","authorizedToWork","ɵɵtwoWayProperty","EmployeeApplicationComponent_div_89_Template_input_ngModelChange_3_listener","workedBeforeWhen","EmployeeApplicationComponent_div_157_Template_input_ngModelChange_4_listener","reference_r5","_r4","fullName","EmployeeApplicationComponent_div_157_Template_input_ngModelChange_7_listener","relationship","EmployeeApplicationComponent_div_157_Template_input_ngModelChange_10_listener","company","EmployeeApplicationComponent_div_157_Template_input_ngModelChange_13_listener","phone","EmployeeApplicationComponent_div_157_Template_input_ngModelChange_16_listener","address","EmployeeApplicationComponent_div_162_Template_input_ngModelChange_4_listener","job_r7","_r6","EmployeeApplicationComponent_div_162_Template_input_ngModelChange_7_listener","EmployeeApplicationComponent_div_162_Template_input_ngModelChange_10_listener","EmployeeApplicationComponent_div_162_Template_input_ngModelChange_13_listener","supervisor","EmployeeApplicationComponent_div_162_Template_input_ngModelChange_16_listener","jobTitle","EmployeeApplicationComponent_div_162_Template_input_ngModelChange_19_listener","startingSalary","EmployeeApplicationComponent_div_162_Template_input_ngModelChange_22_listener","endingSalary","EmployeeApplicationComponent_div_162_Template_input_ngModelChange_25_listener","responsibilities","EmployeeApplicationComponent_div_162_Template_input_ngModelChange_28_listener","from","EmployeeApplicationComponent_div_162_Template_input_ngModelChange_31_listener","to","EmployeeApplicationComponent_div_162_Template_input_ngModelChange_34_listener","reasonForLeaving","EmployeeApplicationComponent_div_162_Template_input_ngModelChange_36_listener","contactSupervisor","EmployeeApplicationComponent_button_222_Template_button_click_0_listener","_r8","nextStep","EmployeeApplicationComponent_button_223_Template_button_click_0_listener","_r9","submitApplication","currentStep","city","state","zip","email","dateAvailable","socialSecurityNumber","desiredSalary","positionApplied","isCitizen","workedBefore","education","highSchool","graduated","degree","college","other","references","previousEmployment","militaryService","branch","rankAtDischarge","typeOfDischarge","explanation","disclaimer","signature","goToStep","step","prevStep","goToHome","navigate","log","EmployeeApplicationComponent_Template","EmployeeApplicationComponent_Template_img_click_4_listener","EmployeeApplicationComponent_Template_div_click_6_listener","EmployeeApplicationComponent_Template_div_click_8_listener","EmployeeApplicationComponent_Template_div_click_10_listener","EmployeeApplicationComponent_Template_div_click_12_listener","EmployeeApplicationComponent_Template_div_click_14_listener","EmployeeApplicationComponent_Template_div_click_16_listener","EmployeeApplicationComponent_Template_input_ngModelChange_25_listener","EmployeeApplicationComponent_Template_input_ngModelChange_29_listener","EmployeeApplicationComponent_Template_input_ngModelChange_34_listener","EmployeeApplicationComponent_Template_input_ngModelChange_38_listener","EmployeeApplicationComponent_Template_input_ngModelChange_46_listener","EmployeeApplicationComponent_Template_input_ngModelChange_51_listener","EmployeeApplicationComponent_Template_input_ngModelChange_55_listener","EmployeeApplicationComponent_Template_input_ngModelChange_59_listener","EmployeeApplicationComponent_Template_input_ngModelChange_67_listener","EmployeeApplicationComponent_Template_input_ngModelChange_71_listener","EmployeeApplicationComponent_Template_input_ngModelChange_76_listener","EmployeeApplicationComponent_Template_input_ngModelChange_82_listener","EmployeeApplicationComponent_div_84_Template","EmployeeApplicationComponent_Template_input_ngModelChange_87_listener","EmployeeApplicationComponent_div_89_Template","EmployeeApplicationComponent_Template_input_ngModelChange_97_listener","EmployeeApplicationComponent_Template_input_ngModelChange_100_listener","EmployeeApplicationComponent_Template_input_ngModelChange_103_listener","EmployeeApplicationComponent_Template_input_ngModelChange_106_listener","EmployeeApplicationComponent_Template_input_ngModelChange_108_listener","EmployeeApplicationComponent_Template_input_ngModelChange_112_listener","EmployeeApplicationComponent_Template_input_ngModelChange_117_listener","EmployeeApplicationComponent_Template_input_ngModelChange_120_listener","EmployeeApplicationComponent_Template_input_ngModelChange_123_listener","EmployeeApplicationComponent_Template_input_ngModelChange_126_listener","EmployeeApplicationComponent_Template_input_ngModelChange_128_listener","EmployeeApplicationComponent_Template_input_ngModelChange_132_listener","EmployeeApplicationComponent_Template_input_ngModelChange_137_listener","EmployeeApplicationComponent_Template_input_ngModelChange_140_listener","EmployeeApplicationComponent_Template_input_ngModelChange_143_listener","EmployeeApplicationComponent_Template_input_ngModelChange_146_listener","EmployeeApplicationComponent_Template_input_ngModelChange_148_listener","EmployeeApplicationComponent_Template_input_ngModelChange_152_listener","EmployeeApplicationComponent_div_157_Template","EmployeeApplicationComponent_div_162_Template","EmployeeApplicationComponent_Template_input_ngModelChange_170_listener","EmployeeApplicationComponent_Template_input_ngModelChange_173_listener","EmployeeApplicationComponent_Template_input_ngModelChange_176_listener","EmployeeApplicationComponent_Template_input_ngModelChange_179_listener","EmployeeApplicationComponent_Template_input_ngModelChange_182_listener","EmployeeApplicationComponent_Template_input_ngModelChange_185_listener","EmployeeApplicationComponent_Template_input_ngModelChange_214_listener","EmployeeApplicationComponent_Template_input_ngModelChange_218_listener","EmployeeApplicationComponent_Template_button_click_220_listener","EmployeeApplicationComponent_button_222_Template","EmployeeApplicationComponent_button_223_Template","ɵɵclassProp","ɵɵtextInterpolate4","DefaultValueAccessor","NumberValueAccessor","CheckboxControlValueAccessor","NgControlStatus","NgModel","Validators","ReactiveFormsModule","fb","verificationForm","group","lastName","required","firstName","middleInitial","otherNames","aptNumber","zipCode","dateOfBirth","socialSecurity","telephone","citizenshipStatus","uscisNumber","i94Number","passportNumber","countryOfIssuance","employeeSignature","employeeSignatureDate","documentTitleA","issuingAuthorityA","documentNumberA","expirationDateA","documentTitleB","issuingAuthorityB","documentNumberB","expirationDateB","documentTitleC","issuingAuthorityC","documentNumberC","expirationDateC","additionalInformation","alternativeProcedure","firstDayOfEmployment","employerTitle","employerName","employerSignature","employerSignatureDate","businessName","businessAddress","patchValue","onSubmit","valid","keys","controls","forEach","key","control","invalid","markAsTouched","FormBuilder","EmploymentVerificationComponent_Template","EmploymentVerificationComponent_Template_form_ngSubmit_0_listener","EmploymentVerificationComponent_div_83_Template","tmp_1_0","ɵNgNoValidate","RadioControlValueAccessor","NgControlStatusGroup","FormGroupDirective","FormControlName","checklistForm","department","employmentApplication","other1","w4Form","i9Form","directDeposit","statusChange","handbookAcknowledgement","harassmentPolicy","propertyReturn","wageProtection","employeeHandbook","jobDescription","insuranceInfo","holidaySchedule","brochures","harassmentPamphlet","workersComp","disabilityInfo","phoneList","other2","companyHistory","orientationPeriod","departmentResponsibilities","positionDuties","workHours","attendance","timeOffProcedure","timeRecords","safetyRequirements","dressCode","other3","signatureDate","HireChecklistComponent_Template","HireChecklistComponent_Template_form_ngSubmit_0_listener","HomeComponent_div_7_Template_button_click_1_listener","navigateTo","HomeComponent_div_7_Template_button_click_3_listener","HomeComponent_div_7_Template_button_click_5_listener","HomeComponent_div_13_Template_button_click_1_listener","HomeComponent_div_13_Template_button_click_3_listener","HomeComponent_div_13_Template_button_click_5_listener","HomeComponent_div_13_Template_button_click_7_listener","HomeComponent_div_13_Template_button_click_9_listener","HomeComponent_div_13_Template_button_click_11_listener","HomeComponent_div_13_Template_button_click_13_listener","authService","isHROpen","isSalesOpen","username","getFullname","page","toggleHR","closeHR","toggleSales","logout","AuthService","HomeComponent_Template","HomeComponent_Template_button_click_2_listener","HomeComponent_Template_button_click_5_listener","HomeComponent_div_7_Template","HomeComponent_Template_button_click_8_listener","HomeComponent_Template_button_click_11_listener","HomeComponent_div_13_Template","HomeComponent_Template_button_click_14_listener","HomeComponent_Template_button_click_16_listener","ImageThumbnailComponent_ng_template_2_Template_button_click_3_listener","ctx_r3","modalRef","hide","ImageThumbnailComponent_ng_template_2_Template_img_click_7_listener","ImageThumbnailComponent_ng_template_2_Template_img_keyup_7_listener","imageUrl","modalService","openModal","show","class","BsModalService","inputs","ImageThumbnailComponent_Template","ImageThumbnailComponent_Template_div_click_0_listener","imageModal_r2","ImageThumbnailComponent_Template_img_keyup_1_listener","ImageThumbnailComponent_ng_template_2_Template","MatFormFieldModule","MatInputModule","MatButtonModule","catchError","throwError","errorMessage","formBuilder","loading","loginForm","password","onLogin","login","loginError","errorCode","status","message","markForCheck","loginResponse","fullname","trim","saveFullnameAndToken","token","LoginComponent_Template","LoginComponent_Template_form_ngSubmit_6_listener","LoginComponent_span_18_Template","LoginComponent_span_19_Template","LoginComponent_div_20_Template","MatFormField","MatLabel","MatInput","i7","MatButton","imageBackgroundColor","imageSrc","LogoComponent_Conditional_0_div_1_Template","companyId","LogoComponent_Conditional_1_div_0_Template","LogoComponent","isLoggedIn","updateLogo","ngOnChanges","ɵɵNgOnChangesFeature","LogoComponent_Template","LogoComponent_Conditional_0_Template","LogoComponent_Conditional_1_Template","NgStyle","LogoutComponent_Template","product_r1","profileDescription","unitType","packSize","salesPrice","quantity","orderData","shipToName","history","goBack","customerId","Location","OrderConfirmationComponent_Template","OrderConfirmationComponent_tr_21_Template","OrderConfirmationComponent_div_33_Template","OrderConfirmationComponent_Template_button_click_38_listener","customerName","profiles","ɵɵpipeBind3","totalPrice","shipToId","DecimalPipe","CurrencyPipe","MAT_DIALOG_DATA","MatDialogModule","profile_r1","OrderDetailsDialogComponent","order","dialogRef","closeDialog","close","MatDialogRef","OrderDetailsDialogComponent_Template","OrderDetailsDialogComponent_tr_47_Template","customerPo","salesRepName","MatDialogClose","MatDialogTitle","MatDialogActions","MatDialogContent","route","back","ActivatedRoute","OrderExistsComponent_Template","OrderExistsComponent_tr_21_Template","OrderExistsComponent_div_36_Template","OrderExistsComponent_Template_button_click_37_listener","salesRepPhone","shipTo_r3","OrderFormComponent_form_0_div_6_option_5_Template","OrderFormComponent_form_0_div_6_div_6_Template","shipTos","tmp_3_0","orderForm","touched","errors","OrderFormComponent_form_0_div_7_ng_container_20_tr_1_div_6_Template","i_r6","isQuantityEntered","tmp_9_0","profile_r5","ɵɵpipeBind4","getRowTotalPrice","OrderFormComponent_form_0_div_7_ng_container_20_tr_1_Template","isSpecial","OrderFormComponent_form_0_div_7_ng_container_20_Template","profileControls","OrderFormComponent_form_0_ng_container_27_tr_1_div_6_Template","i_r9","tmp_8_0","profile_r8","OrderFormComponent_form_0_ng_container_27_tr_1_Template","item_r11","OrderFormComponent_form_0_div_51_Template_span_click_2_listener","_r10","closeModal","OrderFormComponent_form_0_div_51_tr_22_Template","currentOrderItems","OrderFormComponent_form_0_Template_form_ngSubmit_0_listener","OrderFormComponent_form_0_div_5_Template","OrderFormComponent_form_0_div_6_Template","OrderFormComponent_form_0_div_7_Template","OrderFormComponent_form_0_ng_container_27_Template","OrderFormComponent_form_0_div_28_Template","OrderFormComponent_form_0_div_29_Template","OrderFormComponent_form_0_div_34_Template","OrderFormComponent_form_0_Template_button_click_35_listener","showCurrentOrder","OrderFormComponent_form_0_div_47_Template","OrderFormComponent_form_0_div_48_Template","OrderFormComponent_form_0_div_49_Template","OrderFormComponent_form_0_div_50_Template","OrderFormComponent_form_0_div_51_Template","hasSpecials","submitted","tmp_7_0","hasError","formControls","dirty","showModal","orderService","paramMap","params","NaN","loadOrderData","getOrderData","sort","a","b","localeCompare","some","profile","shipToValidators","dateAfterTomorrowValidator","dateWithinThreeMonthsValidator","dateNotOnSundayValidator","array","createProfileGroup","atLeastOneQuantityValidator","at","price","index","profileDid","min","filter","placeOrder","orderConfirmation","markAllAsTouched","item","dateValue","now","twoAmToday","isNaN","dateAfterTomorrow","formArray","hasAtLeastOneQuantity","atLeastOneQuantity","threeMonthsFromNow","dateWithinThreeMonths","getUTCDay","dateNotOnSunday","OrderFormService","OrderFormComponent_Template","OrderFormComponent_form_0_Template","NgSelectOption","ɵNgSelectMultipleOption","SelectControlValueAccessor","FormGroupName","FormArrayName","Observable","switchMap","company_r1","salesperson_r2","OrderLinksComponent_tr_33_Template_a_click_7_listener","customer_r4","ctx_r4","copyLink","OrderLinksComponent_tr_33_Template_a_keyup_7_listener","orderLinksService","customers","filteredCustomers","form","salesPerson","searchText","companies$","getCompanies","companies","defaultCompany","find","setValue","valueChanges","getSalesPersons","salesreps","salesPersons$","observer","complete","salesrep","getCustomers","customer","generateLink","baseUrl","replace","clipboard","writeText","err","OrderLinksService","OrderLinksComponent_Template","OrderLinksComponent_option_11_Template","OrderLinksComponent_option_17_Template","OrderLinksComponent_tr_33_Template","tmp_2_0","OrdersComponent_tr_37_Template_tr_click_0_listener","item_r4","onRowClick","dialog","orders","filteredOrders","loadCompanies","setupSalesPersonListener","setupOrdersListener","setupCustomerNameFilterListener","loadSalesRep","loadOrders","applyFilters","width","OrderService","MatDialog","OrdersComponent_Template","OrdersComponent_option_11_Template","OrdersComponent_option_17_Template","OrdersComponent_tr_37_Template","passwordRequestForm","passwordRequest","PasswordRequestComponent_Template","PasswordRequestComponent_Template_form_ngSubmit_7_listener","mismatchedPassword","passwordResetForm","minLength","specialCharacterValidator","confirmPassword","passwordReset","hasSpecialCharacter","noSpecialCharacter","PasswordResetComponent_Template","PasswordResetComponent_Template_form_ngSubmit_7_listener","PasswordResetComponent_div_16_Template","PasswordResetComponent_div_17_Template","PasswordResetComponent_div_18_Template","i8","PreorderFormComponent_tr_26_div_16_Template","PreorderFormComponent_tr_26_div_22_Template","i_r2","preOrder_r1","tmp_5_0","tmp_6_0","ctx_r2","getUnitType","tmp_10_0","tmp_11_0","tmp_12_0","preorderService","preOrderForm","preOrders","vendorId","getPreOrders","setPreOrders","preOrderFormGroups","preOrder","createPreOrderForm","preOrderFormArray","setControl","sodId","dispatchDate","descriptionMemo","unitSize","weight","preOrdersArray","getModifiedPreOrders","preOrderGroup","submitAll","modifiedPreOrders","updatePreOrderWeightAndPrice","trackByOrderId","unitTypeMap","PreorderService","PreorderFormComponent_Template","PreorderFormComponent_Template_form_ngSubmit_5_listener","PreorderFormComponent_tr_26_Template","MinValidator","VendorLinksComponent_tr_16_Template_a_click_7_listener","vendor_r2","VendorLinksComponent_tr_16_Template_a_keyup_7_listener","vendorsService","vendors$","getVendors","navigateToPreorderForm","VendorsService","VendorLinksComponent_Template","VendorLinksComponent_tr_16_Template","DOC_ORIENTATION","ProductDetailsDialogComponent_ng_container_6_Template_div_click_3_listener","_r2","deletePhoto","photoUrl","ProductDetailsDialogComponent_ng_template_7_Template_input_change_0_listener","ProductDetailsDialogComponent_ng_template_7_Template_button_click_2_listener","fileInput_r5","triggerFileInput","compCost","yield","laborPackCost","tmp_4_0","ProductDetailsDialogComponent","productService","imageCompress","toggleInfoVisibility","reader","FileReader","readAsDataURL","onload","imageBase64","result","compressFile","Default","compressedImage","dataURItoBlob","compressedFile","File","uploadProductImage","compItemId","updatedItem","deleteProductPhoto","dataURI","byteString","atob","mimeString","arrayBuffer","ArrayBuffer","intArray","Uint8Array","charCodeAt","ProductService","NgxImageCompressService","ProductDetailsDialogComponent_Template","ProductDetailsDialogComponent_ng_container_6_Template","ProductDetailsDialogComponent_ng_template_7_Template","ProductDetailsDialogComponent_Template_button_click_9_listener","ProductDetailsDialogComponent_div_11_Template","compDescription","compInstructions","uploadButton_r6","origin","notes","woh","buyer","sixtySales","tenSales","preOrderHours","debounceTime","distinctUntilChanged","BehaviorSubject","Subject","InfiniteScrollDirective","FormControl","origin_r2","buyer_r3","ProductsComponent_table_38_tr_12_Template_tr_click_0_listener","item_r5","ctx_r5","ProductsComponent_table_38_tr_12_Template","products_r7","searchTerm","showRelevantItems","showSixtySales","showWoh","showYield","showWithImages","originFilter","packSizeFilter","buyerFilter","minCompCost","minCompCostControl","uniqueOrigins","uniquePackSizes","uniqueBuyers","searchSubject","inventoryItemsSubject","inventoryItems$","asObservable","loadData","searchSubscription","trimComparator","parseFloat","onCompCostChange","getProducts","currentData","newData","currentItem","filteredData","fullyFilteredData","populateUniqueDropdowns","tagName","toggleRelevantItemsFilter","toggleSixtySalesFilter","toggleWohFilter","toggleYieldFilter","toggleWithImagesFilter","onFilterChange","onScroll","onSearchChange","prev","curr","unsubscribe","products","Set","Boolean","Number","ProductsComponent_Template","ProductsComponent_Template_div_scrolled_0_listener","ProductsComponent_Template_input_input_7_listener","ProductsComponent_Template_button_click_9_listener","ProductsComponent_Template_button_click_11_listener","ProductsComponent_Template_button_click_13_listener","ProductsComponent_Template_button_click_15_listener","ProductsComponent_Template_button_click_17_listener","ProductsComponent_Template_select_change_23_listener","ProductsComponent_Template_select_ngModelChange_23_listener","ProductsComponent_option_26_Template","ProductsComponent_Template_input_ngModelChange_30_listener","ProductsComponent_Template_input_input_30_listener","ProductsComponent_Template_select_change_34_listener","ProductsComponent_Template_select_ngModelChange_34_listener","ProductsComponent_option_37_Template","ProductsComponent_table_38_Template","ProductsComponent_ng_template_40_Template","noData_r8","cityStateZip","filingStatus","multipleJobs","qualifyingChildren","otherDependents","totalDependents","otherIncome","deductions","extraWithholding","employerAddress","firstDateEmployment","employerEIN","calculateDependents","children","others","total","W4FormComponent_Template","W4FormComponent_Template_form_ngSubmit_0_listener","W4FormComponent_Template_input_change_64_listener","W4FormComponent_Template_input_change_72_listener","withholdingForm","regularAllowances","estimatedDeductions","totalAllowances","additionalAmount","exemptionClaim","militaryExemption","payrollTaxNumber","calculateTotalAllowances","regular","estimated","WithholdingComponent_Template","WithholdingComponent_Template_form_ngSubmit_0_listener","WithholdingComponent_Template_input_change_55_listener","WithholdingComponent_Template_input_change_60_listener","ɵɵinject","factory","ɵfac","providedIn","AuthInterceptor","intercept","req","getToken","clonedRequest","clone","setHeaders","Authorization","handle","SalesPerDayChartComponent","SalesPerSalesRepChartComponent","SalesPerSalesRepCustomerComponent","pastMonths","lineChartLegend","lineChartData","labels","datasets","label","fill","tension","borderColor","backgroundColor","lineChartOptions","responsive","pieChartOptions","plugins","legend","position","pieChartLabels","pieChartDatasets","pieChartLegend","pieChartPlugins","barChartLegend","barChartPlugins","barChartData","doughnutChartLabels","doughnutChartDatasets","doughnutChartOptions","fetchChartData","months","ReportsComponent_Template","ReportsComponent_Template_select_change_7_listener","months_r2","BaseChartDirective","tooltip","callbacks","context","raw","toLocaleString","changes","chartData$","getTotalAmountPerCustomer","totalAmount","SalesPerSalesRepCustomerComponent_Template","SalesPerSalesRepCustomerComponent_canvas_0_Template","SalesPerSalesRepCustomerComponent_ng_template_2_Template","loading_r2","chartData_r1","barChartOptions","scales","y","beginAtZero","ticks","callback","display","getTotalAmountPerDay","entry","convertDateFormat","dateString","parts","SalesPerDayChartComponent_Template","SalesPerDayChartComponent_canvas_0_Template","SalesPerDayChartComponent_ng_template_2_Template","loading_r3","getTotalAmountPerSalesRep","SalesPerSalesRepChartComponent_Template","SalesPerSalesRepChartComponent_canvas_0_Template","SalesPerSalesRepChartComponent_ng_template_2_Template","tokenKey","fullnameKey","localStorage","setItem","getItem","removeItem","HttpParams","set","hasArrived","patch","deliveryStopId","reportProgress","observe","HttpErrorResponse","GlobalErrorHandlerService","handleError","onLine","ErrorEvent","statusText","company_id","salesrep_name","past_hours","patchUrl","toString","productId","delete","matSnackBar","verticalPosition","horizontalPos","action","success","warning","info","showSnackBar","style","panelClass","snackBarRef","horizontalPosition","onAction","dismiss","production","ModalModule","MatSnackBarModule","MatMenuModule","MatListModule","MatSidenavModule","MatSlideToggleModule","provideAnimations","BrowserModule","bootstrapApplication","ErrorHandler","importProvidersFrom","HTTP_INTERCEPTORS","provideHttpClient","withInterceptorsFromDi","provideServiceWorker","provideCharts","withDefaultRegisterables","providers","provide","useClass","multi","enabled","registrationStrategy"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}